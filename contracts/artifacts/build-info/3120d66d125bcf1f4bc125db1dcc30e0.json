{
	"id": "3120d66d125bcf1f4bc125db1dcc30e0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AddLiquidity.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport \"../interfaces/IUniswapV3Pool.sol\";\r\nimport \"../libraries/TickMath.sol\";\r\nimport \"../interfaces/IERC721Receiver.sol\";\r\nimport \"../interfaces/ISwapRouter.sol\";\r\nimport \"../interfaces/INonfungiblePositionManager.sol\";\r\nimport \"../libraries/TransferHelper.sol\";\r\nimport \"./base/LiquidityManagement.sol\";\r\n\r\ncontract AddLiquidity is IERC721Receiver{\r\n    INonfungiblePositionManager public immutable nonfungiblePositionManager;\r\n\r\n    /// @notice Represents the deposit of an NFT\r\n    struct Deposit {\r\n        address owner;\r\n        uint128 liquidity;\r\n    }\r\n\r\n    /// @dev deposits[tokenId] => Deposit\r\n    mapping(uint256 => Deposit) public deposits;\r\n\r\n    constructor(INonfungiblePositionManager _nonfungiblePositionManager) {\r\n        nonfungiblePositionManager = _nonfungiblePositionManager;\r\n    }\r\n\r\n    struct MintNewPositionParams{\r\n        address token0;\r\n        address token1;\r\n        uint24 poolFee;\r\n        uint256 token0Amount;\r\n        uint256 token1Amount;\r\n    }\r\n\r\n    /// @notice Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 token0 and 1000 token1 in liquidity\r\n    /// @return tokenId The id of the newly minted ERC721\r\n    /// @return liquidity The amount of liquidity for the position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mintNewPosition(\r\n        MintNewPositionParams calldata mintParams\r\n    )external\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        )\r\n    {   \r\n        IERC20(mintParams.token0).transferFrom(msg.sender, address(this), mintParams.token0Amount);\r\n        IERC20(mintParams.token1).transferFrom(msg.sender, address(this), mintParams.token0Amount);\r\n\r\n        // Approve the position manager\r\n        TransferHelper.safeApprove(\r\n            mintParams.token0,\r\n            address(nonfungiblePositionManager),\r\n            mintParams.token0Amount\r\n        );\r\n        TransferHelper.safeApprove(\r\n            mintParams.token1,\r\n            address(nonfungiblePositionManager),\r\n            mintParams.token1Amount\r\n        );\r\n\r\n        INonfungiblePositionManager.MintParams\r\n            memory params = INonfungiblePositionManager.MintParams({\r\n                token0: mintParams.token0,\r\n                token1: mintParams.token1,\r\n                fee: mintParams.poolFee,\r\n                tickLower: TickMath.MIN_TICK,\r\n                tickUpper: TickMath.MAX_TICK,\r\n                amount0Desired: mintParams.token0Amount,\r\n                amount1Desired: mintParams.token1Amount,\r\n                amount0Min: 0,\r\n                amount1Min: 0,\r\n                recipient: msg.sender,\r\n                deadline: block.timestamp + 30\r\n            });\r\n\r\n        // Note that the pool defined by token0/token1 and fee tier 0.3% must already be created and initialized in order to mint\r\n        (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);\r\n\r\n        // Create a deposit\r\n        // _createDeposit(msg.sender, tokenId);\r\n\r\n        // Remove allowance and refund in both assets.\r\n        if (amount0 < mintParams.token0Amount) {\r\n            TransferHelper.safeApprove(\r\n                params.token0,\r\n                address(nonfungiblePositionManager),\r\n                0\r\n            );\r\n            // uint256 refund0 = mintParams.token0Amount - amount0;\r\n            TransferHelper.safeTransfer(params.token0, msg.sender, mintParams.token0Amount - amount0);\r\n        }\r\n\r\n        if (amount1 < mintParams.token1Amount) {\r\n            TransferHelper.safeApprove(\r\n                params.token1,\r\n                address(nonfungiblePositionManager),\r\n                0\r\n            );\r\n            // uint256 refund1 = mintParams.token1Amount - amount1;\r\n            TransferHelper.safeTransfer(params.token1, msg.sender, mintParams.token1Amount - amount1);\r\n        }\r\n    }\r\n\r\n    function increaseLiquidityCurrentRange(\r\n        uint256 tokenId,\r\n        uint256 amountAdd0,\r\n        uint256 amountAdd1\r\n    )\r\n        external\r\n        returns (\r\n            uint128 liquidity\r\n        )\r\n    {\r\n        INonfungiblePositionManager.IncreaseLiquidityParams memory params =\r\n            INonfungiblePositionManager.IncreaseLiquidityParams({\r\n                tokenId: tokenId,\r\n                amount0Desired: amountAdd0,\r\n                amount1Desired: amountAdd1,\r\n                amount0Min: 0,\r\n                amount1Min: 0,\r\n                deadline: block.timestamp + 30\r\n            });\r\n\r\n        (liquidity,,) = nonfungiblePositionManager.increaseLiquidity(params);\r\n    }\r\n\r\n    function onERC721Received(\r\n        address operator,\r\n        address,\r\n        uint256 tokenId,\r\n        bytes calldata\r\n    ) external override returns (bytes4) {\r\n        // get position information\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n    // function _createDeposit(address owner, uint256 tokenId) internal {\r\n        // (\r\n        //     ,\r\n        //     ,\r\n        //     ,\r\n        //     ,\r\n        //     ,\r\n        //     ,\r\n        //     ,\r\n        //     uint128 liquidity,\r\n        //     ,\r\n        //     ,\r\n        //     ,\r\n        // ) = nonfungiblePositionManager.positions(tokenId);\r\n        // nonfungiblePositionManager.positions(tokenId);\r\n\r\n        // set the owner and data for position\r\n        // operator is msg.sender\r\n        // deposits[tokenId] = Deposit({\r\n        //     owner: owner,\r\n        //     liquidity: liquidity\r\n        // });\r\n    // }\r\n}\r\n"
			},
			"contracts/base/LiquidityManagement.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\nimport '../../interfaces/IUniswapV3Factory.sol';\r\nimport '../../interfaces/callback/IUniswapV3MintCallback.sol';\r\nimport '../../libraries/TickMath.sol';\r\n\r\nimport '../../libraries/PoolAddress.sol';\r\nimport '../../libraries/CallbackValidation.sol';\r\nimport '../../libraries/LiquidityAmounts.sol';\r\n\r\nimport './PeripheryPayments.sol';\r\nimport './PeripheryImmutableState.sol';\r\n\r\n/// @title Liquidity management functions\r\n/// @notice Internal functions for safely managing liquidity in Uniswap V3\r\nabstract contract LiquidityManagement is IUniswapV3MintCallback, PeripheryImmutableState, PeripheryPayments {\r\n    struct MintCallbackData {\r\n        PoolAddress.PoolKey poolKey;\r\n        address payer;\r\n    }\r\n\r\n    /// @inheritdoc IUniswapV3MintCallback\r\n    function uniswapV3MintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata data\r\n    ) external override {\r\n        MintCallbackData memory decoded = abi.decode(data, (MintCallbackData));\r\n        CallbackValidation.verifyCallback(factory, decoded.poolKey);\r\n\r\n        if (amount0Owed > 0) pay(decoded.poolKey.token0, decoded.payer, msg.sender, amount0Owed);\r\n        if (amount1Owed > 0) pay(decoded.poolKey.token1, decoded.payer, msg.sender, amount1Owed);\r\n    }\r\n\r\n    struct AddLiquidityParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n        address recipient;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n    }\r\n\r\n    /// @notice Add liquidity to an initialized pool\r\n    function addLiquidity(AddLiquidityParams memory params)\r\n        internal\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1,\r\n            IUniswapV3Pool pool\r\n        )\r\n    {\r\n        PoolAddress.PoolKey memory poolKey =\r\n            PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee});\r\n\r\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\r\n\r\n        // compute the liquidity amount\r\n        {\r\n            (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\r\n            uint160 sqrtRatioAX96 = TickMath.getSqrtRatioAtTick(params.tickLower);\r\n            uint160 sqrtRatioBX96 = TickMath.getSqrtRatioAtTick(params.tickUpper);\r\n\r\n            liquidity = LiquidityAmounts.getLiquidityForAmounts(\r\n                sqrtPriceX96,\r\n                sqrtRatioAX96,\r\n                sqrtRatioBX96,\r\n                params.amount0Desired,\r\n                params.amount1Desired\r\n            );\r\n        }\r\n\r\n        (amount0, amount1) = pool.mint(\r\n            params.recipient,\r\n            params.tickLower,\r\n            params.tickUpper,\r\n            liquidity,\r\n            abi.encode(MintCallbackData({poolKey: poolKey, payer: msg.sender}))\r\n        );\r\n\r\n        require(amount0 >= params.amount0Min && amount1 >= params.amount1Min, 'Price slippage check');\r\n    }\r\n}\r\n"
			},
			"libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\nimport '../interfaces/IERC20.sol';\r\n\r\nlibrary TransferHelper {\r\n    /// @notice Transfers tokens from the targeted address to the given destination\r\n    /// @notice Errors with 'STF' if transfer fails\r\n    /// @param token The contract address of the token to be transferred\r\n    /// @param from The originating address from which the tokens will be transferred\r\n    /// @param to The destination address of the transfer\r\n    /// @param value The amount to be transferred\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) =\r\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\r\n    }\r\n\r\n    /// @notice Transfers tokens from msg.sender to a recipient\r\n    /// @dev Errors with ST if transfer fails\r\n    /// @param token The contract address of the token which will be transferred\r\n    /// @param to The recipient of the transfer\r\n    /// @param value The value of the transfer\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\r\n    }\r\n\r\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\r\n    /// @dev Errors with 'SA' if transfer fails\r\n    /// @param token The contract address of the token to be approved\r\n    /// @param to The target of the approval\r\n    /// @param value The amount of the given token the target will be allowed to spend\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\r\n    }\r\n\r\n    /// @notice Transfers ETH to the recipient address\r\n    /// @dev Fails with `STE`\r\n    /// @param to The destination of the transfer\r\n    /// @param value The value to be transferred\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, 'STE');\r\n    }\r\n}\r\n"
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport './IERC721Metadata.sol';\r\nimport './IERC721Enumerable.sol';\r\n\r\nimport './IPoolInitializer.sol';\r\nimport './IERC721Permit.sol';\r\nimport './IPeripheryPayments.sol';\r\nimport './IPeripheryImmutableState.sol';\r\nimport '../libraries/PoolAddress.sol';\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager is\r\n    IPoolInitializer,\r\n    IPeripheryPayments,\r\n    IPeripheryImmutableState,\r\n    IERC721Metadata,\r\n    IERC721Enumerable,\r\n    IERC721Permit\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return fee The fee associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            uint24 fee,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n}"
			},
			"interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\r\n\r\n/// @title Router token swapping functionality\r\n/// @notice Functions for swapping tokens via Uniswap V3\r\ninterface ISwapRouter is IUniswapV3SwapCallback {\r\n    struct ExactInputSingleParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 fee;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\r\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\r\n    /// @return amountOut The amount of the received token\r\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n    struct ExactInputParams {\r\n        bytes path;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n    }\r\n\r\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\r\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\r\n    /// @return amountOut The amount of the received token\r\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n    struct ExactOutputSingleParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 fee;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountOut;\r\n        uint256 amountInMaximum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\r\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\r\n    /// @return amountIn The amount of the input token\r\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\r\n\r\n    struct ExactOutputParams {\r\n        bytes path;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountOut;\r\n        uint256 amountInMaximum;\r\n    }\r\n\r\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\r\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\r\n    /// @return amountIn The amount of the input token\r\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\r\n}\r\n"
			},
			"interfaces/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\r\n}"
			},
			"libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n/// @title Math library for computing sqrt prices from ticks and vice versa\r\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\r\n/// prices between 2**-128 and 2**128\r\nlibrary TickMath {\r\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\r\n    int24 internal constant MIN_TICK = -887272;\r\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\r\n    int24 internal constant MAX_TICK = -MIN_TICK;\r\n\r\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\r\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\r\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\r\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\r\n\r\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\r\n    /// @dev Throws if |tick| > max tick\r\n    /// @param tick The input tick for the above formula\r\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\r\n    /// at the given tick\r\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\r\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\r\n        require(absTick <= uint256(-int256(tick)), 'T');\r\n\r\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\r\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\r\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\r\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\r\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\r\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\r\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\r\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\r\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\r\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\r\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\r\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\r\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\r\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\r\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\r\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\r\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\r\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\r\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\r\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\r\n\r\n        if (tick > 0) ratio = type(uint256).max / ratio;\r\n\r\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\r\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\r\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\r\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\r\n    }\r\n\r\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\r\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\r\n    /// ever return.\r\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\r\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\r\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\r\n        // second inequality must be < because the price can never reach the price at the max tick\r\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\r\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\r\n\r\n        uint256 r = ratio;\r\n        uint256 msb = 0;\r\n\r\n        assembly {\r\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(5, gt(r, 0xFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(4, gt(r, 0xFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(3, gt(r, 0xFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(2, gt(r, 0xF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(1, gt(r, 0x3))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := gt(r, 0x1)\r\n            msb := or(msb, f)\r\n        }\r\n\r\n        if (msb >= 128) r = ratio >> (msb - 127);\r\n        else r = ratio << (127 - msb);\r\n\r\n        int256 log_2 = (int256(msb) - 128) << 64;\r\n\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(63, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(62, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(61, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(60, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(59, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(58, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(57, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(56, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(55, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(54, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(53, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(52, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(51, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(50, f))\r\n        }\r\n\r\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\r\n\r\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\r\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\r\n\r\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\r\n    }\r\n}"
			},
			"interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport './pool/IUniswapV3PoolImmutables.sol';\r\nimport './pool/IUniswapV3PoolState.sol';\r\nimport './pool/IUniswapV3PoolDerivedState.sol';\r\nimport './pool/IUniswapV3PoolActions.sol';\r\nimport './pool/IUniswapV3PoolOwnerActions.sol';\r\nimport './pool/IUniswapV3PoolEvents.sol';\r\n\r\n/// @title The interface for a Uniswap V3 Pool\r\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\r\n/// to the ERC20 specification\r\n/// @dev The pool interface is broken up into many smaller pieces\r\ninterface IUniswapV3Pool is\r\n    IUniswapV3PoolImmutables,\r\n    IUniswapV3PoolState,\r\n    IUniswapV3PoolDerivedState,\r\n    IUniswapV3PoolActions,\r\n    IUniswapV3PoolOwnerActions,\r\n    IUniswapV3PoolEvents\r\n{\r\n\r\n}"
			},
			"interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Events emitted by a pool\r\n/// @notice Contains all events emitted by the pool\r\ninterface IUniswapV3PoolEvents {\r\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\r\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\r\n\r\n    /// @notice Emitted when liquidity is minted for a given position\r\n    /// @param sender The address that minted the liquidity\r\n    /// @param owner The owner of the position and recipient of any minted liquidity\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity minted to the position range\r\n    /// @param amount0 How much token0 was required for the minted liquidity\r\n    /// @param amount1 How much token1 was required for the minted liquidity\r\n    event Mint(\r\n        address sender,\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted when fees are collected by the owner of a position\r\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n    /// @param owner The owner of the position for which fees are collected\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount0 The amount of token0 fees collected\r\n    /// @param amount1 The amount of token1 fees collected\r\n    event Collect(\r\n        address indexed owner,\r\n        address recipient,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount0,\r\n        uint128 amount1\r\n    );\r\n\r\n    /// @notice Emitted when a position's liquidity is removed\r\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n    /// @param owner The owner of the position for which liquidity is removed\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity to remove\r\n    /// @param amount0 The amount of token0 withdrawn\r\n    /// @param amount1 The amount of token1 withdrawn\r\n    event Burn(\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any swaps between token0 and token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the output of the swap\r\n    /// @param amount0 The delta of the token0 balance of the pool\r\n    /// @param amount1 The delta of the token1 balance of the pool\r\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\r\n    /// @param liquidity The liquidity of the pool after the swap\r\n    /// @param tick The log base 1.0001 of price of the pool after the swap\r\n    event Swap(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        int256 amount0,\r\n        int256 amount1,\r\n        uint160 sqrtPriceX96,\r\n        uint128 liquidity,\r\n        int24 tick\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any flashes of token0/token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the tokens from flash\r\n    /// @param amount0 The amount of token0 that was flashed\r\n    /// @param amount1 The amount of token1 that was flashed\r\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n    event Flash(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        uint256 paid0,\r\n        uint256 paid1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\r\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\r\n    /// just before a mint/swap/burn.\r\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\r\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\r\n    event IncreaseObservationCardinalityNext(\r\n        uint16 observationCardinalityNextOld,\r\n        uint16 observationCardinalityNextNew\r\n    );\r\n\r\n    /// @notice Emitted when the protocol fee is changed by the pool\r\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\r\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\r\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\r\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\r\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\r\n\r\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\r\n    /// @param sender The address that collects the protocol fees\r\n    /// @param recipient The address that receives the collected protocol fees\r\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\r\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\r\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\r\n}"
			},
			"interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Permissioned pool actions\r\n/// @notice Contains pool methods that may only be called by the factory owner\r\ninterface IUniswapV3PoolOwnerActions {\r\n    /// @notice Set the denominator of the protocol's % share of the fees\r\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\r\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\r\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\r\n\r\n    /// @notice Collect the protocol fee accrued to the pool\r\n    /// @param recipient The address to which collected protocol fees should be sent\r\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\r\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\r\n    /// @return amount0 The protocol fee collected in token0\r\n    /// @return amount1 The protocol fee collected in token1\r\n    function collectProtocol(\r\n        address recipient,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external returns (uint128 amount0, uint128 amount1);\r\n}"
			},
			"interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Permissionless pool actions\r\n/// @notice Contains pool methods that can be called by anyone\r\ninterface IUniswapV3PoolActions {\r\n    //初始化 slot0 状态\r\n    /// @notice Sets the initial price for the pool\r\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\r\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\r\n    function initialize(uint160 sqrtPriceX96) external;\r\n\r\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\r\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\r\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\r\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\r\n    /// @param recipient The address for which the liquidity will be created\r\n    /// @param tickLower The lower tick of the position in which to add liquidity\r\n    /// @param tickUpper The upper tick of the position in which to add liquidity\r\n    /// @param amount The amount of liquidity to mint\r\n    /// @param data Any data that should be passed through to the callback\r\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n    function mint(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount,\r\n        bytes calldata data\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Collects tokens owed to a position\r\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\r\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\r\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\r\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\r\n    /// @param recipient The address which should receive the fees collected\r\n    /// @param tickLower The lower tick of the position for which to collect fees\r\n    /// @param tickUpper The upper tick of the position for which to collect fees\r\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\r\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\r\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\r\n    /// @dev Fees must be collected separately via a call to #collect\r\n    /// @param tickLower The lower tick of the position for which to burn liquidity\r\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\r\n    /// @param amount How much liquidity to burn\r\n    /// @return amount0 The amount of token0 sent to the recipient\r\n    /// @return amount1 The amount of token1 sent to the recipient\r\n    function burn(\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Swap token0 for token1, or token1 for token0\r\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\r\n    /// @param recipient The address to receive the output of the swap\r\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n    /// @param data Any data to be passed through to the callback\r\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n    function swap(\r\n        address recipient,\r\n        bool zeroForOne,\r\n        int256 amountSpecified,\r\n        uint160 sqrtPriceLimitX96,\r\n        bytes calldata data\r\n    ) external returns (int256 amount0, int256 amount1);\r\n\r\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\r\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\r\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\r\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\r\n    /// @param recipient The address which will receive the token0 and token1 amounts\r\n    /// @param amount0 The amount of token0 to send\r\n    /// @param amount1 The amount of token1 to send\r\n    /// @param data Any data to be passed through to the callback\r\n    function flash(\r\n        address recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    //扩展 observations 数组可存储的容量\r\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\r\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\r\n    /// the input observationCardinalityNext.\r\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\r\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\r\n}\r\n"
			},
			"interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Pool state that is not stored\r\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\r\n/// blockchain. The functions here may have variable gas costs.\r\ninterface IUniswapV3PoolDerivedState {\r\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\r\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\r\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\r\n    /// you must call it with secondsAgos = [3600, 0].\r\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\r\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\r\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\r\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\r\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\r\n    /// timestamp\r\n    function observe(uint32[] calldata secondsAgos)\r\n        external\r\n        view\r\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\r\n\r\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\r\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\r\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\r\n    /// snapshot is taken and the second snapshot is taken.\r\n    /// @param tickLower The lower tick of the range\r\n    /// @param tickUpper The upper tick of the range\r\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\r\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\r\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\r\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\r\n        external\r\n        view\r\n        returns (\r\n            int56 tickCumulativeInside,\r\n            uint160 secondsPerLiquidityInsideX128,\r\n            uint32 secondsInside\r\n        );\r\n}"
			},
			"interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Pool state that can change\r\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\r\n/// per transaction\r\ninterface IUniswapV3PoolState {\r\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\r\n    /// when accessed externally.\r\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\r\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\r\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\r\n    /// boundary.\r\n    /// observationIndex The index of the last oracle observation that was written,\r\n    /// observationCardinality The current maximum number of observations stored in the pool,\r\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\r\n    /// feeProtocol The protocol fee for both tokens of the pool.\r\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\r\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\r\n    /// unlocked Whether the pool is currently locked to reentrancy\r\n    function slot0()\r\n        external\r\n        view\r\n        returns (\r\n            uint160 sqrtPriceX96,\r\n            int24 tick,\r\n            uint16 observationIndex,\r\n            uint16 observationCardinality,\r\n            uint16 observationCardinalityNext,\r\n            uint8 feeProtocol,\r\n            bool unlocked\r\n        );\r\n\r\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\r\n    /// @dev This value can overflow the uint256\r\n    function feeGrowthGlobal0X128() external view returns (uint256);\r\n\r\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\r\n    /// @dev This value can overflow the uint256\r\n    function feeGrowthGlobal1X128() external view returns (uint256);\r\n\r\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\r\n    /// @dev Protocol fees will never exceed uint128 max in either token\r\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\r\n\r\n    /// @notice The currently in range liquidity available to the pool\r\n    /// @dev This value has no relationship to the total liquidity across all ticks\r\n    function liquidity() external view returns (uint128);\r\n\r\n    /// @notice Look up information about a specific tick in the pool\r\n    /// @param tick The tick to look up\r\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\r\n    /// tick upper,\r\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\r\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\r\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\r\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\r\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\r\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\r\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\r\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\r\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\r\n    /// a specific position.\r\n    function ticks(int24 tick)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 liquidityGross,\r\n            int128 liquidityNet,\r\n            uint256 feeGrowthOutside0X128,\r\n            uint256 feeGrowthOutside1X128,\r\n            int56 tickCumulativeOutside,\r\n            uint160 secondsPerLiquidityOutsideX128,\r\n            uint32 secondsOutside,\r\n            bool initialized\r\n        );\r\n\r\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\r\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\r\n\r\n    /// @notice Returns the information about a position by the position's key\r\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\r\n    /// @return _liquidity The amount of liquidity in the position,\r\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\r\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\r\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\r\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\r\n    function positions(bytes32 key)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 _liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    /// @notice Returns data about a specific observation index\r\n    /// @param index The element of the observations array to fetch\r\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\r\n    /// ago, rather than at a specific index in the array.\r\n    /// @return blockTimestamp The timestamp of the observation,\r\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\r\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\r\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\r\n    function observations(uint256 index)\r\n        external\r\n        view\r\n        returns (\r\n            uint32 blockTimestamp,\r\n            int56 tickCumulative,\r\n            uint160 secondsPerLiquidityCumulativeX128,\r\n            bool initialized\r\n        );\r\n}"
			},
			"interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Pool state that never changes\r\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\r\ninterface IUniswapV3PoolImmutables {\r\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\r\n    /// @return The contract address\r\n    function factory() external view returns (address);\r\n\r\n    /// @notice The first of the two tokens of the pool, sorted by address\r\n    /// @return The token contract address\r\n    function token0() external view returns (address);\r\n\r\n    /// @notice The second of the two tokens of the pool, sorted by address\r\n    /// @return The token contract address\r\n    function token1() external view returns (address);\r\n\r\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\r\n    /// @return The fee\r\n    function fee() external view returns (uint24);\r\n\r\n    /// @notice The pool tick spacing\r\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\r\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\r\n    /// This value is an int24 to avoid casting even though it is always positive.\r\n    /// @return The tick spacing\r\n    function tickSpacing() external view returns (int24);\r\n\r\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\r\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\r\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\r\n    /// @return The max amount of liquidity per tick\r\n    function maxLiquidityPerTick() external view returns (uint128);\r\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"libraries/PoolAddress.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\r\nlibrary PoolAddress {\r\n    bytes32 internal constant POOL_INIT_CODE_HASH =\r\n        0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\r\n\r\n    /// @notice The identifying key of the pool\r\n    struct PoolKey {\r\n        address token0;\r\n        address token1;\r\n        uint24 fee;\r\n    }\r\n\r\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\r\n    /// @param tokenA The first token of a pool, unsorted\r\n    /// @param tokenB The second token of a pool, unsorted\r\n    /// @param fee The fee level of the pool\r\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\r\n    function getPoolKey(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) internal pure returns (PoolKey memory) {\r\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\r\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\r\n    }\r\n\r\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\r\n    /// @param factory The Uniswap V3 factory contract address\r\n    /// @param key The PoolKey\r\n    /// @return pool The contract address of the V3 pool\r\n    function computeAddress(\r\n        address factory,\r\n        PoolKey memory key\r\n    ) internal pure returns (address pool) {\r\n        require(key.token0 < key.token1);\r\n        pool = address(\r\n            uint160(\r\n                uint256(\r\n                    keccak256(\r\n                        abi.encodePacked(\r\n                            hex\"ff\",\r\n                            factory,\r\n                            keccak256(\r\n                                abi.encode(key.token0, key.token1, key.fee)\r\n                            ),\r\n                            POOL_INIT_CODE_HASH\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n}\r\n"
			},
			"interfaces/IPeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Immutable state\r\n/// @notice Functions that return immutable state of the router\r\ninterface IPeripheryImmutableState {\r\n    /// @return Returns the address of the Uniswap V3 factory\r\n    function factory() external view returns (address);\r\n\r\n    /// @return Returns the address of WETH9\r\n    function WETH9() external view returns (address);\r\n}\r\n"
			},
			"interfaces/IPeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Periphery Payments\r\n/// @notice Functions to ease deposits and withdrawals of ETH\r\ninterface IPeripheryPayments {\r\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\r\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\r\n    /// @param recipient The address receiving ETH\r\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\r\n\r\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\r\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\r\n    /// that use ether for the input amount\r\n    function refundETH() external payable;\r\n\r\n    /// @notice Transfers the full amount of a token held by this contract to recipient\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\r\n    /// @param token The contract address of the token which will be transferred to `recipient`\r\n    /// @param amountMinimum The minimum amount of token required for a transfer\r\n    /// @param recipient The destination address of the token\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) external payable;\r\n}\r\n"
			},
			"interfaces/IERC721Permit.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport './IERC721.sol';\r\n\r\n/// @title ERC721 with permit\r\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\r\ninterface IERC721Permit is IERC721 {\r\n    /// @notice The permit typehash used in the permit signature\r\n    /// @return The typehash for the permit\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    /// @notice The domain separator used in the permit signature\r\n    /// @return The domain seperator used in encoding of permit signature\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    /// @notice Approve of a specific token ID for spending by spender via signature\r\n    /// @param spender The account that is being approved\r\n    /// @param tokenId The ID of the token that is being approved for spending\r\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function permit(\r\n        address spender,\r\n        uint256 tokenId,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n}"
			},
			"interfaces/IPoolInitializer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Creates and initializes V3 Pools\r\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\r\n/// require the pool to exist.\r\ninterface IPoolInitializer {\r\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\r\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\r\n    /// @param token0 The contract address of token0 of the pool\r\n    /// @param token1 The contract address of token1 of the pool\r\n    /// @param fee The fee amount of the v3 pool for the specified token pair\r\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\r\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\r\n    function createAndInitializePoolIfNecessary(\r\n        address token0,\r\n        address token1,\r\n        uint24 fee,\r\n        uint160 sqrtPriceX96\r\n    ) external payable returns (address pool);\r\n}\r\n"
			},
			"interfaces/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport \"./IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Enumerable is IERC721 {\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\r\n     * Use along with {totalSupply} to enumerate all tokens.\r\n     */\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}"
			},
			"interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport \"./IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"contracts/base/PeripheryImmutableState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\nimport '../../interfaces/IPeripheryImmutableState.sol';\r\n\r\n/// @title Immutable state\r\n/// @notice Immutable state used by periphery contracts\r\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\r\n    /// @inheritdoc IPeripheryImmutableState\r\n    address public immutable override factory;\r\n    /// @inheritdoc IPeripheryImmutableState\r\n    address public immutable override WETH9;\r\n\r\n    constructor(address _factory, address _WETH9) {\r\n        factory = _factory;\r\n        WETH9 = _WETH9;\r\n    }\r\n}\r\n"
			},
			"contracts/base/PeripheryPayments.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\nimport '../../interfaces/IERC20.sol';\r\n\r\nimport '../../interfaces/IPeripheryPayments.sol';\r\nimport '../../interfaces/IWETH9.sol';\r\n\r\nimport '../../libraries/TransferHelper.sol';\r\n\r\nimport './PeripheryImmutableState.sol';\r\n\r\nabstract contract PeripheryPayments is IPeripheryPayments, PeripheryImmutableState {\r\n    receive() external payable {\r\n        require(msg.sender == WETH9, 'Not WETH9');\r\n    }\r\n\r\n    /// @inheritdoc IPeripheryPayments\r\n    function unwrapWETH9(uint256 amountMinimum, address recipient) public payable override {\r\n        uint256 balanceWETH9 = IWETH9(WETH9).balanceOf(address(this));\r\n        require(balanceWETH9 >= amountMinimum, 'Insufficient WETH9');\r\n\r\n        if (balanceWETH9 > 0) {\r\n            IWETH9(WETH9).withdraw(balanceWETH9);\r\n            TransferHelper.safeTransferETH(recipient, balanceWETH9);\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IPeripheryPayments\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) public payable override {\r\n        uint256 balanceToken = IERC20(token).balanceOf(address(this));\r\n        require(balanceToken >= amountMinimum, 'Insufficient token');\r\n\r\n        if (balanceToken > 0) {\r\n            TransferHelper.safeTransfer(token, recipient, balanceToken);\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IPeripheryPayments\r\n    function refundETH() external payable override {\r\n        if (address(this).balance > 0) TransferHelper.safeTransferETH(msg.sender, address(this).balance);\r\n    }\r\n\r\n    /// @param token The token to pay\r\n    /// @param payer The entity that must pay\r\n    /// @param recipient The entity that will receive payment\r\n    /// @param value The amount to pay\r\n    function pay(\r\n        address token,\r\n        address payer,\r\n        address recipient,\r\n        uint256 value\r\n    ) internal {\r\n        if (token == WETH9 && address(this).balance >= value) {\r\n            // pay with WETH9\r\n            IWETH9(WETH9).deposit{value: value}(); // wrap only what is needed to pay\r\n            IWETH9(WETH9).transfer(recipient, value);\r\n        } else if (payer == address(this)) {\r\n            // pay with tokens already in the contract (for the exact input multihop case)\r\n            TransferHelper.safeTransfer(token, recipient, value);\r\n        } else {\r\n            // pull payment\r\n            TransferHelper.safeTransferFrom(token, payer, recipient, value);\r\n        }\r\n    }\r\n}\r\n"
			},
			"libraries/LiquidityAmounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\nimport './FullMath.sol';\r\nimport './FixedPoint96.sol';\r\n\r\n/// @title Liquidity amount functions\r\n/// @notice Provides functions for computing liquidity amounts from token amounts and prices\r\nlibrary LiquidityAmounts {\r\n    /// @notice Downcasts uint256 to uint128\r\n    /// @param x The uint258 to be downcasted\r\n    /// @return y The passed value, downcasted to uint128\r\n    function toUint128(uint256 x) private pure returns (uint128 y) {\r\n        require((y = uint128(x)) == x);\r\n    }\r\n\r\n    /// @notice Computes the amount of liquidity received for a given amount of token0 and price range\r\n    /// @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount0 The amount0 being sent in\r\n    /// @return liquidity The amount of returned liquidity\r\n    function getLiquidityForAmount0(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint256 amount0\r\n    ) internal pure returns (uint128 liquidity) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n        uint256 intermediate = FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96);\r\n        return toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96));\r\n    }\r\n\r\n    /// @notice Computes the amount of liquidity received for a given amount of token1 and price range\r\n    /// @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount1 The amount1 being sent in\r\n    /// @return liquidity The amount of returned liquidity\r\n    function getLiquidityForAmount1(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint256 amount1\r\n    ) internal pure returns (uint128 liquidity) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n        return toUint128(FullMath.mulDiv(amount1, FixedPoint96.Q96, sqrtRatioBX96 - sqrtRatioAX96));\r\n    }\r\n\r\n    /// @notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\r\n    /// pool prices and the prices at the tick boundaries\r\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount0 The amount of token0 being sent in\r\n    /// @param amount1 The amount of token1 being sent in\r\n    /// @return liquidity The maximum amount of liquidity received\r\n    function getLiquidityForAmounts(\r\n        uint160 sqrtRatioX96,\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    ) internal pure returns (uint128 liquidity) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\r\n            liquidity = getLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\r\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\r\n            uint128 liquidity0 = getLiquidityForAmount0(sqrtRatioX96, sqrtRatioBX96, amount0);\r\n            uint128 liquidity1 = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioX96, amount1);\r\n\r\n            liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1;\r\n        } else {\r\n            liquidity = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\r\n        }\r\n    }\r\n\r\n    /// @notice Computes the amount of token0 for a given amount of liquidity and a price range\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount0 The amount of token0\r\n    function getAmount0ForLiquidity(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity\r\n    ) internal pure returns (uint256 amount0) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return\r\n            FullMath.mulDiv(\r\n                uint256(liquidity) << FixedPoint96.RESOLUTION,\r\n                sqrtRatioBX96 - sqrtRatioAX96,\r\n                sqrtRatioBX96\r\n            ) / sqrtRatioAX96;\r\n    }\r\n\r\n    /// @notice Computes the amount of token1 for a given amount of liquidity and a price range\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount1 The amount of token1\r\n    function getAmount1ForLiquidity(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity\r\n    ) internal pure returns (uint256 amount1) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\r\n    }\r\n\r\n    /// @notice Computes the token0 and token1 value for a given amount of liquidity, the current\r\n    /// pool prices and the prices at the tick boundaries\r\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function getAmountsForLiquidity(\r\n        uint160 sqrtRatioX96,\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity\r\n    ) internal pure returns (uint256 amount0, uint256 amount1) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\r\n            amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\r\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\r\n            amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity);\r\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity);\r\n        } else {\r\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\r\n        }\r\n    }\r\n}"
			},
			"libraries/CallbackValidation.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\nimport '../interfaces/IUniswapV3Pool.sol';\r\nimport './PoolAddress.sol';\r\n\r\n/// @notice Provides validation for callbacks from Uniswap V3 Pools\r\nlibrary CallbackValidation {\r\n    /// @notice Returns the address of a valid Uniswap V3 Pool\r\n    /// @param factory The contract address of the Uniswap V3 factory\r\n    /// @param tokenA The contract address of either token0 or token1\r\n    /// @param tokenB The contract address of the other token\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @return pool The V3 pool contract address\r\n    function verifyCallback(\r\n        address factory,\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) internal view returns (IUniswapV3Pool pool) {\r\n        return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee));\r\n    }\r\n\r\n    /// @notice Returns the address of a valid Uniswap V3 Pool\r\n    /// @param factory The contract address of the Uniswap V3 factory\r\n    /// @param poolKey The identifying key of the V3 pool\r\n    /// @return pool The V3 pool contract address\r\n    function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)\r\n        internal\r\n        view\r\n        returns (IUniswapV3Pool pool)\r\n    {\r\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\r\n        require(msg.sender == address(pool));\r\n    }\r\n}"
			},
			"interfaces/callback/IUniswapV3MintCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title Callback for IUniswapV3PoolActions#mint\r\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\r\ninterface IUniswapV3MintCallback {\r\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\r\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\r\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call\r\n    function uniswapV3MintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata data\r\n    ) external;\r\n}"
			},
			"interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title The interface for the Uniswap V3 Factory\r\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\r\ninterface IUniswapV3Factory {\r\n    /// @notice Emitted when the owner of the factory is changed\r\n    /// @param oldOwner The owner before the owner was changed\r\n    /// @param newOwner The owner after the owner was changed\r\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\r\n\r\n    /// @notice Emitted when a pool is created\r\n    /// @param token0 The first token of the pool by address sort order\r\n    /// @param token1 The second token of the pool by address sort order\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\r\n    /// @param pool The address of the created pool\r\n    event PoolCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        uint24 indexed fee,\r\n        int24 tickSpacing,\r\n        address pool\r\n    );\r\n\r\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip\r\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\r\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\r\n\r\n    /// @notice Returns the current owner of the factory\r\n    /// @dev Can be changed by the current owner via setOwner\r\n    /// @return The address of the factory owner\r\n    function owner() external view returns (address);\r\n\r\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\r\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\r\n    /// @return The tick spacing\r\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\r\n\r\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\r\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\r\n    /// @param tokenA The contract address of either token0 or token1\r\n    /// @param tokenB The contract address of the other token\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @return pool The pool address\r\n    function getPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Creates a pool for the given two tokens and fee\r\n    /// @param tokenA One of the two tokens in the desired pool\r\n    /// @param tokenB The other of the two tokens in the desired pool\r\n    /// @param fee The desired fee for the pool\r\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\r\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\r\n    /// are invalid.\r\n    /// @return pool The address of the newly created pool\r\n    function createPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external returns (address pool);\r\n\r\n    /// @notice Updates the owner of the factory\r\n    /// @dev Must be called by the current owner\r\n    /// @param _owner The new owner of the factory\r\n    function setOwner(address _owner) external;\r\n\r\n    /// @notice Enables a fee amount with the given tickSpacing\r\n    /// @dev Fee amounts may never be removed once enabled\r\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\r\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\r\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\r\n}"
			},
			"libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/// @title FixedPoint96\r\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\r\n/// @dev Used in SqrtPriceMath.sol\r\nlibrary FixedPoint96 {\r\n    uint8 internal constant RESOLUTION = 96;\r\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\r\n}"
			},
			"libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\n/// @title Contains 512-bit math functions\r\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\r\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\r\nlibrary FullMath {\r\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n    /// @param a The multiplicand\r\n    /// @param b The multiplier\r\n    /// @param denominator The divisor\r\n    /// @return result The 256-bit result\r\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\r\n    function mulDiv(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        // 512-bit multiply [prod1 prod0] = a * b\r\n        // Compute the product mod 2**256 and mod 2**256 - 1\r\n        // then use the Chinese Remainder Theorem to reconstruct\r\n        // the 512 bit result. The result is stored in two 256\r\n        // variables such that product = prod1 * 2**256 + prod0\r\n        uint256 prod0; // Least significant 256 bits of the product\r\n        uint256 prod1; // Most significant 256 bits of the product\r\n        assembly {\r\n            let mm := mulmod(a, b, not(0))\r\n            prod0 := mul(a, b)\r\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n        }\r\n\r\n        // Handle non-overflow cases, 256 by 256 division\r\n        if (prod1 == 0) {\r\n            require(denominator > 0);\r\n            assembly {\r\n                result := div(prod0, denominator)\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Make sure the result is less than 2**256.\r\n        // Also prevents denominator == 0\r\n        require(denominator > prod1);\r\n\r\n        ///////////////////////////////////////////////\r\n        // 512 by 256 division.\r\n        ///////////////////////////////////////////////\r\n\r\n        // Make division exact by subtracting the remainder from [prod1 prod0]\r\n        // Compute remainder using mulmod\r\n        uint256 remainder;\r\n        assembly {\r\n            remainder := mulmod(a, b, denominator)\r\n        }\r\n        // Subtract 256 bit number from 512 bit number\r\n        assembly {\r\n            prod1 := sub(prod1, gt(remainder, prod0))\r\n            prod0 := sub(prod0, remainder)\r\n        }\r\n\r\n        // Factor powers of two out of denominator\r\n        // Compute largest power of two divisor of denominator.\r\n        // Always >= 1.\r\n        uint256 twos = denominator & (~denominator + 1);\r\n        // Divide denominator by power of two\r\n        assembly {\r\n            denominator := div(denominator, twos)\r\n        }\r\n\r\n        // Divide [prod1 prod0] by the factors of two\r\n        assembly {\r\n            prod0 := div(prod0, twos)\r\n        }\r\n        // Shift in bits from prod1 into prod0. For this we need\r\n        // to flip `twos` such that it is 2**256 / twos.\r\n        // If twos is zero, then it becomes one\r\n        assembly {\r\n            twos := add(div(sub(0, twos), twos), 1)\r\n        }\r\n        prod0 |= prod1 * twos;\r\n\r\n        // Invert denominator mod 2**256\r\n        // Now that denominator is an odd number, it has an inverse\r\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\r\n        // Compute the inverse by starting with a seed that is correct\r\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\r\n        uint256 inv = (3 * denominator) ^ 2;\r\n        // Now use Newton-Raphson iteration to improve the precision.\r\n        // Thanks to Hensel's lifting lemma, this also works in modular\r\n        // arithmetic, doubling the correct bits in each step.\r\n        inv *= 2 - denominator * inv; // inverse mod 2**8\r\n        inv *= 2 - denominator * inv; // inverse mod 2**16\r\n        inv *= 2 - denominator * inv; // inverse mod 2**32\r\n        inv *= 2 - denominator * inv; // inverse mod 2**64\r\n        inv *= 2 - denominator * inv; // inverse mod 2**128\r\n        inv *= 2 - denominator * inv; // inverse mod 2**256\r\n\r\n        // Because the division is now exact we can divide by multiplying\r\n        // with the modular inverse of denominator. This will give us the\r\n        // correct result modulo 2**256. Since the precoditions guarantee\r\n        // that the outcome is less than 2**256, this is the final result.\r\n        // We don't need to compute the high bits of the result and prod1\r\n        // is no longer required.\r\n        result = prod0 * inv;\r\n        return result;\r\n    }\r\n\r\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n    /// @param a The multiplicand\r\n    /// @param b The multiplier\r\n    /// @param denominator The divisor\r\n    /// @return result The 256-bit result\r\n    function mulDivRoundingUp(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        result = mulDiv(a, b, denominator);\r\n        if (mulmod(a, b, denominator) > 0) {\r\n            require(result < type(uint256).max);\r\n            result++;\r\n        }\r\n    }\r\n}\r\n"
			},
			"interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n      *\r\n      * Requirements:\r\n      *\r\n      * - `from` cannot be the zero address.\r\n      * - `to` cannot be the zero address.\r\n      * - `tokenId` token must exist and be owned by `from`.\r\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n      *\r\n      * Emits a {Transfer} event.\r\n      */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n}"
			},
			"interfaces/IWETH9.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.7.6;\r\n\r\n\r\nimport './IERC20.sol';\r\n\r\n/// @title Interface for WETH9\r\ninterface IWETH9 is IERC20 {\r\n    /// @notice Deposit ether to get wrapped ether\r\n    function deposit() external payable;\r\n\r\n    /// @notice Withdraw wrapped ether to get ether\r\n    function withdraw(uint256) external;\r\n}\r\n"
			},
			"interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"contracts/AddLiquidity.sol": {
				"AddLiquidity": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "_nonfungiblePositionManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAdd0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAdd1",
									"type": "uint256"
								}
							],
							"name": "increaseLiquidityCurrentRange",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "poolFee",
											"type": "uint24"
										},
										{
											"internalType": "uint256",
											"name": "token0Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "token1Amount",
											"type": "uint256"
										}
									],
									"internalType": "struct AddLiquidity.MintNewPositionParams",
									"name": "mintParams",
									"type": "tuple"
								}
							],
							"name": "mintNewPosition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonfungiblePositionManager",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"mintNewPosition((address,address,uint24,uint256,uint256))": {
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for the position",
									"tokenId": "The id of the newly minted ERC721"
								}
							}
						},
						"stateVariables": {
							"deposits": {
								"details": "deposits[tokenId] => Deposit"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AddLiquidity.sol\":422:5754  contract AddLiquidity is IERC721Receiver{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/AddLiquidity.sol\":777:921  constructor(INonfungiblePositionManager _nonfungiblePositionManager) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/AddLiquidity.sol\":886:913  _nonfungiblePositionManager */\n  dup1\n    /* \"contracts/AddLiquidity.sol\":857:913  nonfungiblePositionManager = _nonfungiblePositionManager */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/AddLiquidity.sol\":777:921  constructor(INonfungiblePositionManager _nonfungiblePositionManager) {... */\n  pop\n    /* \"contracts/AddLiquidity.sol\":422:5754  contract AddLiquidity is IERC721Receiver{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:700   */\ntag_12:\n    /* \"#utility.yul\":641:648   */\n  0x00\n    /* \"#utility.yul\":670:694   */\n  tag_23\n    /* \"#utility.yul\":688:693   */\n  dup3\n    /* \"#utility.yul\":670:694   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":659:694   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:700   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":706:900   */\ntag_13:\n    /* \"#utility.yul\":815:875   */\n  tag_25\n    /* \"#utility.yul\":869:874   */\n  dup2\n    /* \"#utility.yul\":815:875   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":808:813   */\n  dup2\n    /* \"#utility.yul\":805:876   */\n  eq\n    /* \"#utility.yul\":795:894   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":890:891   */\n  0x00\n    /* \"#utility.yul\":887:888   */\n  dup1\n    /* \"#utility.yul\":880:892   */\n  revert\n    /* \"#utility.yul\":795:894   */\ntag_26:\n    /* \"#utility.yul\":706:900   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":906:1121   */\ntag_14:\n    /* \"#utility.yul\":999:1004   */\n  0x00\n    /* \"#utility.yul\":1030:1036   */\n  dup2\n    /* \"#utility.yul\":1024:1037   */\n  mload\n    /* \"#utility.yul\":1015:1037   */\n  swap1\n  pop\n    /* \"#utility.yul\":1046:1115   */\n  tag_28\n    /* \"#utility.yul\":1109:1114   */\n  dup2\n    /* \"#utility.yul\":1046:1115   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":906:1121   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1127:1550   */\ntag_3:\n    /* \"#utility.yul\":1233:1239   */\n  0x00\n    /* \"#utility.yul\":1282:1284   */\n  0x20\n    /* \"#utility.yul\":1270:1279   */\n  dup3\n    /* \"#utility.yul\":1261:1268   */\n  dup5\n    /* \"#utility.yul\":1257:1280   */\n  sub\n    /* \"#utility.yul\":1253:1285   */\n  slt\n    /* \"#utility.yul\":1250:1369   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1288:1367   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1250:1369   */\ntag_30:\n    /* \"#utility.yul\":1408:1409   */\n  0x00\n    /* \"#utility.yul\":1433:1533   */\n  tag_32\n    /* \"#utility.yul\":1525:1532   */\n  dup5\n    /* \"#utility.yul\":1516:1522   */\n  dup3\n    /* \"#utility.yul\":1505:1514   */\n  dup6\n    /* \"#utility.yul\":1501:1523   */\n  add\n    /* \"#utility.yul\":1433:1533   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1423:1533   */\n  swap2\n  pop\n    /* \"#utility.yul\":1379:1543   */\n  pop\n    /* \"#utility.yul\":1127:1550   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/AddLiquidity.sol\":422:5754  contract AddLiquidity is IERC721Receiver{... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/AddLiquidity.sol\":422:5754  contract AddLiquidity is IERC721Receiver{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x591c7191\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x617d6d6e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb02c43d0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb44a2722\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AddLiquidity.sol\":4846:5103  function onERC721Received(... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AddLiquidity.sol\":1504:4129  function mintNewPosition(... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AddLiquidity.sol\":4137:4838  function increaseLiquidityCurrentRange(... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AddLiquidity.sol\":725:768  mapping(uint256 => Deposit) public deposits */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AddLiquidity.sol\":469:540  INonfungiblePositionManager public immutable nonfungiblePositionManager */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AddLiquidity.sol\":4846:5103  function onERC721Received(... */\n    tag_11:\n        /* \"contracts/AddLiquidity.sol\":5002:5008  bytes4 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":5065:5095  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/AddLiquidity.sol\":5058:5095  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/AddLiquidity.sol\":4846:5103  function onERC721Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AddLiquidity.sol\":1504:4129  function mintNewPosition(... */\n    tag_17:\n        /* \"contracts/AddLiquidity.sol\":1628:1643  uint256 tokenId */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":1658:1675  uint128 liquidity */\n      dup1\n        /* \"contracts/AddLiquidity.sol\":1690:1705  uint256 amount0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":1720:1735  uint256 amount1 */\n      dup1\n        /* \"contracts/AddLiquidity.sol\":1773:1783  mintParams */\n      dup5\n        /* \"contracts/AddLiquidity.sol\":1773:1790  mintParams.token0 */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/AddLiquidity.sol\":1766:1804  IERC20(mintParams.token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AddLiquidity.sol\":1805:1815  msg.sender */\n      caller\n        /* \"contracts/AddLiquidity.sol\":1825:1829  this */\n      address\n        /* \"contracts/AddLiquidity.sol\":1832:1842  mintParams */\n      dup9\n        /* \"contracts/AddLiquidity.sol\":1832:1855  mintParams.token0Amount */\n      0x60\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":1766:1856  IERC20(mintParams.token0).transferFrom(msg.sender, address(this), mintParams.token0Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      pop\n        /* \"contracts/AddLiquidity.sol\":1874:1884  mintParams */\n      dup5\n        /* \"contracts/AddLiquidity.sol\":1874:1891  mintParams.token1 */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_46:\n        /* \"contracts/AddLiquidity.sol\":1867:1905  IERC20(mintParams.token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/AddLiquidity.sol\":1906:1916  msg.sender */\n      caller\n        /* \"contracts/AddLiquidity.sol\":1926:1930  this */\n      address\n        /* \"contracts/AddLiquidity.sol\":1933:1943  mintParams */\n      dup9\n        /* \"contracts/AddLiquidity.sol\":1933:1956  mintParams.token0Amount */\n      0x60\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":1867:1957  IERC20(mintParams.token1).transferFrom(msg.sender, address(this), mintParams.token0Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_50:\n      pop\n        /* \"contracts/AddLiquidity.sol\":2011:2168  TransferHelper.safeApprove(... */\n      tag_51\n        /* \"contracts/AddLiquidity.sol\":2052:2062  mintParams */\n      dup6\n        /* \"contracts/AddLiquidity.sol\":2052:2069  mintParams.token0 */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_52:\n        /* \"contracts/AddLiquidity.sol\":2092:2118  nonfungiblePositionManager */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/AddLiquidity.sol\":2134:2144  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2134:2157  mintParams.token0Amount */\n      0x60\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":2011:2037  TransferHelper.safeApprove */\n      tag_53\n        /* \"contracts/AddLiquidity.sol\":2011:2168  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_51:\n        /* \"contracts/AddLiquidity.sol\":2179:2336  TransferHelper.safeApprove(... */\n      tag_54\n        /* \"contracts/AddLiquidity.sol\":2220:2230  mintParams */\n      dup6\n        /* \"contracts/AddLiquidity.sol\":2220:2237  mintParams.token1 */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"contracts/AddLiquidity.sol\":2260:2286  nonfungiblePositionManager */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/AddLiquidity.sol\":2302:2312  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2302:2325  mintParams.token1Amount */\n      0x80\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":2179:2205  TransferHelper.safeApprove */\n      tag_53\n        /* \"contracts/AddLiquidity.sol\":2179:2336  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_54:\n        /* \"contracts/AddLiquidity.sol\":2349:2414  INonfungiblePositionManager.MintParams... */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/AddLiquidity.sol\":2483:2493  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2483:2500  mintParams.token0 */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_56:\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2527:2537  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2527:2544  mintParams.token1 */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2568:2578  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2568:2586  mintParams.poolFee */\n      0x40\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"libraries/TickMath.sol\":484:491  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"libraries/TickMath.sol\":484:491  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"libraries/TickMath.sol\":646:655  -MIN_TICK */\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2715:2725  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2715:2738  mintParams.token0Amount */\n      0x60\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2773:2783  mintParams */\n      dup8\n        /* \"contracts/AddLiquidity.sol\":2773:2796  mintParams.token1Amount */\n      0x80\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2827:2828  0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2859:2860  0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2890:2900  msg.sender */\n      caller\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":2947:2949  30 */\n      0x1e\n        /* \"contracts/AddLiquidity.sol\":2929:2944  block.timestamp */\n      timestamp\n        /* \"contracts/AddLiquidity.sol\":2929:2949  block.timestamp + 30 */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/AddLiquidity.sol\":2417:2965  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/AddLiquidity.sol\":2349:2965  INonfungiblePositionManager.MintParams... */\n      swap1\n      pop\n        /* \"contracts/AddLiquidity.sol\":3150:3176  nonfungiblePositionManager */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/AddLiquidity.sol\":3150:3181  nonfungiblePositionManager.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88316456\n        /* \"contracts/AddLiquidity.sol\":3182:3188  params */\n      dup3\n        /* \"contracts/AddLiquidity.sol\":3150:3189  nonfungiblePositionManager.mint(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/AddLiquidity.sol\":3109:3189  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params) */\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      dup3\n      swap8\n      pop\n      dup4\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AddLiquidity.sol\":3352:3362  mintParams */\n      dup6\n        /* \"contracts/AddLiquidity.sol\":3352:3375  mintParams.token0Amount */\n      0x60\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":3342:3349  amount0 */\n      dup4\n        /* \"contracts/AddLiquidity.sol\":3342:3375  amount0 < mintParams.token0Amount */\n      lt\n        /* \"contracts/AddLiquidity.sol\":3338:3724  if (amount0 < mintParams.token0Amount) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/AddLiquidity.sol\":3392:3539  TransferHelper.safeApprove(... */\n      tag_71\n        /* \"contracts/AddLiquidity.sol\":3437:3443  params */\n      dup2\n        /* \"contracts/AddLiquidity.sol\":3437:3450  params.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/AddLiquidity.sol\":3477:3503  nonfungiblePositionManager */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/AddLiquidity.sol\":3523:3524  0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":3392:3418  TransferHelper.safeApprove */\n      tag_53\n        /* \"contracts/AddLiquidity.sol\":3392:3539  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_71:\n        /* \"contracts/AddLiquidity.sol\":3623:3712  TransferHelper.safeTransfer(params.token0, msg.sender, mintParams.token0Amount - amount0) */\n      tag_72\n        /* \"contracts/AddLiquidity.sol\":3651:3657  params */\n      dup2\n        /* \"contracts/AddLiquidity.sol\":3651:3664  params.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/AddLiquidity.sol\":3666:3676  msg.sender */\n      caller\n        /* \"contracts/AddLiquidity.sol\":3704:3711  amount0 */\n      dup6\n        /* \"contracts/AddLiquidity.sol\":3678:3688  mintParams */\n      dup10\n        /* \"contracts/AddLiquidity.sol\":3678:3701  mintParams.token0Amount */\n      0x60\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":3678:3711  mintParams.token0Amount - amount0 */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"contracts/AddLiquidity.sol\":3623:3650  TransferHelper.safeTransfer */\n      tag_75\n        /* \"contracts/AddLiquidity.sol\":3623:3712  TransferHelper.safeTransfer(params.token0, msg.sender, mintParams.token0Amount - amount0) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/AddLiquidity.sol\":3338:3724  if (amount0 < mintParams.token0Amount) {... */\n    tag_70:\n        /* \"contracts/AddLiquidity.sol\":3750:3760  mintParams */\n      dup6\n        /* \"contracts/AddLiquidity.sol\":3750:3773  mintParams.token1Amount */\n      0x80\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":3740:3747  amount1 */\n      dup3\n        /* \"contracts/AddLiquidity.sol\":3740:3773  amount1 < mintParams.token1Amount */\n      lt\n        /* \"contracts/AddLiquidity.sol\":3736:4122  if (amount1 < mintParams.token1Amount) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/AddLiquidity.sol\":3790:3937  TransferHelper.safeApprove(... */\n      tag_77\n        /* \"contracts/AddLiquidity.sol\":3835:3841  params */\n      dup2\n        /* \"contracts/AddLiquidity.sol\":3835:3848  params.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/AddLiquidity.sol\":3875:3901  nonfungiblePositionManager */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/AddLiquidity.sol\":3921:3922  0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":3790:3816  TransferHelper.safeApprove */\n      tag_53\n        /* \"contracts/AddLiquidity.sol\":3790:3937  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_77:\n        /* \"contracts/AddLiquidity.sol\":4021:4110  TransferHelper.safeTransfer(params.token1, msg.sender, mintParams.token1Amount - amount1) */\n      tag_78\n        /* \"contracts/AddLiquidity.sol\":4049:4055  params */\n      dup2\n        /* \"contracts/AddLiquidity.sol\":4049:4062  params.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/AddLiquidity.sol\":4064:4074  msg.sender */\n      caller\n        /* \"contracts/AddLiquidity.sol\":4102:4109  amount1 */\n      dup5\n        /* \"contracts/AddLiquidity.sol\":4076:4086  mintParams */\n      dup10\n        /* \"contracts/AddLiquidity.sol\":4076:4099  mintParams.token1Amount */\n      0x80\n      add\n      calldataload\n        /* \"contracts/AddLiquidity.sol\":4076:4109  mintParams.token1Amount - amount1 */\n      tag_79\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_79:\n        /* \"contracts/AddLiquidity.sol\":4021:4048  TransferHelper.safeTransfer */\n      tag_75\n        /* \"contracts/AddLiquidity.sol\":4021:4110  TransferHelper.safeTransfer(params.token1, msg.sender, mintParams.token1Amount - amount1) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/AddLiquidity.sol\":3736:4122  if (amount1 < mintParams.token1Amount) {... */\n    tag_76:\n        /* \"contracts/AddLiquidity.sol\":1752:4129  {   ... */\n      pop\n        /* \"contracts/AddLiquidity.sol\":1504:4129  function mintNewPosition(... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/AddLiquidity.sol\":4137:4838  function increaseLiquidityCurrentRange(... */\n    tag_23:\n        /* \"contracts/AddLiquidity.sol\":4317:4334  uint128 liquidity */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":4362:4427  INonfungiblePositionManager.IncreaseLiquidityParams memory params */\n      dup1\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/AddLiquidity.sol\":4523:4530  tokenId */\n      dup7\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":4565:4575  amountAdd0 */\n      dup6\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":4610:4620  amountAdd1 */\n      dup5\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":4651:4652  0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":4683:4684  0 */\n      0x00\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/AddLiquidity.sol\":4731:4733  30 */\n      0x1e\n        /* \"contracts/AddLiquidity.sol\":4713:4728  block.timestamp */\n      timestamp\n        /* \"contracts/AddLiquidity.sol\":4713:4733  block.timestamp + 30 */\n      tag_81\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_81:\n        /* \"contracts/AddLiquidity.sol\":4443:4749  INonfungiblePositionManager.IncreaseLiquidityParams({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/AddLiquidity.sol\":4362:4749  INonfungiblePositionManager.IncreaseLiquidityParams memory params =... */\n      swap1\n      pop\n        /* \"contracts/AddLiquidity.sol\":4778:4804  nonfungiblePositionManager */\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n        /* \"contracts/AddLiquidity.sol\":4778:4822  nonfungiblePositionManager.increaseLiquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x219f5d17\n        /* \"contracts/AddLiquidity.sol\":4823:4829  params */\n      dup3\n        /* \"contracts/AddLiquidity.sol\":4778:4830  nonfungiblePositionManager.increaseLiquidity(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/AddLiquidity.sol\":4762:4830  (liquidity,,) = nonfungiblePositionManager.increaseLiquidity(params) */\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      pop\n        /* \"contracts/AddLiquidity.sol\":4351:4838  {... */\n      pop\n        /* \"contracts/AddLiquidity.sol\":4137:4838  function increaseLiquidityCurrentRange(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AddLiquidity.sol\":725:768  mapping(uint256 => Deposit) public deposits */\n    tag_29:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/AddLiquidity.sol\":469:540  INonfungiblePositionManager public immutable nonfungiblePositionManager */\n    tag_33:\n      immutable(\"0x58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43\")\n      dup2\n      jump\t// out\n        /* \"libraries/TransferHelper.sol\":1892:2206  function safeApprove(... */\n    tag_53:\n        /* \"libraries/TransferHelper.sol\":2010:2022  bool success */\n      0x00\n        /* \"libraries/TransferHelper.sol\":2024:2041  bytes memory data */\n      dup1\n        /* \"libraries/TransferHelper.sol\":2045:2050  token */\n      dup5\n        /* \"libraries/TransferHelper.sol\":2045:2055  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libraries/TransferHelper.sol\":2079:2102  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"libraries/TransferHelper.sol\":2104:2106  to */\n      dup6\n        /* \"libraries/TransferHelper.sol\":2108:2113  value */\n      dup6\n        /* \"libraries/TransferHelper.sol\":2056:2114  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/TransferHelper.sol\":2045:2115  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_95\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_94)\n    tag_95:\n      0x60\n      swap2\n      pop\n    tag_94:\n      pop\n        /* \"libraries/TransferHelper.sol\":2009:2115  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libraries/TransferHelper.sol\":2134:2141  success */\n      dup2\n        /* \"libraries/TransferHelper.sol\":2134:2191  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"libraries/TransferHelper.sol\":2161:2162  0 */\n      0x00\n        /* \"libraries/TransferHelper.sol\":2146:2150  data */\n      dup2\n        /* \"libraries/TransferHelper.sol\":2146:2157  data.length */\n      mload\n        /* \"libraries/TransferHelper.sol\":2146:2162  data.length == 0 */\n      eq\n        /* \"libraries/TransferHelper.sol\":2146:2190  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"libraries/TransferHelper.sol\":2177:2181  data */\n      dup1\n        /* \"libraries/TransferHelper.sol\":2166:2190  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_98:\n        /* \"libraries/TransferHelper.sol\":2146:2190  data.length == 0 || abi.decode(data, (bool)) */\n    tag_97:\n        /* \"libraries/TransferHelper.sol\":2134:2191  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_96:\n        /* \"libraries/TransferHelper.sol\":2126:2198  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"libraries/TransferHelper.sol\":1998:2206  {... */\n      pop\n      pop\n        /* \"libraries/TransferHelper.sol\":1892:2206  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"libraries/TransferHelper.sol\":1216:1532  function safeTransfer(... */\n    tag_75:\n        /* \"libraries/TransferHelper.sol\":1335:1347  bool success */\n      0x00\n        /* \"libraries/TransferHelper.sol\":1349:1366  bytes memory data */\n      dup1\n        /* \"libraries/TransferHelper.sol\":1370:1375  token */\n      dup5\n        /* \"libraries/TransferHelper.sol\":1370:1380  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"libraries/TransferHelper.sol\":1404:1428  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"libraries/TransferHelper.sol\":1430:1432  to */\n      dup6\n        /* \"libraries/TransferHelper.sol\":1434:1439  value */\n      dup6\n        /* \"libraries/TransferHelper.sol\":1381:1440  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"libraries/TransferHelper.sol\":1370:1441  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_104:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_107\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_106)\n    tag_107:\n      0x60\n      swap2\n      pop\n    tag_106:\n      pop\n        /* \"libraries/TransferHelper.sol\":1334:1441  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"libraries/TransferHelper.sol\":1460:1467  success */\n      dup2\n        /* \"libraries/TransferHelper.sol\":1460:1517  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_108\n      jumpi\n      pop\n        /* \"libraries/TransferHelper.sol\":1487:1488  0 */\n      0x00\n        /* \"libraries/TransferHelper.sol\":1472:1476  data */\n      dup2\n        /* \"libraries/TransferHelper.sol\":1472:1483  data.length */\n      mload\n        /* \"libraries/TransferHelper.sol\":1472:1488  data.length == 0 */\n      eq\n        /* \"libraries/TransferHelper.sol\":1472:1516  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_109\n      jumpi\n      pop\n        /* \"libraries/TransferHelper.sol\":1503:1507  data */\n      dup1\n        /* \"libraries/TransferHelper.sol\":1492:1516  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_110:\n        /* \"libraries/TransferHelper.sol\":1472:1516  data.length == 0 || abi.decode(data, (bool)) */\n    tag_109:\n        /* \"libraries/TransferHelper.sol\":1460:1517  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_108:\n        /* \"libraries/TransferHelper.sol\":1452:1524  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"libraries/TransferHelper.sol\":1323:1532  {... */\n      pop\n      pop\n        /* \"libraries/TransferHelper.sol\":1216:1532  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_115:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_116:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_117:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_118:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_173\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_117\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_119:\n        /* \"#utility.yul\":641:665   */\n      tag_175\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_118\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_176:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_120:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_178\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_119\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_121:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_122:\n        /* \"#utility.yul\":997:1021   */\n      tag_181\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_121\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_182:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_123:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_184\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_122\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_124:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_125:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_126:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_127:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_190\n      tag_124\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1663:1785   */\n    tag_189:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_192\n      tag_125\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1833:1950   */\n    tag_191:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_194\n      tag_126\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1997:2125   */\n    tag_193:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3100   */\n    tag_10:\n        /* \"#utility.yul\":2234:2240   */\n      0x00\n        /* \"#utility.yul\":2242:2248   */\n      dup1\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2315:2318   */\n      0x80\n        /* \"#utility.yul\":2303:2312   */\n      dup7\n        /* \"#utility.yul\":2294:2301   */\n      dup9\n        /* \"#utility.yul\":2290:2313   */\n      sub\n        /* \"#utility.yul\":2286:2319   */\n      slt\n        /* \"#utility.yul\":2283:2403   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_197\n      tag_115\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2283:2403   */\n    tag_196:\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2467:2520   */\n      tag_198\n        /* \"#utility.yul\":2512:2519   */\n      dup9\n        /* \"#utility.yul\":2503:2509   */\n      dup3\n        /* \"#utility.yul\":2492:2501   */\n      dup10\n        /* \"#utility.yul\":2488:2510   */\n      add\n        /* \"#utility.yul\":2467:2520   */\n      tag_120\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2457:2520   */\n      swap6\n      pop\n        /* \"#utility.yul\":2413:2530   */\n      pop\n        /* \"#utility.yul\":2569:2571   */\n      0x20\n        /* \"#utility.yul\":2595:2648   */\n      tag_199\n        /* \"#utility.yul\":2640:2647   */\n      dup9\n        /* \"#utility.yul\":2631:2637   */\n      dup3\n        /* \"#utility.yul\":2620:2629   */\n      dup10\n        /* \"#utility.yul\":2616:2638   */\n      add\n        /* \"#utility.yul\":2595:2648   */\n      tag_120\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2585:2648   */\n      swap5\n      pop\n        /* \"#utility.yul\":2540:2658   */\n      pop\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2723:2776   */\n      tag_200\n        /* \"#utility.yul\":2768:2775   */\n      dup9\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2748:2757   */\n      dup10\n        /* \"#utility.yul\":2744:2766   */\n      add\n        /* \"#utility.yul\":2723:2776   */\n      tag_123\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2713:2776   */\n      swap4\n      pop\n        /* \"#utility.yul\":2668:2786   */\n      pop\n        /* \"#utility.yul\":2853:2855   */\n      0x60\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2856   */\n      add\n        /* \"#utility.yul\":2825:2857   */\n      calldataload\n        /* \"#utility.yul\":2884:2902   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2876:2882   */\n      dup2\n        /* \"#utility.yul\":2873:2903   */\n      gt\n        /* \"#utility.yul\":2870:2987   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2906:2985   */\n      tag_202\n      tag_116\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2870:2987   */\n    tag_201:\n        /* \"#utility.yul\":3019:3083   */\n      tag_203\n        /* \"#utility.yul\":3075:3082   */\n      dup9\n        /* \"#utility.yul\":3066:3072   */\n      dup3\n        /* \"#utility.yul\":3055:3064   */\n      dup10\n        /* \"#utility.yul\":3051:3073   */\n      add\n        /* \"#utility.yul\":3019:3083   */\n      tag_127\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3001:3083   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2796:3093   */\n      pop\n        /* \"#utility.yul\":2137:3100   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3255   */\n    tag_128:\n        /* \"#utility.yul\":3142:3149   */\n      0x00\n        /* \"#utility.yul\":3182:3248   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3175:3180   */\n      dup3\n        /* \"#utility.yul\":3171:3249   */\n      and\n        /* \"#utility.yul\":3160:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3376   */\n    tag_129:\n        /* \"#utility.yul\":3346:3369   */\n      tag_206\n        /* \"#utility.yul\":3363:3368   */\n      dup2\n        /* \"#utility.yul\":3346:3369   */\n      tag_128\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3341:3344   */\n      dup3\n        /* \"#utility.yul\":3334:3370   */\n      mstore\n        /* \"#utility.yul\":3261:3376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3382:3600   */\n    tag_13:\n        /* \"#utility.yul\":3473:3477   */\n      0x00\n        /* \"#utility.yul\":3511:3513   */\n      0x20\n        /* \"#utility.yul\":3500:3509   */\n      dup3\n        /* \"#utility.yul\":3496:3514   */\n      add\n        /* \"#utility.yul\":3488:3514   */\n      swap1\n      pop\n        /* \"#utility.yul\":3524:3593   */\n      tag_208\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3579:3588   */\n      dup4\n        /* \"#utility.yul\":3575:3592   */\n      add\n        /* \"#utility.yul\":3566:3572   */\n      dup5\n        /* \"#utility.yul\":3524:3593   */\n      tag_129\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3382:3600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3606:3723   */\n    tag_130:\n        /* \"#utility.yul\":3715:3716   */\n      0x00\n        /* \"#utility.yul\":3712:3713   */\n      dup1\n        /* \"#utility.yul\":3705:3717   */\n      revert\n        /* \"#utility.yul\":3778:4022   */\n    tag_131:\n        /* \"#utility.yul\":3863:3868   */\n      0x00\n        /* \"#utility.yul\":3904:3907   */\n      0xa0\n        /* \"#utility.yul\":3895:3901   */\n      dup3\n        /* \"#utility.yul\":3890:3893   */\n      dup5\n        /* \"#utility.yul\":3886:3902   */\n      sub\n        /* \"#utility.yul\":3882:3908   */\n      slt\n        /* \"#utility.yul\":3879:3992   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3911:3990   */\n      tag_212\n      tag_130\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3879:3992   */\n    tag_211:\n        /* \"#utility.yul\":4010:4016   */\n      dup2\n        /* \"#utility.yul\":4001:4016   */\n      swap1\n      pop\n        /* \"#utility.yul\":3778:4022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4028:4436   */\n    tag_16:\n        /* \"#utility.yul\":4126:4132   */\n      0x00\n        /* \"#utility.yul\":4175:4178   */\n      0xa0\n        /* \"#utility.yul\":4163:4172   */\n      dup3\n        /* \"#utility.yul\":4154:4161   */\n      dup5\n        /* \"#utility.yul\":4150:4173   */\n      sub\n        /* \"#utility.yul\":4146:4179   */\n      slt\n        /* \"#utility.yul\":4143:4263   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":4182:4261   */\n      tag_215\n      tag_115\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4143:4263   */\n    tag_214:\n        /* \"#utility.yul\":4302:4303   */\n      0x00\n        /* \"#utility.yul\":4327:4419   */\n      tag_216\n        /* \"#utility.yul\":4411:4418   */\n      dup5\n        /* \"#utility.yul\":4402:4408   */\n      dup3\n        /* \"#utility.yul\":4391:4400   */\n      dup6\n        /* \"#utility.yul\":4387:4409   */\n      add\n        /* \"#utility.yul\":4327:4419   */\n      tag_131\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4317:4419   */\n      swap2\n      pop\n        /* \"#utility.yul\":4273:4429   */\n      pop\n        /* \"#utility.yul\":4028:4436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4442:4560   */\n    tag_132:\n        /* \"#utility.yul\":4529:4553   */\n      tag_218\n        /* \"#utility.yul\":4547:4552   */\n      dup2\n        /* \"#utility.yul\":4529:4553   */\n      tag_121\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4524:4527   */\n      dup3\n        /* \"#utility.yul\":4517:4554   */\n      mstore\n        /* \"#utility.yul\":4442:4560   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4566:4684   */\n    tag_133:\n        /* \"#utility.yul\":4603:4610   */\n      0x00\n        /* \"#utility.yul\":4643:4677   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4636:4641   */\n      dup3\n        /* \"#utility.yul\":4632:4678   */\n      and\n        /* \"#utility.yul\":4621:4678   */\n      swap1\n      pop\n        /* \"#utility.yul\":4566:4684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4690:4808   */\n    tag_134:\n        /* \"#utility.yul\":4777:4801   */\n      tag_221\n        /* \"#utility.yul\":4795:4800   */\n      dup2\n        /* \"#utility.yul\":4777:4801   */\n      tag_133\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4772:4775   */\n      dup3\n        /* \"#utility.yul\":4765:4802   */\n      mstore\n        /* \"#utility.yul\":4690:4808   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4814:5367   */\n    tag_19:\n        /* \"#utility.yul\":4991:4995   */\n      0x00\n        /* \"#utility.yul\":5029:5032   */\n      0x80\n        /* \"#utility.yul\":5018:5027   */\n      dup3\n        /* \"#utility.yul\":5014:5033   */\n      add\n        /* \"#utility.yul\":5006:5033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5043:5114   */\n      tag_223\n        /* \"#utility.yul\":5111:5112   */\n      0x00\n        /* \"#utility.yul\":5100:5109   */\n      dup4\n        /* \"#utility.yul\":5096:5113   */\n      add\n        /* \"#utility.yul\":5087:5093   */\n      dup8\n        /* \"#utility.yul\":5043:5114   */\n      tag_132\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5124:5196   */\n      tag_224\n        /* \"#utility.yul\":5192:5194   */\n      0x20\n        /* \"#utility.yul\":5181:5190   */\n      dup4\n        /* \"#utility.yul\":5177:5195   */\n      add\n        /* \"#utility.yul\":5168:5174   */\n      dup7\n        /* \"#utility.yul\":5124:5196   */\n      tag_134\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5206:5278   */\n      tag_225\n        /* \"#utility.yul\":5274:5276   */\n      0x40\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5277   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup6\n        /* \"#utility.yul\":5206:5278   */\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5288:5360   */\n      tag_226\n        /* \"#utility.yul\":5356:5358   */\n      0x60\n        /* \"#utility.yul\":5345:5354   */\n      dup4\n        /* \"#utility.yul\":5341:5359   */\n      add\n        /* \"#utility.yul\":5332:5338   */\n      dup5\n        /* \"#utility.yul\":5288:5360   */\n      tag_132\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4814:5367   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5373:5992   */\n    tag_22:\n        /* \"#utility.yul\":5450:5456   */\n      0x00\n        /* \"#utility.yul\":5458:5464   */\n      dup1\n        /* \"#utility.yul\":5466:5472   */\n      0x00\n        /* \"#utility.yul\":5515:5517   */\n      0x60\n        /* \"#utility.yul\":5503:5512   */\n      dup5\n        /* \"#utility.yul\":5494:5501   */\n      dup7\n        /* \"#utility.yul\":5490:5513   */\n      sub\n        /* \"#utility.yul\":5486:5518   */\n      slt\n        /* \"#utility.yul\":5483:5602   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":5521:5600   */\n      tag_229\n      tag_115\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5483:5602   */\n    tag_228:\n        /* \"#utility.yul\":5641:5642   */\n      0x00\n        /* \"#utility.yul\":5666:5719   */\n      tag_230\n        /* \"#utility.yul\":5711:5718   */\n      dup7\n        /* \"#utility.yul\":5702:5708   */\n      dup3\n        /* \"#utility.yul\":5691:5700   */\n      dup8\n        /* \"#utility.yul\":5687:5709   */\n      add\n        /* \"#utility.yul\":5666:5719   */\n      tag_123\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5656:5719   */\n      swap4\n      pop\n        /* \"#utility.yul\":5612:5729   */\n      pop\n        /* \"#utility.yul\":5768:5770   */\n      0x20\n        /* \"#utility.yul\":5794:5847   */\n      tag_231\n        /* \"#utility.yul\":5839:5846   */\n      dup7\n        /* \"#utility.yul\":5830:5836   */\n      dup3\n        /* \"#utility.yul\":5819:5828   */\n      dup8\n        /* \"#utility.yul\":5815:5837   */\n      add\n        /* \"#utility.yul\":5794:5847   */\n      tag_123\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5784:5847   */\n      swap3\n      pop\n        /* \"#utility.yul\":5739:5857   */\n      pop\n        /* \"#utility.yul\":5896:5898   */\n      0x40\n        /* \"#utility.yul\":5922:5975   */\n      tag_232\n        /* \"#utility.yul\":5967:5974   */\n      dup7\n        /* \"#utility.yul\":5958:5964   */\n      dup3\n        /* \"#utility.yul\":5947:5956   */\n      dup8\n        /* \"#utility.yul\":5943:5965   */\n      add\n        /* \"#utility.yul\":5922:5975   */\n      tag_123\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5912:5975   */\n      swap2\n      pop\n        /* \"#utility.yul\":5867:5985   */\n      pop\n        /* \"#utility.yul\":5373:5992   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5998:6220   */\n    tag_25:\n        /* \"#utility.yul\":6091:6095   */\n      0x00\n        /* \"#utility.yul\":6129:6131   */\n      0x20\n        /* \"#utility.yul\":6118:6127   */\n      dup3\n        /* \"#utility.yul\":6114:6132   */\n      add\n        /* \"#utility.yul\":6106:6132   */\n      swap1\n      pop\n        /* \"#utility.yul\":6142:6213   */\n      tag_234\n        /* \"#utility.yul\":6210:6211   */\n      0x00\n        /* \"#utility.yul\":6199:6208   */\n      dup4\n        /* \"#utility.yul\":6195:6212   */\n      add\n        /* \"#utility.yul\":6186:6192   */\n      dup5\n        /* \"#utility.yul\":6142:6213   */\n      tag_134\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5998:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6555   */\n    tag_28:\n        /* \"#utility.yul\":6285:6291   */\n      0x00\n        /* \"#utility.yul\":6334:6336   */\n      0x20\n        /* \"#utility.yul\":6322:6331   */\n      dup3\n        /* \"#utility.yul\":6313:6320   */\n      dup5\n        /* \"#utility.yul\":6309:6332   */\n      sub\n        /* \"#utility.yul\":6305:6337   */\n      slt\n        /* \"#utility.yul\":6302:6421   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":6340:6419   */\n      tag_237\n      tag_115\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6302:6421   */\n    tag_236:\n        /* \"#utility.yul\":6460:6461   */\n      0x00\n        /* \"#utility.yul\":6485:6538   */\n      tag_238\n        /* \"#utility.yul\":6530:6537   */\n      dup5\n        /* \"#utility.yul\":6521:6527   */\n      dup3\n        /* \"#utility.yul\":6510:6519   */\n      dup6\n        /* \"#utility.yul\":6506:6528   */\n      add\n        /* \"#utility.yul\":6485:6538   */\n      tag_123\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6475:6538   */\n      swap2\n      pop\n        /* \"#utility.yul\":6431:6548   */\n      pop\n        /* \"#utility.yul\":6226:6555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6561:6679   */\n    tag_135:\n        /* \"#utility.yul\":6648:6672   */\n      tag_240\n        /* \"#utility.yul\":6666:6671   */\n      dup2\n        /* \"#utility.yul\":6648:6672   */\n      tag_118\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6643:6646   */\n      dup3\n        /* \"#utility.yul\":6636:6673   */\n      mstore\n        /* \"#utility.yul\":6561:6679   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6685:7017   */\n    tag_31:\n        /* \"#utility.yul\":6806:6810   */\n      0x00\n        /* \"#utility.yul\":6844:6846   */\n      0x40\n        /* \"#utility.yul\":6833:6842   */\n      dup3\n        /* \"#utility.yul\":6829:6847   */\n      add\n        /* \"#utility.yul\":6821:6847   */\n      swap1\n      pop\n        /* \"#utility.yul\":6857:6928   */\n      tag_242\n        /* \"#utility.yul\":6925:6926   */\n      0x00\n        /* \"#utility.yul\":6914:6923   */\n      dup4\n        /* \"#utility.yul\":6910:6927   */\n      add\n        /* \"#utility.yul\":6901:6907   */\n      dup6\n        /* \"#utility.yul\":6857:6928   */\n      tag_135\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6938:7010   */\n      tag_243\n        /* \"#utility.yul\":7006:7008   */\n      0x20\n        /* \"#utility.yul\":6995:7004   */\n      dup4\n        /* \"#utility.yul\":6991:7009   */\n      add\n        /* \"#utility.yul\":6982:6988   */\n      dup5\n        /* \"#utility.yul\":6938:7010   */\n      tag_134\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6685:7017   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7083   */\n    tag_136:\n        /* \"#utility.yul\":7051:7054   */\n      0x00\n        /* \"#utility.yul\":7072:7077   */\n      dup2\n        /* \"#utility.yul\":7065:7077   */\n      swap1\n      pop\n        /* \"#utility.yul\":7023:7083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7231   */\n    tag_137:\n        /* \"#utility.yul\":7139:7148   */\n      0x00\n        /* \"#utility.yul\":7172:7225   */\n      tag_246\n        /* \"#utility.yul\":7190:7224   */\n      tag_247\n        /* \"#utility.yul\":7199:7223   */\n      tag_248\n        /* \"#utility.yul\":7217:7222   */\n      dup5\n        /* \"#utility.yul\":7199:7223   */\n      tag_117\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7190:7224   */\n      tag_136\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7172:7225   */\n      tag_117\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7159:7225   */\n      swap1\n      pop\n        /* \"#utility.yul\":7089:7231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7237:7363   */\n    tag_138:\n        /* \"#utility.yul\":7287:7296   */\n      0x00\n        /* \"#utility.yul\":7320:7357   */\n      tag_250\n        /* \"#utility.yul\":7351:7356   */\n      dup3\n        /* \"#utility.yul\":7320:7357   */\n      tag_137\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7307:7357   */\n      swap1\n      pop\n        /* \"#utility.yul\":7237:7363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7369:7531   */\n    tag_139:\n        /* \"#utility.yul\":7455:7464   */\n      0x00\n        /* \"#utility.yul\":7488:7525   */\n      tag_252\n        /* \"#utility.yul\":7519:7524   */\n      dup3\n        /* \"#utility.yul\":7488:7525   */\n      tag_138\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7475:7525   */\n      swap1\n      pop\n        /* \"#utility.yul\":7369:7531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7537:7740   */\n    tag_140:\n        /* \"#utility.yul\":7660:7733   */\n      tag_254\n        /* \"#utility.yul\":7727:7732   */\n      dup2\n        /* \"#utility.yul\":7660:7733   */\n      tag_139\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7655:7658   */\n      dup3\n        /* \"#utility.yul\":7648:7734   */\n      mstore\n        /* \"#utility.yul\":7537:7740   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7746:8040   */\n    tag_35:\n        /* \"#utility.yul\":7875:7879   */\n      0x00\n        /* \"#utility.yul\":7913:7915   */\n      0x20\n        /* \"#utility.yul\":7902:7911   */\n      dup3\n        /* \"#utility.yul\":7898:7916   */\n      add\n        /* \"#utility.yul\":7890:7916   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:8033   */\n      tag_256\n        /* \"#utility.yul\":8030:8031   */\n      0x00\n        /* \"#utility.yul\":8019:8028   */\n      dup4\n        /* \"#utility.yul\":8015:8032   */\n      add\n        /* \"#utility.yul\":8006:8012   */\n      dup5\n        /* \"#utility.yul\":7926:8033   */\n      tag_140\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7746:8040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8046:8375   */\n    tag_39:\n        /* \"#utility.yul\":8105:8111   */\n      0x00\n        /* \"#utility.yul\":8154:8156   */\n      0x20\n        /* \"#utility.yul\":8142:8151   */\n      dup3\n        /* \"#utility.yul\":8133:8140   */\n      dup5\n        /* \"#utility.yul\":8129:8152   */\n      sub\n        /* \"#utility.yul\":8125:8157   */\n      slt\n        /* \"#utility.yul\":8122:8241   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":8160:8239   */\n      tag_259\n      tag_115\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8122:8241   */\n    tag_258:\n        /* \"#utility.yul\":8280:8281   */\n      0x00\n        /* \"#utility.yul\":8305:8358   */\n      tag_260\n        /* \"#utility.yul\":8350:8357   */\n      dup5\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8330:8339   */\n      dup6\n        /* \"#utility.yul\":8326:8348   */\n      add\n        /* \"#utility.yul\":8305:8358   */\n      tag_120\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8295:8358   */\n      swap2\n      pop\n        /* \"#utility.yul\":8251:8368   */\n      pop\n        /* \"#utility.yul\":8046:8375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8381:8823   */\n    tag_41:\n        /* \"#utility.yul\":8530:8534   */\n      0x00\n        /* \"#utility.yul\":8568:8570   */\n      0x60\n        /* \"#utility.yul\":8557:8566   */\n      dup3\n        /* \"#utility.yul\":8553:8571   */\n      add\n        /* \"#utility.yul\":8545:8571   */\n      swap1\n      pop\n        /* \"#utility.yul\":8581:8652   */\n      tag_262\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8638:8647   */\n      dup4\n        /* \"#utility.yul\":8634:8651   */\n      add\n        /* \"#utility.yul\":8625:8631   */\n      dup7\n        /* \"#utility.yul\":8581:8652   */\n      tag_135\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8662:8734   */\n      tag_263\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8719:8728   */\n      dup4\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"#utility.yul\":8706:8712   */\n      dup6\n        /* \"#utility.yul\":8662:8734   */\n      tag_135\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8744:8816   */\n      tag_264\n        /* \"#utility.yul\":8812:8814   */\n      0x40\n        /* \"#utility.yul\":8801:8810   */\n      dup4\n        /* \"#utility.yul\":8797:8815   */\n      add\n        /* \"#utility.yul\":8788:8794   */\n      dup5\n        /* \"#utility.yul\":8744:8816   */\n      tag_132\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8381:8823   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8829:8919   */\n    tag_141:\n        /* \"#utility.yul\":8863:8870   */\n      0x00\n        /* \"#utility.yul\":8906:8911   */\n      dup2\n        /* \"#utility.yul\":8899:8912   */\n      iszero\n        /* \"#utility.yul\":8892:8913   */\n      iszero\n        /* \"#utility.yul\":8881:8913   */\n      swap1\n      pop\n        /* \"#utility.yul\":8829:8919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9041   */\n    tag_142:\n        /* \"#utility.yul\":8995:9016   */\n      tag_267\n        /* \"#utility.yul\":9010:9015   */\n      dup2\n        /* \"#utility.yul\":8995:9016   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8988:8993   */\n      dup2\n        /* \"#utility.yul\":8985:9017   */\n      eq\n        /* \"#utility.yul\":8975:9035   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":9031:9032   */\n      0x00\n        /* \"#utility.yul\":9028:9029   */\n      dup1\n        /* \"#utility.yul\":9021:9033   */\n      revert\n        /* \"#utility.yul\":8975:9035   */\n    tag_268:\n        /* \"#utility.yul\":8925:9041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9047:9184   */\n    tag_143:\n        /* \"#utility.yul\":9101:9106   */\n      0x00\n        /* \"#utility.yul\":9132:9138   */\n      dup2\n        /* \"#utility.yul\":9126:9139   */\n      mload\n        /* \"#utility.yul\":9117:9139   */\n      swap1\n      pop\n        /* \"#utility.yul\":9148:9178   */\n      tag_270\n        /* \"#utility.yul\":9172:9177   */\n      dup2\n        /* \"#utility.yul\":9148:9178   */\n      tag_142\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9047:9184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9190:9535   */\n    tag_45:\n        /* \"#utility.yul\":9257:9263   */\n      0x00\n        /* \"#utility.yul\":9306:9308   */\n      0x20\n        /* \"#utility.yul\":9294:9303   */\n      dup3\n        /* \"#utility.yul\":9285:9292   */\n      dup5\n        /* \"#utility.yul\":9281:9304   */\n      sub\n        /* \"#utility.yul\":9277:9309   */\n      slt\n        /* \"#utility.yul\":9274:9393   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":9312:9391   */\n      tag_273\n      tag_115\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9274:9393   */\n    tag_272:\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9457:9518   */\n      tag_274\n        /* \"#utility.yul\":9510:9517   */\n      dup5\n        /* \"#utility.yul\":9501:9507   */\n      dup3\n        /* \"#utility.yul\":9490:9499   */\n      dup6\n        /* \"#utility.yul\":9486:9508   */\n      add\n        /* \"#utility.yul\":9457:9518   */\n      tag_143\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9447:9518   */\n      swap2\n      pop\n        /* \"#utility.yul\":9403:9528   */\n      pop\n        /* \"#utility.yul\":9190:9535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9541:9632   */\n    tag_144:\n        /* \"#utility.yul\":9577:9584   */\n      0x00\n        /* \"#utility.yul\":9617:9625   */\n      0xffffff\n        /* \"#utility.yul\":9610:9615   */\n      dup3\n        /* \"#utility.yul\":9606:9626   */\n      and\n        /* \"#utility.yul\":9595:9626   */\n      swap1\n      pop\n        /* \"#utility.yul\":9541:9632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9638:9758   */\n    tag_145:\n        /* \"#utility.yul\":9710:9733   */\n      tag_277\n        /* \"#utility.yul\":9727:9732   */\n      dup2\n        /* \"#utility.yul\":9710:9733   */\n      tag_144\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9703:9708   */\n      dup2\n        /* \"#utility.yul\":9700:9734   */\n      eq\n        /* \"#utility.yul\":9690:9752   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":9748:9749   */\n      0x00\n        /* \"#utility.yul\":9745:9746   */\n      dup1\n        /* \"#utility.yul\":9738:9750   */\n      revert\n        /* \"#utility.yul\":9690:9752   */\n    tag_278:\n        /* \"#utility.yul\":9638:9758   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9764:9901   */\n    tag_146:\n        /* \"#utility.yul\":9809:9814   */\n      0x00\n        /* \"#utility.yul\":9847:9853   */\n      dup2\n        /* \"#utility.yul\":9834:9854   */\n      calldataload\n        /* \"#utility.yul\":9825:9854   */\n      swap1\n      pop\n        /* \"#utility.yul\":9863:9895   */\n      tag_280\n        /* \"#utility.yul\":9889:9894   */\n      dup2\n        /* \"#utility.yul\":9863:9895   */\n      tag_145\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9764:9901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9907:10234   */\n    tag_59:\n        /* \"#utility.yul\":9965:9971   */\n      0x00\n        /* \"#utility.yul\":10014:10016   */\n      0x20\n        /* \"#utility.yul\":10002:10011   */\n      dup3\n        /* \"#utility.yul\":9993:10000   */\n      dup5\n        /* \"#utility.yul\":9989:10012   */\n      sub\n        /* \"#utility.yul\":9985:10017   */\n      slt\n        /* \"#utility.yul\":9982:10101   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":10020:10099   */\n      tag_283\n      tag_115\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9982:10101   */\n    tag_282:\n        /* \"#utility.yul\":10140:10141   */\n      0x00\n        /* \"#utility.yul\":10165:10217   */\n      tag_284\n        /* \"#utility.yul\":10209:10216   */\n      dup5\n        /* \"#utility.yul\":10200:10206   */\n      dup3\n        /* \"#utility.yul\":10189:10198   */\n      dup6\n        /* \"#utility.yul\":10185:10207   */\n      add\n        /* \"#utility.yul\":10165:10217   */\n      tag_146\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10155:10217   */\n      swap2\n      pop\n        /* \"#utility.yul\":10111:10227   */\n      pop\n        /* \"#utility.yul\":9907:10234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10240:10330   */\n    tag_147:\n        /* \"#utility.yul\":10275:10282   */\n      0x00\n        /* \"#utility.yul\":10318:10323   */\n      dup2\n        /* \"#utility.yul\":10315:10316   */\n      0x02\n        /* \"#utility.yul\":10304:10324   */\n      signextend\n        /* \"#utility.yul\":10293:10324   */\n      swap1\n      pop\n        /* \"#utility.yul\":10240:10330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10336:10516   */\n    tag_148:\n        /* \"#utility.yul\":10384:10461   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10381:10382   */\n      0x00\n        /* \"#utility.yul\":10374:10462   */\n      mstore\n        /* \"#utility.yul\":10481:10485   */\n      0x11\n        /* \"#utility.yul\":10478:10479   */\n      0x04\n        /* \"#utility.yul\":10471:10486   */\n      mstore\n        /* \"#utility.yul\":10505:10509   */\n      0x24\n        /* \"#utility.yul\":10502:10503   */\n      0x00\n        /* \"#utility.yul\":10495:10510   */\n      revert\n        /* \"#utility.yul\":10522:10748   */\n    tag_61:\n        /* \"#utility.yul\":10556:10559   */\n      0x00\n        /* \"#utility.yul\":10579:10601   */\n      tag_288\n        /* \"#utility.yul\":10595:10600   */\n      dup3\n        /* \"#utility.yul\":10579:10601   */\n      tag_147\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10570:10601   */\n      swap2\n      pop\n        /* \"#utility.yul\":10623:10689   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":10616:10621   */\n      dup3\n        /* \"#utility.yul\":10613:10690   */\n      sub\n        /* \"#utility.yul\":10610:10713   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":10693:10711   */\n      tag_290\n      tag_148\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":10610:10713   */\n    tag_289:\n        /* \"#utility.yul\":10736:10741   */\n      dup2\n        /* \"#utility.yul\":10733:10734   */\n      0x00\n        /* \"#utility.yul\":10729:10742   */\n      sub\n        /* \"#utility.yul\":10722:10742   */\n      swap1\n      pop\n        /* \"#utility.yul\":10522:10748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10754:10945   */\n    tag_63:\n        /* \"#utility.yul\":10794:10797   */\n      0x00\n        /* \"#utility.yul\":10813:10833   */\n      tag_292\n        /* \"#utility.yul\":10831:10832   */\n      dup3\n        /* \"#utility.yul\":10813:10833   */\n      tag_121\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10808:10833   */\n      swap2\n      pop\n        /* \"#utility.yul\":10847:10867   */\n      tag_293\n        /* \"#utility.yul\":10865:10866   */\n      dup4\n        /* \"#utility.yul\":10847:10867   */\n      tag_121\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":10842:10867   */\n      swap3\n      pop\n        /* \"#utility.yul\":10890:10891   */\n      dup3\n        /* \"#utility.yul\":10887:10888   */\n      dup3\n        /* \"#utility.yul\":10883:10892   */\n      add\n        /* \"#utility.yul\":10876:10892   */\n      swap1\n      pop\n        /* \"#utility.yul\":10911:10914   */\n      dup1\n        /* \"#utility.yul\":10908:10909   */\n      dup3\n        /* \"#utility.yul\":10905:10915   */\n      gt\n        /* \"#utility.yul\":10902:10938   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":10918:10936   */\n      tag_295\n      tag_148\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10902:10938   */\n    tag_294:\n        /* \"#utility.yul\":10754:10945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10951:11059   */\n    tag_149:\n        /* \"#utility.yul\":11028:11052   */\n      tag_297\n        /* \"#utility.yul\":11046:11051   */\n      dup2\n        /* \"#utility.yul\":11028:11052   */\n      tag_118\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11023:11026   */\n      dup3\n        /* \"#utility.yul\":11016:11053   */\n      mstore\n        /* \"#utility.yul\":10951:11059   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11065:11170   */\n    tag_150:\n        /* \"#utility.yul\":11140:11163   */\n      tag_299\n        /* \"#utility.yul\":11157:11162   */\n      dup2\n        /* \"#utility.yul\":11140:11163   */\n      tag_144\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":11135:11138   */\n      dup3\n        /* \"#utility.yul\":11128:11164   */\n      mstore\n        /* \"#utility.yul\":11065:11170   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11176:11278   */\n    tag_151:\n        /* \"#utility.yul\":11249:11271   */\n      tag_301\n        /* \"#utility.yul\":11265:11270   */\n      dup2\n        /* \"#utility.yul\":11249:11271   */\n      tag_147\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11244:11247   */\n      dup3\n        /* \"#utility.yul\":11237:11272   */\n      mstore\n        /* \"#utility.yul\":11176:11278   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11284:11392   */\n    tag_152:\n        /* \"#utility.yul\":11361:11385   */\n      tag_303\n        /* \"#utility.yul\":11379:11384   */\n      dup2\n        /* \"#utility.yul\":11361:11385   */\n      tag_121\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11356:11359   */\n      dup3\n        /* \"#utility.yul\":11349:11386   */\n      mstore\n        /* \"#utility.yul\":11284:11392   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11500:13637   */\n    tag_153:\n        /* \"#utility.yul\":11653:11659   */\n      0x0160\n        /* \"#utility.yul\":11648:11651   */\n      dup3\n        /* \"#utility.yul\":11644:11660   */\n      add\n        /* \"#utility.yul\":11744:11748   */\n      0x00\n        /* \"#utility.yul\":11737:11742   */\n      dup3\n        /* \"#utility.yul\":11733:11749   */\n      add\n        /* \"#utility.yul\":11727:11750   */\n      mload\n        /* \"#utility.yul\":11763:11826   */\n      tag_305\n        /* \"#utility.yul\":11820:11824   */\n      0x00\n        /* \"#utility.yul\":11815:11818   */\n      dup6\n        /* \"#utility.yul\":11811:11825   */\n      add\n        /* \"#utility.yul\":11797:11809   */\n      dup3\n        /* \"#utility.yul\":11763:11826   */\n      tag_149\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11670:11836   */\n      pop\n        /* \"#utility.yul\":11920:11924   */\n      0x20\n        /* \"#utility.yul\":11913:11918   */\n      dup3\n        /* \"#utility.yul\":11909:11925   */\n      add\n        /* \"#utility.yul\":11903:11926   */\n      mload\n        /* \"#utility.yul\":11939:12002   */\n      tag_306\n        /* \"#utility.yul\":11996:12000   */\n      0x20\n        /* \"#utility.yul\":11991:11994   */\n      dup6\n        /* \"#utility.yul\":11987:12001   */\n      add\n        /* \"#utility.yul\":11973:11985   */\n      dup3\n        /* \"#utility.yul\":11939:12002   */\n      tag_149\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11846:12012   */\n      pop\n        /* \"#utility.yul\":12093:12097   */\n      0x40\n        /* \"#utility.yul\":12086:12091   */\n      dup3\n        /* \"#utility.yul\":12082:12098   */\n      add\n        /* \"#utility.yul\":12076:12099   */\n      mload\n        /* \"#utility.yul\":12112:12173   */\n      tag_307\n        /* \"#utility.yul\":12167:12171   */\n      0x40\n        /* \"#utility.yul\":12162:12165   */\n      dup6\n        /* \"#utility.yul\":12158:12172   */\n      add\n        /* \"#utility.yul\":12144:12156   */\n      dup3\n        /* \"#utility.yul\":12112:12173   */\n      tag_150\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":12022:12183   */\n      pop\n        /* \"#utility.yul\":12270:12274   */\n      0x60\n        /* \"#utility.yul\":12263:12268   */\n      dup3\n        /* \"#utility.yul\":12259:12275   */\n      add\n        /* \"#utility.yul\":12253:12276   */\n      mload\n        /* \"#utility.yul\":12289:12348   */\n      tag_308\n        /* \"#utility.yul\":12342:12346   */\n      0x60\n        /* \"#utility.yul\":12337:12340   */\n      dup6\n        /* \"#utility.yul\":12333:12347   */\n      add\n        /* \"#utility.yul\":12319:12331   */\n      dup3\n        /* \"#utility.yul\":12289:12348   */\n      tag_151\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12193:12358   */\n      pop\n        /* \"#utility.yul\":12445:12449   */\n      0x80\n        /* \"#utility.yul\":12438:12443   */\n      dup3\n        /* \"#utility.yul\":12434:12450   */\n      add\n        /* \"#utility.yul\":12428:12451   */\n      mload\n        /* \"#utility.yul\":12464:12523   */\n      tag_309\n        /* \"#utility.yul\":12517:12521   */\n      0x80\n        /* \"#utility.yul\":12512:12515   */\n      dup6\n        /* \"#utility.yul\":12508:12522   */\n      add\n        /* \"#utility.yul\":12494:12506   */\n      dup3\n        /* \"#utility.yul\":12464:12523   */\n      tag_151\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":12368:12533   */\n      pop\n        /* \"#utility.yul\":12625:12629   */\n      0xa0\n        /* \"#utility.yul\":12618:12623   */\n      dup3\n        /* \"#utility.yul\":12614:12630   */\n      add\n        /* \"#utility.yul\":12608:12631   */\n      mload\n        /* \"#utility.yul\":12644:12707   */\n      tag_310\n        /* \"#utility.yul\":12701:12705   */\n      0xa0\n        /* \"#utility.yul\":12696:12699   */\n      dup6\n        /* \"#utility.yul\":12692:12706   */\n      add\n        /* \"#utility.yul\":12678:12690   */\n      dup3\n        /* \"#utility.yul\":12644:12707   */\n      tag_152\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12543:12717   */\n      pop\n        /* \"#utility.yul\":12809:12813   */\n      0xc0\n        /* \"#utility.yul\":12802:12807   */\n      dup3\n        /* \"#utility.yul\":12798:12814   */\n      add\n        /* \"#utility.yul\":12792:12815   */\n      mload\n        /* \"#utility.yul\":12828:12891   */\n      tag_311\n        /* \"#utility.yul\":12885:12889   */\n      0xc0\n        /* \"#utility.yul\":12880:12883   */\n      dup6\n        /* \"#utility.yul\":12876:12890   */\n      add\n        /* \"#utility.yul\":12862:12874   */\n      dup3\n        /* \"#utility.yul\":12828:12891   */\n      tag_152\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":12727:12901   */\n      pop\n        /* \"#utility.yul\":12989:12993   */\n      0xe0\n        /* \"#utility.yul\":12982:12987   */\n      dup3\n        /* \"#utility.yul\":12978:12994   */\n      add\n        /* \"#utility.yul\":12972:12995   */\n      mload\n        /* \"#utility.yul\":13008:13071   */\n      tag_312\n        /* \"#utility.yul\":13065:13069   */\n      0xe0\n        /* \"#utility.yul\":13060:13063   */\n      dup6\n        /* \"#utility.yul\":13056:13070   */\n      add\n        /* \"#utility.yul\":13042:13054   */\n      dup3\n        /* \"#utility.yul\":13008:13071   */\n      tag_152\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12911:13081   */\n      pop\n        /* \"#utility.yul\":13169:13175   */\n      0x0100\n        /* \"#utility.yul\":13162:13167   */\n      dup3\n        /* \"#utility.yul\":13158:13176   */\n      add\n        /* \"#utility.yul\":13152:13177   */\n      mload\n        /* \"#utility.yul\":13190:13255   */\n      tag_313\n        /* \"#utility.yul\":13247:13253   */\n      0x0100\n        /* \"#utility.yul\":13242:13245   */\n      dup6\n        /* \"#utility.yul\":13238:13254   */\n      add\n        /* \"#utility.yul\":13224:13236   */\n      dup3\n        /* \"#utility.yul\":13190:13255   */\n      tag_152\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":13091:13265   */\n      pop\n        /* \"#utility.yul\":13352:13358   */\n      0x0120\n        /* \"#utility.yul\":13345:13350   */\n      dup3\n        /* \"#utility.yul\":13341:13359   */\n      add\n        /* \"#utility.yul\":13335:13360   */\n      mload\n        /* \"#utility.yul\":13373:13438   */\n      tag_314\n        /* \"#utility.yul\":13430:13436   */\n      0x0120\n        /* \"#utility.yul\":13425:13428   */\n      dup6\n        /* \"#utility.yul\":13421:13437   */\n      add\n        /* \"#utility.yul\":13407:13419   */\n      dup3\n        /* \"#utility.yul\":13373:13438   */\n      tag_149\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13275:13448   */\n      pop\n        /* \"#utility.yul\":13534:13540   */\n      0x0140\n        /* \"#utility.yul\":13527:13532   */\n      dup3\n        /* \"#utility.yul\":13523:13541   */\n      add\n        /* \"#utility.yul\":13517:13542   */\n      mload\n        /* \"#utility.yul\":13555:13620   */\n      tag_315\n        /* \"#utility.yul\":13612:13618   */\n      0x0140\n        /* \"#utility.yul\":13607:13610   */\n      dup6\n        /* \"#utility.yul\":13603:13619   */\n      add\n        /* \"#utility.yul\":13589:13601   */\n      dup3\n        /* \"#utility.yul\":13555:13620   */\n      tag_152\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":13458:13630   */\n      pop\n        /* \"#utility.yul\":11622:13637   */\n      pop\n        /* \"#utility.yul\":11500:13637   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13643:13978   */\n    tag_65:\n        /* \"#utility.yul\":13792:13796   */\n      0x00\n        /* \"#utility.yul\":13830:13833   */\n      0x0160\n        /* \"#utility.yul\":13819:13828   */\n      dup3\n        /* \"#utility.yul\":13815:13834   */\n      add\n        /* \"#utility.yul\":13807:13834   */\n      swap1\n      pop\n        /* \"#utility.yul\":13844:13971   */\n      tag_317\n        /* \"#utility.yul\":13968:13969   */\n      0x00\n        /* \"#utility.yul\":13957:13966   */\n      dup4\n        /* \"#utility.yul\":13953:13970   */\n      add\n        /* \"#utility.yul\":13944:13950   */\n      dup5\n        /* \"#utility.yul\":13844:13971   */\n      tag_153\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":13643:13978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13984:14127   */\n    tag_154:\n        /* \"#utility.yul\":14041:14046   */\n      0x00\n        /* \"#utility.yul\":14072:14078   */\n      dup2\n        /* \"#utility.yul\":14066:14079   */\n      mload\n        /* \"#utility.yul\":14057:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":14088:14121   */\n      tag_319\n        /* \"#utility.yul\":14115:14120   */\n      dup2\n        /* \"#utility.yul\":14088:14121   */\n      tag_122\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":13984:14127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14133:14255   */\n    tag_155:\n        /* \"#utility.yul\":14206:14230   */\n      tag_321\n        /* \"#utility.yul\":14224:14229   */\n      dup2\n        /* \"#utility.yul\":14206:14230   */\n      tag_133\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":14199:14204   */\n      dup2\n        /* \"#utility.yul\":14196:14231   */\n      eq\n        /* \"#utility.yul\":14186:14249   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":14245:14246   */\n      0x00\n        /* \"#utility.yul\":14242:14243   */\n      dup1\n        /* \"#utility.yul\":14235:14247   */\n      revert\n        /* \"#utility.yul\":14186:14249   */\n    tag_322:\n        /* \"#utility.yul\":14133:14255   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14261:14404   */\n    tag_156:\n        /* \"#utility.yul\":14318:14323   */\n      0x00\n        /* \"#utility.yul\":14349:14355   */\n      dup2\n        /* \"#utility.yul\":14343:14356   */\n      mload\n        /* \"#utility.yul\":14334:14356   */\n      swap1\n      pop\n        /* \"#utility.yul\":14365:14398   */\n      tag_324\n        /* \"#utility.yul\":14392:14397   */\n      dup2\n        /* \"#utility.yul\":14365:14398   */\n      tag_155\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":14261:14404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14410:15230   */\n    tag_69:\n        /* \"#utility.yul\":14507:14513   */\n      0x00\n        /* \"#utility.yul\":14515:14521   */\n      dup1\n        /* \"#utility.yul\":14523:14529   */\n      0x00\n        /* \"#utility.yul\":14531:14537   */\n      dup1\n        /* \"#utility.yul\":14580:14583   */\n      0x80\n        /* \"#utility.yul\":14568:14577   */\n      dup6\n        /* \"#utility.yul\":14559:14566   */\n      dup8\n        /* \"#utility.yul\":14555:14578   */\n      sub\n        /* \"#utility.yul\":14551:14584   */\n      slt\n        /* \"#utility.yul\":14548:14668   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":14587:14666   */\n      tag_327\n      tag_115\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":14548:14668   */\n    tag_326:\n        /* \"#utility.yul\":14707:14708   */\n      0x00\n        /* \"#utility.yul\":14732:14796   */\n      tag_328\n        /* \"#utility.yul\":14788:14795   */\n      dup8\n        /* \"#utility.yul\":14779:14785   */\n      dup3\n        /* \"#utility.yul\":14768:14777   */\n      dup9\n        /* \"#utility.yul\":14764:14786   */\n      add\n        /* \"#utility.yul\":14732:14796   */\n      tag_154\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":14722:14796   */\n      swap5\n      pop\n        /* \"#utility.yul\":14678:14806   */\n      pop\n        /* \"#utility.yul\":14845:14847   */\n      0x20\n        /* \"#utility.yul\":14871:14935   */\n      tag_329\n        /* \"#utility.yul\":14927:14934   */\n      dup8\n        /* \"#utility.yul\":14918:14924   */\n      dup3\n        /* \"#utility.yul\":14907:14916   */\n      dup9\n        /* \"#utility.yul\":14903:14925   */\n      add\n        /* \"#utility.yul\":14871:14935   */\n      tag_156\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":14861:14935   */\n      swap4\n      pop\n        /* \"#utility.yul\":14816:14945   */\n      pop\n        /* \"#utility.yul\":14984:14986   */\n      0x40\n        /* \"#utility.yul\":15010:15074   */\n      tag_330\n        /* \"#utility.yul\":15066:15073   */\n      dup8\n        /* \"#utility.yul\":15057:15063   */\n      dup3\n        /* \"#utility.yul\":15046:15055   */\n      dup9\n        /* \"#utility.yul\":15042:15064   */\n      add\n        /* \"#utility.yul\":15010:15074   */\n      tag_154\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":15000:15074   */\n      swap3\n      pop\n        /* \"#utility.yul\":14955:15084   */\n      pop\n        /* \"#utility.yul\":15123:15125   */\n      0x60\n        /* \"#utility.yul\":15149:15213   */\n      tag_331\n        /* \"#utility.yul\":15205:15212   */\n      dup8\n        /* \"#utility.yul\":15196:15202   */\n      dup3\n        /* \"#utility.yul\":15185:15194   */\n      dup9\n        /* \"#utility.yul\":15181:15203   */\n      add\n        /* \"#utility.yul\":15149:15213   */\n      tag_154\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":15139:15213   */\n      swap2\n      pop\n        /* \"#utility.yul\":15094:15223   */\n      pop\n        /* \"#utility.yul\":14410:15230   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15236:15430   */\n    tag_74:\n        /* \"#utility.yul\":15276:15280   */\n      0x00\n        /* \"#utility.yul\":15296:15316   */\n      tag_333\n        /* \"#utility.yul\":15314:15315   */\n      dup3\n        /* \"#utility.yul\":15296:15316   */\n      tag_121\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":15291:15316   */\n      swap2\n      pop\n        /* \"#utility.yul\":15330:15350   */\n      tag_334\n        /* \"#utility.yul\":15348:15349   */\n      dup4\n        /* \"#utility.yul\":15330:15350   */\n      tag_121\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":15325:15350   */\n      swap3\n      pop\n        /* \"#utility.yul\":15374:15375   */\n      dup3\n        /* \"#utility.yul\":15371:15372   */\n      dup3\n        /* \"#utility.yul\":15367:15376   */\n      sub\n        /* \"#utility.yul\":15359:15376   */\n      swap1\n      pop\n        /* \"#utility.yul\":15398:15399   */\n      dup2\n        /* \"#utility.yul\":15392:15396   */\n      dup2\n        /* \"#utility.yul\":15389:15400   */\n      gt\n        /* \"#utility.yul\":15386:15423   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":15403:15421   */\n      tag_336\n      tag_148\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":15386:15423   */\n    tag_335:\n        /* \"#utility.yul\":15236:15430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15564:16838   */\n    tag_157:\n        /* \"#utility.yul\":15743:15747   */\n      0xc0\n        /* \"#utility.yul\":15738:15741   */\n      dup3\n        /* \"#utility.yul\":15734:15748   */\n      add\n        /* \"#utility.yul\":15833:15837   */\n      0x00\n        /* \"#utility.yul\":15826:15831   */\n      dup3\n        /* \"#utility.yul\":15822:15838   */\n      add\n        /* \"#utility.yul\":15816:15839   */\n      mload\n        /* \"#utility.yul\":15852:15915   */\n      tag_338\n        /* \"#utility.yul\":15909:15913   */\n      0x00\n        /* \"#utility.yul\":15904:15907   */\n      dup6\n        /* \"#utility.yul\":15900:15914   */\n      add\n        /* \"#utility.yul\":15886:15898   */\n      dup3\n        /* \"#utility.yul\":15852:15915   */\n      tag_152\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":15758:15925   */\n      pop\n        /* \"#utility.yul\":16017:16021   */\n      0x20\n        /* \"#utility.yul\":16010:16015   */\n      dup3\n        /* \"#utility.yul\":16006:16022   */\n      add\n        /* \"#utility.yul\":16000:16023   */\n      mload\n        /* \"#utility.yul\":16036:16099   */\n      tag_339\n        /* \"#utility.yul\":16093:16097   */\n      0x20\n        /* \"#utility.yul\":16088:16091   */\n      dup6\n        /* \"#utility.yul\":16084:16098   */\n      add\n        /* \"#utility.yul\":16070:16082   */\n      dup3\n        /* \"#utility.yul\":16036:16099   */\n      tag_152\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":15935:16109   */\n      pop\n        /* \"#utility.yul\":16201:16205   */\n      0x40\n        /* \"#utility.yul\":16194:16199   */\n      dup3\n        /* \"#utility.yul\":16190:16206   */\n      add\n        /* \"#utility.yul\":16184:16207   */\n      mload\n        /* \"#utility.yul\":16220:16283   */\n      tag_340\n        /* \"#utility.yul\":16277:16281   */\n      0x40\n        /* \"#utility.yul\":16272:16275   */\n      dup6\n        /* \"#utility.yul\":16268:16282   */\n      add\n        /* \"#utility.yul\":16254:16266   */\n      dup3\n        /* \"#utility.yul\":16220:16283   */\n      tag_152\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":16119:16293   */\n      pop\n        /* \"#utility.yul\":16381:16385   */\n      0x60\n        /* \"#utility.yul\":16374:16379   */\n      dup3\n        /* \"#utility.yul\":16370:16386   */\n      add\n        /* \"#utility.yul\":16364:16387   */\n      mload\n        /* \"#utility.yul\":16400:16463   */\n      tag_341\n        /* \"#utility.yul\":16457:16461   */\n      0x60\n        /* \"#utility.yul\":16452:16455   */\n      dup6\n        /* \"#utility.yul\":16448:16462   */\n      add\n        /* \"#utility.yul\":16434:16446   */\n      dup3\n        /* \"#utility.yul\":16400:16463   */\n      tag_152\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":16303:16473   */\n      pop\n        /* \"#utility.yul\":16561:16565   */\n      0x80\n        /* \"#utility.yul\":16554:16559   */\n      dup3\n        /* \"#utility.yul\":16550:16566   */\n      add\n        /* \"#utility.yul\":16544:16567   */\n      mload\n        /* \"#utility.yul\":16580:16643   */\n      tag_342\n        /* \"#utility.yul\":16637:16641   */\n      0x80\n        /* \"#utility.yul\":16632:16635   */\n      dup6\n        /* \"#utility.yul\":16628:16642   */\n      add\n        /* \"#utility.yul\":16614:16626   */\n      dup3\n        /* \"#utility.yul\":16580:16643   */\n      tag_152\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":16483:16653   */\n      pop\n        /* \"#utility.yul\":16739:16743   */\n      0xa0\n        /* \"#utility.yul\":16732:16737   */\n      dup3\n        /* \"#utility.yul\":16728:16744   */\n      add\n        /* \"#utility.yul\":16722:16745   */\n      mload\n        /* \"#utility.yul\":16758:16821   */\n      tag_343\n        /* \"#utility.yul\":16815:16819   */\n      0xa0\n        /* \"#utility.yul\":16810:16813   */\n      dup6\n        /* \"#utility.yul\":16806:16820   */\n      add\n        /* \"#utility.yul\":16792:16804   */\n      dup3\n        /* \"#utility.yul\":16758:16821   */\n      tag_152\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":16663:16831   */\n      pop\n        /* \"#utility.yul\":15712:16838   */\n      pop\n        /* \"#utility.yul\":15564:16838   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16844:17231   */\n    tag_83:\n        /* \"#utility.yul\":17019:17023   */\n      0x00\n        /* \"#utility.yul\":17057:17060   */\n      0xc0\n        /* \"#utility.yul\":17046:17055   */\n      dup3\n        /* \"#utility.yul\":17042:17061   */\n      add\n        /* \"#utility.yul\":17034:17061   */\n      swap1\n      pop\n        /* \"#utility.yul\":17071:17224   */\n      tag_345\n        /* \"#utility.yul\":17221:17222   */\n      0x00\n        /* \"#utility.yul\":17210:17219   */\n      dup4\n        /* \"#utility.yul\":17206:17223   */\n      add\n        /* \"#utility.yul\":17197:17203   */\n      dup5\n        /* \"#utility.yul\":17071:17224   */\n      tag_157\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":16844:17231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17237:17900   */\n    tag_87:\n        /* \"#utility.yul\":17325:17331   */\n      0x00\n        /* \"#utility.yul\":17333:17339   */\n      dup1\n        /* \"#utility.yul\":17341:17347   */\n      0x00\n        /* \"#utility.yul\":17390:17392   */\n      0x60\n        /* \"#utility.yul\":17378:17387   */\n      dup5\n        /* \"#utility.yul\":17369:17376   */\n      dup7\n        /* \"#utility.yul\":17365:17388   */\n      sub\n        /* \"#utility.yul\":17361:17393   */\n      slt\n        /* \"#utility.yul\":17358:17477   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":17396:17475   */\n      tag_348\n      tag_115\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":17358:17477   */\n    tag_347:\n        /* \"#utility.yul\":17516:17517   */\n      0x00\n        /* \"#utility.yul\":17541:17605   */\n      tag_349\n        /* \"#utility.yul\":17597:17604   */\n      dup7\n        /* \"#utility.yul\":17588:17594   */\n      dup3\n        /* \"#utility.yul\":17577:17586   */\n      dup8\n        /* \"#utility.yul\":17573:17595   */\n      add\n        /* \"#utility.yul\":17541:17605   */\n      tag_156\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":17531:17605   */\n      swap4\n      pop\n        /* \"#utility.yul\":17487:17615   */\n      pop\n        /* \"#utility.yul\":17654:17656   */\n      0x20\n        /* \"#utility.yul\":17680:17744   */\n      tag_350\n        /* \"#utility.yul\":17736:17743   */\n      dup7\n        /* \"#utility.yul\":17727:17733   */\n      dup3\n        /* \"#utility.yul\":17716:17725   */\n      dup8\n        /* \"#utility.yul\":17712:17734   */\n      add\n        /* \"#utility.yul\":17680:17744   */\n      tag_154\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":17670:17744   */\n      swap3\n      pop\n        /* \"#utility.yul\":17625:17754   */\n      pop\n        /* \"#utility.yul\":17793:17795   */\n      0x40\n        /* \"#utility.yul\":17819:17883   */\n      tag_351\n        /* \"#utility.yul\":17875:17882   */\n      dup7\n        /* \"#utility.yul\":17866:17872   */\n      dup3\n        /* \"#utility.yul\":17855:17864   */\n      dup8\n        /* \"#utility.yul\":17851:17873   */\n      add\n        /* \"#utility.yul\":17819:17883   */\n      tag_154\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":17809:17883   */\n      swap2\n      pop\n        /* \"#utility.yul\":17764:17893   */\n      pop\n        /* \"#utility.yul\":17237:17900   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":17906:18238   */\n    tag_90:\n        /* \"#utility.yul\":18027:18031   */\n      0x00\n        /* \"#utility.yul\":18065:18067   */\n      0x40\n        /* \"#utility.yul\":18054:18063   */\n      dup3\n        /* \"#utility.yul\":18050:18068   */\n      add\n        /* \"#utility.yul\":18042:18068   */\n      swap1\n      pop\n        /* \"#utility.yul\":18078:18149   */\n      tag_353\n        /* \"#utility.yul\":18146:18147   */\n      0x00\n        /* \"#utility.yul\":18135:18144   */\n      dup4\n        /* \"#utility.yul\":18131:18148   */\n      add\n        /* \"#utility.yul\":18122:18128   */\n      dup6\n        /* \"#utility.yul\":18078:18149   */\n      tag_135\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":18159:18231   */\n      tag_354\n        /* \"#utility.yul\":18227:18229   */\n      0x20\n        /* \"#utility.yul\":18216:18225   */\n      dup4\n        /* \"#utility.yul\":18212:18230   */\n      add\n        /* \"#utility.yul\":18203:18209   */\n      dup5\n        /* \"#utility.yul\":18159:18231   */\n      tag_132\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":17906:18238   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18244:18342   */\n    tag_158:\n        /* \"#utility.yul\":18295:18301   */\n      0x00\n        /* \"#utility.yul\":18329:18334   */\n      dup2\n        /* \"#utility.yul\":18323:18335   */\n      mload\n        /* \"#utility.yul\":18313:18335   */\n      swap1\n      pop\n        /* \"#utility.yul\":18244:18342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18348:18495   */\n    tag_159:\n        /* \"#utility.yul\":18449:18460   */\n      0x00\n        /* \"#utility.yul\":18486:18489   */\n      dup2\n        /* \"#utility.yul\":18471:18489   */\n      swap1\n      pop\n        /* \"#utility.yul\":18348:18495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18501:18747   */\n    tag_160:\n        /* \"#utility.yul\":18582:18583   */\n      0x00\n        /* \"#utility.yul\":18592:18705   */\n    tag_358:\n        /* \"#utility.yul\":18606:18612   */\n      dup4\n        /* \"#utility.yul\":18603:18604   */\n      dup2\n        /* \"#utility.yul\":18600:18613   */\n      lt\n        /* \"#utility.yul\":18592:18705   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":18691:18692   */\n      dup1\n        /* \"#utility.yul\":18686:18689   */\n      dup3\n        /* \"#utility.yul\":18682:18693   */\n      add\n        /* \"#utility.yul\":18676:18694   */\n      mload\n        /* \"#utility.yul\":18672:18673   */\n      dup2\n        /* \"#utility.yul\":18667:18670   */\n      dup5\n        /* \"#utility.yul\":18663:18674   */\n      add\n        /* \"#utility.yul\":18656:18695   */\n      mstore\n        /* \"#utility.yul\":18628:18630   */\n      0x20\n        /* \"#utility.yul\":18625:18626   */\n      dup2\n        /* \"#utility.yul\":18621:18631   */\n      add\n        /* \"#utility.yul\":18616:18631   */\n      swap1\n      pop\n        /* \"#utility.yul\":18592:18705   */\n      jump(tag_358)\n    tag_360:\n        /* \"#utility.yul\":18739:18740   */\n      0x00\n        /* \"#utility.yul\":18730:18736   */\n      dup5\n        /* \"#utility.yul\":18725:18728   */\n      dup5\n        /* \"#utility.yul\":18721:18737   */\n      add\n        /* \"#utility.yul\":18714:18741   */\n      mstore\n        /* \"#utility.yul\":18563:18747   */\n      pop\n        /* \"#utility.yul\":18501:18747   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18753:19139   */\n    tag_161:\n        /* \"#utility.yul\":18857:18860   */\n      0x00\n        /* \"#utility.yul\":18885:18923   */\n      tag_362\n        /* \"#utility.yul\":18917:18922   */\n      dup3\n        /* \"#utility.yul\":18885:18923   */\n      tag_158\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":18939:19027   */\n      tag_363\n        /* \"#utility.yul\":19020:19026   */\n      dup2\n        /* \"#utility.yul\":19015:19018   */\n      dup6\n        /* \"#utility.yul\":18939:19027   */\n      tag_159\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":18932:19027   */\n      swap4\n      pop\n        /* \"#utility.yul\":19036:19101   */\n      tag_364\n        /* \"#utility.yul\":19094:19100   */\n      dup2\n        /* \"#utility.yul\":19089:19092   */\n      dup6\n        /* \"#utility.yul\":19082:19086   */\n      0x20\n        /* \"#utility.yul\":19075:19080   */\n      dup7\n        /* \"#utility.yul\":19071:19087   */\n      add\n        /* \"#utility.yul\":19036:19101   */\n      tag_160\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":19126:19132   */\n      dup1\n        /* \"#utility.yul\":19121:19124   */\n      dup5\n        /* \"#utility.yul\":19117:19133   */\n      add\n        /* \"#utility.yul\":19110:19133   */\n      swap2\n      pop\n        /* \"#utility.yul\":18861:19139   */\n      pop\n        /* \"#utility.yul\":18753:19139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19145:19416   */\n    tag_92:\n        /* \"#utility.yul\":19275:19278   */\n      0x00\n        /* \"#utility.yul\":19297:19390   */\n      tag_366\n        /* \"#utility.yul\":19386:19389   */\n      dup3\n        /* \"#utility.yul\":19377:19383   */\n      dup5\n        /* \"#utility.yul\":19297:19390   */\n      tag_161\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":19290:19390   */\n      swap2\n      pop\n        /* \"#utility.yul\":19407:19410   */\n      dup2\n        /* \"#utility.yul\":19400:19410   */\n      swap1\n      pop\n        /* \"#utility.yul\":19145:19416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19422:19591   */\n    tag_162:\n        /* \"#utility.yul\":19506:19517   */\n      0x00\n        /* \"#utility.yul\":19540:19546   */\n      dup3\n        /* \"#utility.yul\":19535:19538   */\n      dup3\n        /* \"#utility.yul\":19528:19547   */\n      mstore\n        /* \"#utility.yul\":19580:19584   */\n      0x20\n        /* \"#utility.yul\":19575:19578   */\n      dup3\n        /* \"#utility.yul\":19571:19585   */\n      add\n        /* \"#utility.yul\":19556:19585   */\n      swap1\n      pop\n        /* \"#utility.yul\":19422:19591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19597:19749   */\n    tag_163:\n        /* \"#utility.yul\":19737:19741   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19733:19734   */\n      0x00\n        /* \"#utility.yul\":19725:19731   */\n      dup3\n        /* \"#utility.yul\":19721:19735   */\n      add\n        /* \"#utility.yul\":19714:19742   */\n      mstore\n        /* \"#utility.yul\":19597:19749   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19755:20120   */\n    tag_164:\n        /* \"#utility.yul\":19897:19900   */\n      0x00\n        /* \"#utility.yul\":19918:19984   */\n      tag_370\n        /* \"#utility.yul\":19982:19983   */\n      0x02\n        /* \"#utility.yul\":19977:19980   */\n      dup4\n        /* \"#utility.yul\":19918:19984   */\n      tag_162\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":19911:19984   */\n      swap2\n      pop\n        /* \"#utility.yul\":19993:20086   */\n      tag_371\n        /* \"#utility.yul\":20082:20085   */\n      dup3\n        /* \"#utility.yul\":19993:20086   */\n      tag_163\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":20111:20113   */\n      0x20\n        /* \"#utility.yul\":20106:20109   */\n      dup3\n        /* \"#utility.yul\":20102:20114   */\n      add\n        /* \"#utility.yul\":20095:20114   */\n      swap1\n      pop\n        /* \"#utility.yul\":19755:20120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20126:20545   */\n    tag_101:\n        /* \"#utility.yul\":20292:20296   */\n      0x00\n        /* \"#utility.yul\":20330:20332   */\n      0x20\n        /* \"#utility.yul\":20319:20328   */\n      dup3\n        /* \"#utility.yul\":20315:20333   */\n      add\n        /* \"#utility.yul\":20307:20333   */\n      swap1\n      pop\n        /* \"#utility.yul\":20379:20388   */\n      dup2\n        /* \"#utility.yul\":20373:20377   */\n      dup2\n        /* \"#utility.yul\":20369:20389   */\n      sub\n        /* \"#utility.yul\":20365:20366   */\n      0x00\n        /* \"#utility.yul\":20354:20363   */\n      dup4\n        /* \"#utility.yul\":20350:20367   */\n      add\n        /* \"#utility.yul\":20343:20390   */\n      mstore\n        /* \"#utility.yul\":20407:20538   */\n      tag_373\n        /* \"#utility.yul\":20533:20537   */\n      dup2\n        /* \"#utility.yul\":20407:20538   */\n      tag_164\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":20399:20538   */\n      swap1\n      pop\n        /* \"#utility.yul\":20126:20545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20551:20703   */\n    tag_165:\n        /* \"#utility.yul\":20691:20695   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20687:20688   */\n      0x00\n        /* \"#utility.yul\":20679:20685   */\n      dup3\n        /* \"#utility.yul\":20675:20689   */\n      add\n        /* \"#utility.yul\":20668:20696   */\n      mstore\n        /* \"#utility.yul\":20551:20703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20709:21074   */\n    tag_166:\n        /* \"#utility.yul\":20851:20854   */\n      0x00\n        /* \"#utility.yul\":20872:20938   */\n      tag_376\n        /* \"#utility.yul\":20936:20937   */\n      0x02\n        /* \"#utility.yul\":20931:20934   */\n      dup4\n        /* \"#utility.yul\":20872:20938   */\n      tag_162\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":20865:20938   */\n      swap2\n      pop\n        /* \"#utility.yul\":20947:21040   */\n      tag_377\n        /* \"#utility.yul\":21036:21039   */\n      dup3\n        /* \"#utility.yul\":20947:21040   */\n      tag_165\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":21065:21067   */\n      0x20\n        /* \"#utility.yul\":21060:21063   */\n      dup3\n        /* \"#utility.yul\":21056:21068   */\n      add\n        /* \"#utility.yul\":21049:21068   */\n      swap1\n      pop\n        /* \"#utility.yul\":20709:21074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21080:21499   */\n    tag_113:\n        /* \"#utility.yul\":21246:21250   */\n      0x00\n        /* \"#utility.yul\":21284:21286   */\n      0x20\n        /* \"#utility.yul\":21273:21282   */\n      dup3\n        /* \"#utility.yul\":21269:21287   */\n      add\n        /* \"#utility.yul\":21261:21287   */\n      swap1\n      pop\n        /* \"#utility.yul\":21333:21342   */\n      dup2\n        /* \"#utility.yul\":21327:21331   */\n      dup2\n        /* \"#utility.yul\":21323:21343   */\n      sub\n        /* \"#utility.yul\":21319:21320   */\n      0x00\n        /* \"#utility.yul\":21308:21317   */\n      dup4\n        /* \"#utility.yul\":21304:21321   */\n      add\n        /* \"#utility.yul\":21297:21344   */\n      mstore\n        /* \"#utility.yul\":21361:21492   */\n      tag_379\n        /* \"#utility.yul\":21487:21491   */\n      dup2\n        /* \"#utility.yul\":21361:21492   */\n      tag_166\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":21353:21492   */\n      swap1\n      pop\n        /* \"#utility.yul\":21080:21499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073c86616149b6354661db4527e871da906ce63962163ae0faedc3b24044e1bd864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_INonfungiblePositionManager_$1270_fromMemory": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INonfungiblePositionManager_$1270_fromMemory": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_INonfungiblePositionManager_$1270": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_INonfungiblePositionManager_$1270": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1553:34",
										"nodeType": "YulBlock",
										"src": "0:1553:34",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:34",
													"nodeType": "YulBlock",
													"src": "47:35:34",
													"statements": [
														{
															"nativeSrc": "57:19:34",
															"nodeType": "YulAssignment",
															"src": "57:19:34",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:34",
																		"nodeType": "YulLiteral",
																		"src": "73:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:34"
																},
																"nativeSrc": "67:9:34",
																"nodeType": "YulFunctionCall",
																"src": "67:9:34"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:34"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:34",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:34",
														"nodeType": "YulTypedName",
														"src": "40:6:34",
														"type": ""
													}
												],
												"src": "7:75:34"
											},
											{
												"body": {
													"nativeSrc": "177:28:34",
													"nodeType": "YulBlock",
													"src": "177:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:34",
																		"nodeType": "YulLiteral",
																		"src": "194:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:34",
																		"nodeType": "YulLiteral",
																		"src": "197:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:34"
																},
																"nativeSrc": "187:12:34",
																"nodeType": "YulFunctionCall",
																"src": "187:12:34"
															},
															"nativeSrc": "187:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:34"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:34"
											},
											{
												"body": {
													"nativeSrc": "300:28:34",
													"nodeType": "YulBlock",
													"src": "300:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:34",
																		"nodeType": "YulLiteral",
																		"src": "317:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:34",
																		"nodeType": "YulLiteral",
																		"src": "320:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:34"
																},
																"nativeSrc": "310:12:34",
																"nodeType": "YulFunctionCall",
																"src": "310:12:34"
															},
															"nativeSrc": "310:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:34"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:34"
											},
											{
												"body": {
													"nativeSrc": "379:81:34",
													"nodeType": "YulBlock",
													"src": "379:81:34",
													"statements": [
														{
															"nativeSrc": "389:65:34",
															"nodeType": "YulAssignment",
															"src": "389:65:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:34",
																		"nodeType": "YulLiteral",
																		"src": "411:42:34",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:34"
																},
																"nativeSrc": "400:54:34",
																"nodeType": "YulFunctionCall",
																"src": "400:54:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:34",
														"nodeType": "YulTypedName",
														"src": "361:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:34",
														"nodeType": "YulTypedName",
														"src": "371:7:34",
														"type": ""
													}
												],
												"src": "334:126:34"
											},
											{
												"body": {
													"nativeSrc": "511:51:34",
													"nodeType": "YulBlock",
													"src": "511:51:34",
													"statements": [
														{
															"nativeSrc": "521:35:34",
															"nodeType": "YulAssignment",
															"src": "521:35:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:34"
																},
																"nativeSrc": "532:24:34",
																"nodeType": "YulFunctionCall",
																"src": "532:24:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:34",
														"nodeType": "YulTypedName",
														"src": "493:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:34",
														"nodeType": "YulTypedName",
														"src": "503:7:34",
														"type": ""
													}
												],
												"src": "466:96:34"
											},
											{
												"body": {
													"nativeSrc": "649:51:34",
													"nodeType": "YulBlock",
													"src": "649:51:34",
													"statements": [
														{
															"nativeSrc": "659:35:34",
															"nodeType": "YulAssignment",
															"src": "659:35:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "688:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "688:5:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "670:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "670:17:34"
																},
																"nativeSrc": "670:24:34",
																"nodeType": "YulFunctionCall",
																"src": "670:24:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "659:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "659:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_INonfungiblePositionManager_$1270",
												"nativeSrc": "568:132:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "631:5:34",
														"nodeType": "YulTypedName",
														"src": "631:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "641:7:34",
														"nodeType": "YulTypedName",
														"src": "641:7:34",
														"type": ""
													}
												],
												"src": "568:132:34"
											},
											{
												"body": {
													"nativeSrc": "785:115:34",
													"nodeType": "YulBlock",
													"src": "785:115:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:34",
																"nodeType": "YulBlock",
																"src": "878:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:34",
																					"nodeType": "YulLiteral",
																					"src": "887:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:34",
																					"nodeType": "YulLiteral",
																					"src": "890:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:34"
																			},
																			"nativeSrc": "880:12:34",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:34"
																		},
																		"nativeSrc": "880:12:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "808:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "808:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "869:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "869:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_INonfungiblePositionManager_$1270",
																					"nativeSrc": "815:53:34",
																					"nodeType": "YulIdentifier",
																					"src": "815:53:34"
																				},
																				"nativeSrc": "815:60:34",
																				"nodeType": "YulFunctionCall",
																				"src": "815:60:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "805:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "805:2:34"
																		},
																		"nativeSrc": "805:71:34",
																		"nodeType": "YulFunctionCall",
																		"src": "805:71:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "798:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:34"
																},
																"nativeSrc": "798:79:34",
																"nodeType": "YulFunctionCall",
																"src": "798:79:34"
															},
															"nativeSrc": "795:99:34",
															"nodeType": "YulIf",
															"src": "795:99:34"
														}
													]
												},
												"name": "validator_revert_t_contract$_INonfungiblePositionManager_$1270",
												"nativeSrc": "706:194:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "778:5:34",
														"nodeType": "YulTypedName",
														"src": "778:5:34",
														"type": ""
													}
												],
												"src": "706:194:34"
											},
											{
												"body": {
													"nativeSrc": "1005:116:34",
													"nodeType": "YulBlock",
													"src": "1005:116:34",
													"statements": [
														{
															"nativeSrc": "1015:22:34",
															"nodeType": "YulAssignment",
															"src": "1015:22:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1030:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "1030:6:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1024:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "1024:5:34"
																},
																"nativeSrc": "1024:13:34",
																"nodeType": "YulFunctionCall",
																"src": "1024:13:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1015:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "1015:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1109:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "1109:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_INonfungiblePositionManager_$1270",
																	"nativeSrc": "1046:62:34",
																	"nodeType": "YulIdentifier",
																	"src": "1046:62:34"
																},
																"nativeSrc": "1046:69:34",
																"nodeType": "YulFunctionCall",
																"src": "1046:69:34"
															},
															"nativeSrc": "1046:69:34",
															"nodeType": "YulExpressionStatement",
															"src": "1046:69:34"
														}
													]
												},
												"name": "abi_decode_t_contract$_INonfungiblePositionManager_$1270_fromMemory",
												"nativeSrc": "906:215:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "983:6:34",
														"nodeType": "YulTypedName",
														"src": "983:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "991:3:34",
														"nodeType": "YulTypedName",
														"src": "991:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "999:5:34",
														"nodeType": "YulTypedName",
														"src": "999:5:34",
														"type": ""
													}
												],
												"src": "906:215:34"
											},
											{
												"body": {
													"nativeSrc": "1240:310:34",
													"nodeType": "YulBlock",
													"src": "1240:310:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "1286:83:34",
																"nodeType": "YulBlock",
																"src": "1286:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1288:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "1288:77:34"
																			},
																			"nativeSrc": "1288:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "1288:79:34"
																		},
																		"nativeSrc": "1288:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "1288:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1261:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "1261:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1270:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "1270:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1257:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:34"
																		},
																		"nativeSrc": "1257:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1282:2:34",
																		"nodeType": "YulLiteral",
																		"src": "1282:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1253:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "1253:3:34"
																},
																"nativeSrc": "1253:32:34",
																"nodeType": "YulFunctionCall",
																"src": "1253:32:34"
															},
															"nativeSrc": "1250:119:34",
															"nodeType": "YulIf",
															"src": "1250:119:34"
														},
														{
															"nativeSrc": "1379:164:34",
															"nodeType": "YulBlock",
															"src": "1379:164:34",
															"statements": [
																{
																	"nativeSrc": "1394:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1394:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1408:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1408:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1398:6:34",
																			"nodeType": "YulTypedName",
																			"src": "1398:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1423:110:34",
																	"nodeType": "YulAssignment",
																	"src": "1423:110:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1505:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "1505:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1516:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "1516:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1501:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "1501:3:34"
																				},
																				"nativeSrc": "1501:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "1501:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1525:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "1525:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_INonfungiblePositionManager_$1270_fromMemory",
																			"nativeSrc": "1433:67:34",
																			"nodeType": "YulIdentifier",
																			"src": "1433:67:34"
																		},
																		"nativeSrc": "1433:100:34",
																		"nodeType": "YulFunctionCall",
																		"src": "1433:100:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1423:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "1423:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INonfungiblePositionManager_$1270_fromMemory",
												"nativeSrc": "1127:423:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1210:9:34",
														"nodeType": "YulTypedName",
														"src": "1210:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1221:7:34",
														"nodeType": "YulTypedName",
														"src": "1221:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1233:6:34",
														"nodeType": "YulTypedName",
														"src": "1233:6:34",
														"type": ""
													}
												],
												"src": "1127:423:34"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_INonfungiblePositionManager_$1270(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_INonfungiblePositionManager_$1270(value) {\n        if iszero(eq(value, cleanup_t_contract$_INonfungiblePositionManager_$1270(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_INonfungiblePositionManager_$1270_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_INonfungiblePositionManager_$1270(value)\n    }\n\n    function abi_decode_tuple_t_contract$_INonfungiblePositionManager_$1270_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_INonfungiblePositionManager_$1270_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 34,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b506040516200153c3803806200153c8339818101604052810190620000369190620000e9565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000119565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000a08262000075565b9050919050565b5f620000b38262000094565b9050919050565b620000c581620000a7565b8114620000d0575f80fd5b50565b5f81519050620000e381620000ba565b92915050565b5f6020828403121562000101576200010062000071565b5b5f6200011084828501620000d3565b91505092915050565b6080516113e06200015c5f395f8181610291015281816102d20152818161042b015281816104e701528181610540015281816105cb01526106cc01526113e05ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063150b7a0214610059578063591c719114610089578063617d6d6e146100bc578063b02c43d0146100ec578063b44a27221461011d575b5f80fd5b610073600480360381019061006e9190610a82565b61013b565b6040516100809190610b40565b60405180910390f35b6100a3600480360381019061009e9190610b7b565b61014f565b6040516100b39493929190610bdf565b60405180910390f35b6100d660048036038101906100d19190610c22565b61058c565b6040516100e39190610c72565b60405180910390f35b61010660048036038101906101019190610c8b565b610671565b604051610114929190610cc5565b60405180910390f35b6101256106ca565b6040516101329190610d47565b60405180910390f35b5f63150b7a0260e01b905095945050505050565b5f805f80845f0160208101906101659190610d60565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd333088606001356040518463ffffffff1660e01b81526004016101a593929190610d8b565b6020604051808303815f875af11580156101c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e59190610df5565b508460200160208101906101f99190610d60565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd333088606001356040518463ffffffff1660e01b815260040161023993929190610d8b565b6020604051808303815f875af1158015610255573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102799190610df5565b506102ba855f01602081019061028f9190610d60565b7f000000000000000000000000000000000000000000000000000000000000000087606001356106ee565b6102fb8560200160208101906102d09190610d60565b7f000000000000000000000000000000000000000000000000000000000000000087608001356106ee565b5f604051806101600160405280875f01602081019061031a9190610d60565b73ffffffffffffffffffffffffffffffffffffffff1681526020018760200160208101906103489190610d60565b73ffffffffffffffffffffffffffffffffffffffff1681526020018760400160208101906103769190610e58565b62ffffff1681526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186103d390610ebc565b60020b815260200187606001358152602001876080013581526020015f81526020015f81526020013373ffffffffffffffffffffffffffffffffffffffff168152602001601e426104249190610f02565b81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b81526004016104829190611050565b6080604051808303815f875af115801561049e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c291906110a8565b80955081965082975083985050505050856060013583101561052a5761050c815f01517f00000000000000000000000000000000000000000000000000000000000000005f6106ee565b610529815f015133858960600135610524919061110c565b61083d565b5b85608001358210156105845761056581602001517f00000000000000000000000000000000000000000000000000000000000000005f6106ee565b61058381602001513384896080013561057e919061110c565b61083d565b5b509193509193565b5f806040518060c001604052808681526020018581526020018481526020015f81526020015f8152602001601e426105c49190610f02565b81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663219f5d17826040518263ffffffff1660e01b815260040161062291906111b8565b6060604051808303815f875af115801561063e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061066291906111d1565b90505080925050509392505050565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a90046fffffffffffffffffffffffffffffffff16905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610722929190611221565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161078c91906112b4565b5f604051808303815f865af19150503d805f81146107c5576040519150601f19603f3d011682016040523d82523d5f602084013e6107ca565b606091505b50915091508180156107f757505f815114806107f65750808060200190518101906107f59190610df5565b5b5b610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90611324565b60405180910390fd5b5050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610871929190611221565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108db91906112b4565b5f604051808303815f865af19150503d805f8114610914576040519150601f19603f3d011682016040523d82523d5f602084013e610919565b606091505b509150915081801561094657505f815114806109455750808060200190518101906109449190610df5565b5b5b610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c9061138c565b60405180910390fd5b5050505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109bd82610994565b9050919050565b6109cd816109b3565b81146109d7575f80fd5b50565b5f813590506109e8816109c4565b92915050565b5f819050919050565b610a00816109ee565b8114610a0a575f80fd5b50565b5f81359050610a1b816109f7565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610a4257610a41610a21565b5b8235905067ffffffffffffffff811115610a5f57610a5e610a25565b5b602083019150836001820283011115610a7b57610a7a610a29565b5b9250929050565b5f805f805f60808688031215610a9b57610a9a61098c565b5b5f610aa8888289016109da565b9550506020610ab9888289016109da565b9450506040610aca88828901610a0d565b935050606086013567ffffffffffffffff811115610aeb57610aea610990565b5b610af788828901610a2d565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b3a81610b06565b82525050565b5f602082019050610b535f830184610b31565b92915050565b5f80fd5b5f60a08284031215610b7257610b71610b59565b5b81905092915050565b5f60a08284031215610b9057610b8f61098c565b5b5f610b9d84828501610b5d565b91505092915050565b610baf816109ee565b82525050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b610bd981610bb5565b82525050565b5f608082019050610bf25f830187610ba6565b610bff6020830186610bd0565b610c0c6040830185610ba6565b610c196060830184610ba6565b95945050505050565b5f805f60608486031215610c3957610c3861098c565b5b5f610c4686828701610a0d565b9350506020610c5786828701610a0d565b9250506040610c6886828701610a0d565b9150509250925092565b5f602082019050610c855f830184610bd0565b92915050565b5f60208284031215610ca057610c9f61098c565b5b5f610cad84828501610a0d565b91505092915050565b610cbf816109b3565b82525050565b5f604082019050610cd85f830185610cb6565b610ce56020830184610bd0565b9392505050565b5f819050919050565b5f610d0f610d0a610d0584610994565b610cec565b610994565b9050919050565b5f610d2082610cf5565b9050919050565b5f610d3182610d16565b9050919050565b610d4181610d27565b82525050565b5f602082019050610d5a5f830184610d38565b92915050565b5f60208284031215610d7557610d7461098c565b5b5f610d82848285016109da565b91505092915050565b5f606082019050610d9e5f830186610cb6565b610dab6020830185610cb6565b610db86040830184610ba6565b949350505050565b5f8115159050919050565b610dd481610dc0565b8114610dde575f80fd5b50565b5f81519050610def81610dcb565b92915050565b5f60208284031215610e0a57610e0961098c565b5b5f610e1784828501610de1565b91505092915050565b5f62ffffff82169050919050565b610e3781610e20565b8114610e41575f80fd5b50565b5f81359050610e5281610e2e565b92915050565b5f60208284031215610e6d57610e6c61098c565b5b5f610e7a84828501610e44565b91505092915050565b5f8160020b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ec682610e83565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008203610ef857610ef7610e8f565b5b815f039050919050565b5f610f0c826109ee565b9150610f17836109ee565b9250828201905080821115610f2f57610f2e610e8f565b5b92915050565b610f3e816109b3565b82525050565b610f4d81610e20565b82525050565b610f5c81610e83565b82525050565b610f6b816109ee565b82525050565b61016082015f820151610f865f850182610f35565b506020820151610f996020850182610f35565b506040820151610fac6040850182610f44565b506060820151610fbf6060850182610f53565b506080820151610fd26080850182610f53565b5060a0820151610fe560a0850182610f62565b5060c0820151610ff860c0850182610f62565b5060e082015161100b60e0850182610f62565b50610100820151611020610100850182610f62565b50610120820151611035610120850182610f35565b5061014082015161104a610140850182610f62565b50505050565b5f610160820190506110645f830184610f71565b92915050565b5f81519050611078816109f7565b92915050565b61108781610bb5565b8114611091575f80fd5b50565b5f815190506110a28161107e565b92915050565b5f805f80608085870312156110c0576110bf61098c565b5b5f6110cd8782880161106a565b94505060206110de87828801611094565b93505060406110ef8782880161106a565b92505060606111008782880161106a565b91505092959194509250565b5f611116826109ee565b9150611121836109ee565b925082820390508181111561113957611138610e8f565b5b92915050565b60c082015f8201516111535f850182610f62565b5060208201516111666020850182610f62565b5060408201516111796040850182610f62565b50606082015161118c6060850182610f62565b50608082015161119f6080850182610f62565b5060a08201516111b260a0850182610f62565b50505050565b5f60c0820190506111cb5f83018461113f565b92915050565b5f805f606084860312156111e8576111e761098c565b5b5f6111f586828701611094565b93505060206112068682870161106a565b92505060406112178682870161106a565b9150509250925092565b5f6040820190506112345f830185610cb6565b6112416020830184610ba6565b9392505050565b5f81519050919050565b5f81905092915050565b5f5b8381101561127957808201518184015260208101905061125e565b5f8484015250505050565b5f61128e82611248565b6112988185611252565b93506112a881856020860161125c565b80840191505092915050565b5f6112bf8284611284565b915081905092915050565b5f82825260208201905092915050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f61130e6002836112ca565b9150611319826112da565b602082019050919050565b5f6020820190508181035f83015261133b81611302565b9050919050565b7f53540000000000000000000000000000000000000000000000000000000000005f82015250565b5f6113766002836112ca565b915061138182611342565b602082019050919050565b5f6020820190508181035f8301526113a38161136a565b905091905056fea264697066735822122073c86616149b6354661db4527e871da906ce63962163ae0faedc3b24044e1bd864736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x153C CODESIZE SUB DUP1 PUSH3 0x153C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0xE9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x119 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA0 DUP3 PUSH3 0x75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB3 DUP3 PUSH3 0x94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC5 DUP2 PUSH3 0xA7 JUMP JUMPDEST DUP2 EQ PUSH3 0xD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xE3 DUP2 PUSH3 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x110 DUP5 DUP3 DUP6 ADD PUSH3 0xD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x13E0 PUSH3 0x15C PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x291 ADD MSTORE DUP2 DUP2 PUSH2 0x2D2 ADD MSTORE DUP2 DUP2 PUSH2 0x42B ADD MSTORE DUP2 DUP2 PUSH2 0x4E7 ADD MSTORE DUP2 DUP2 PUSH2 0x540 ADD MSTORE DUP2 DUP2 PUSH2 0x5CB ADD MSTORE PUSH2 0x6CC ADD MSTORE PUSH2 0x13E0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x591C7191 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x617D6D6E EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST POP DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x239 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST POP PUSH2 0x2BA DUP6 PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH32 0x0 DUP8 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x2FB DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH32 0x0 DUP8 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x3D3 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E TIMESTAMP PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP DUP4 SWAP9 POP POP POP POP POP DUP6 PUSH1 0x60 ADD CALLDATALOAD DUP4 LT ISZERO PUSH2 0x52A JUMPI PUSH2 0x50C DUP2 PUSH0 ADD MLOAD PUSH32 0x0 PUSH0 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x529 DUP2 PUSH0 ADD MLOAD CALLER DUP6 DUP10 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x80 ADD CALLDATALOAD DUP3 LT ISZERO PUSH2 0x584 JUMPI PUSH2 0x565 DUP2 PUSH1 0x20 ADD MLOAD PUSH32 0x0 PUSH0 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x583 DUP2 PUSH1 0x20 ADD MLOAD CALLER DUP5 DUP10 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E TIMESTAMP PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x219F5D17 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x722 SWAP3 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7F7 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x7F6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x871 SWAP3 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x919 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x946 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x945 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97C SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x9D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E8 DUP2 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 DUP2 PUSH2 0x9EE JUMP JUMPDEST DUP2 EQ PUSH2 0xA0A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1B DUP2 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0xA21 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5E PUSH2 0xA25 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7A PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAA8 DUP9 DUP3 DUP10 ADD PUSH2 0x9DA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xAB9 DUP9 DUP3 DUP10 ADD PUSH2 0x9DA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xACA DUP9 DUP3 DUP10 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAEB JUMPI PUSH2 0xAEA PUSH2 0x990 JUMP JUMPDEST JUMPDEST PUSH2 0xAF7 DUP9 DUP3 DUP10 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xB06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB53 PUSH0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB71 PUSH2 0xB59 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB90 JUMPI PUSH2 0xB8F PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB9D DUP5 DUP3 DUP6 ADD PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0x9EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD9 DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xBF2 PUSH0 DUP4 ADD DUP8 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xC0C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xC19 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH2 0xC38 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC46 DUP7 DUP3 DUP8 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC57 DUP7 DUP3 DUP8 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC68 DUP7 DUP3 DUP8 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC9F PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCAD DUP5 DUP3 DUP6 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBF DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xCE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD0F PUSH2 0xD0A PUSH2 0xD05 DUP5 PUSH2 0x994 JUMP JUMPDEST PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD20 DUP3 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD31 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5A PUSH0 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0x9DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD9E PUSH0 DUP4 ADD DUP7 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xDAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xDB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD4 DUP2 PUSH2 0xDC0 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDEF DUP2 PUSH2 0xDCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE17 DUP5 DUP3 DUP6 ADD PUSH2 0xDE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP2 EQ PUSH2 0xE41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE52 DUP2 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH2 0xE6C PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE7A DUP5 DUP3 DUP6 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEC6 DUP3 PUSH2 0xE83 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0xE8F JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF0C DUP3 PUSH2 0x9EE JUMP JUMPDEST SWAP2 POP PUSH2 0xF17 DUP4 PUSH2 0x9EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF2F JUMPI PUSH2 0xF2E PUSH2 0xE8F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3E DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF4D DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF5C DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0x9EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xF86 PUSH0 DUP6 ADD DUP3 PUSH2 0xF35 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF99 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF35 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFAC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF44 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFBF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF53 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xFD2 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF53 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xFE5 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xFF8 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x100B PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x1020 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x1035 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0xF35 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x104A PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x1064 PUSH0 DUP4 ADD DUP5 PUSH2 0xF71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1078 DUP2 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1091 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A2 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10CD DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x10DE DUP8 DUP3 DUP9 ADD PUSH2 0x1094 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x10EF DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1100 DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH2 0x1116 DUP3 PUSH2 0x9EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1121 DUP4 PUSH2 0x9EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0xE8F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1153 PUSH0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1166 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1179 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x118C PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x119F PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x11B2 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11CB PUSH0 DUP4 ADD DUP5 PUSH2 0x113F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E7 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F5 DUP7 DUP3 DUP8 ADD PUSH2 0x1094 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1206 DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1217 DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1234 PUSH0 DUP4 ADD DUP6 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x1241 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1279 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x125E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x128E DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x1298 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12A8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12BF DUP3 DUP5 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x130E PUSH1 0x2 DUP4 PUSH2 0x12CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1319 DUP3 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x133B DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1376 PUSH1 0x2 DUP4 PUSH2 0x12CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 DUP3 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A3 DUP2 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xC86616149B6354661DB4527E871DA906CE639621 PUSH4 0xAE0FAEDC EXTCODESIZE 0x24 DIV 0x4E SHL 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "422:5332:1:-:0;;;777:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;886:27;857:56;;;;;;;;;;777:144;422:5332;;88:117:34;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:132::-;641:7;670:24;688:5;670:24;:::i;:::-;659:35;;568:132;;;:::o;706:194::-;815:60;869:5;815:60;:::i;:::-;808:5;805:71;795:99;;890:1;887;880:12;795:99;706:194;:::o;906:215::-;999:5;1030:6;1024:13;1015:22;;1046:69;1109:5;1046:69;:::i;:::-;906:215;;;;:::o;1127:423::-;1233:6;1282:2;1270:9;1261:7;1257:23;1253:32;1250:119;;;1288:79;;:::i;:::-;1250:119;1408:1;1433:100;1525:7;1516:6;1505:9;1501:22;1433:100;:::i;:::-;1423:110;;1379:164;1127:423;;;;:::o;422:5332:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposits_39": {
									"entryPoint": 1649,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseLiquidityCurrentRange_275": {
									"entryPoint": 1420,
									"id": 275,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mintNewPosition_237": {
									"entryPoint": 335,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@nonfungiblePositionManager_27": {
									"entryPoint": 1738,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_294": {
									"entryPoint": 315,
									"id": 294,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@safeApprove_3358": {
									"entryPoint": 1774,
									"id": 3358,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransfer_3312": {
									"entryPoint": 2109,
									"id": 3312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_struct$_MintNewPositionParams_$61_calldata_ptr": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_MintNewPositionParams_$61_calldata_ptr": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint24": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_INonfungiblePositionManager_$1270_to_t_address_fromStack": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int24_to_t_int24": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_fromStack": {
									"entryPoint": 4415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_MintParams_$1180_memory_ptr_to_t_struct$_MintParams_$1180_memory_ptr_fromStack": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint128__fromStack_reversed": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1270__to_t_address__fromStack_reversed": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr__fromStack_reversed": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MintParams_$1180_memory_ptr__to_t_struct$_MintParams_$1180_memory_ptr__fromStack_reversed": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INonfungiblePositionManager_$1270_to_t_address": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int24": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21502:34",
										"nodeType": "YulBlock",
										"src": "0:21502:34",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:34",
													"nodeType": "YulBlock",
													"src": "47:35:34",
													"statements": [
														{
															"nativeSrc": "57:19:34",
															"nodeType": "YulAssignment",
															"src": "57:19:34",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:34",
																		"nodeType": "YulLiteral",
																		"src": "73:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:34"
																},
																"nativeSrc": "67:9:34",
																"nodeType": "YulFunctionCall",
																"src": "67:9:34"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:34"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:34",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:34",
														"nodeType": "YulTypedName",
														"src": "40:6:34",
														"type": ""
													}
												],
												"src": "7:75:34"
											},
											{
												"body": {
													"nativeSrc": "177:28:34",
													"nodeType": "YulBlock",
													"src": "177:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:34",
																		"nodeType": "YulLiteral",
																		"src": "194:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:34",
																		"nodeType": "YulLiteral",
																		"src": "197:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:34"
																},
																"nativeSrc": "187:12:34",
																"nodeType": "YulFunctionCall",
																"src": "187:12:34"
															},
															"nativeSrc": "187:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:34"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:34"
											},
											{
												"body": {
													"nativeSrc": "300:28:34",
													"nodeType": "YulBlock",
													"src": "300:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:34",
																		"nodeType": "YulLiteral",
																		"src": "317:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:34",
																		"nodeType": "YulLiteral",
																		"src": "320:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:34"
																},
																"nativeSrc": "310:12:34",
																"nodeType": "YulFunctionCall",
																"src": "310:12:34"
															},
															"nativeSrc": "310:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:34"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:34"
											},
											{
												"body": {
													"nativeSrc": "379:81:34",
													"nodeType": "YulBlock",
													"src": "379:81:34",
													"statements": [
														{
															"nativeSrc": "389:65:34",
															"nodeType": "YulAssignment",
															"src": "389:65:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:34",
																		"nodeType": "YulLiteral",
																		"src": "411:42:34",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:34"
																},
																"nativeSrc": "400:54:34",
																"nodeType": "YulFunctionCall",
																"src": "400:54:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:34",
														"nodeType": "YulTypedName",
														"src": "361:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:34",
														"nodeType": "YulTypedName",
														"src": "371:7:34",
														"type": ""
													}
												],
												"src": "334:126:34"
											},
											{
												"body": {
													"nativeSrc": "511:51:34",
													"nodeType": "YulBlock",
													"src": "511:51:34",
													"statements": [
														{
															"nativeSrc": "521:35:34",
															"nodeType": "YulAssignment",
															"src": "521:35:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:34"
																},
																"nativeSrc": "532:24:34",
																"nodeType": "YulFunctionCall",
																"src": "532:24:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:34",
														"nodeType": "YulTypedName",
														"src": "493:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:34",
														"nodeType": "YulTypedName",
														"src": "503:7:34",
														"type": ""
													}
												],
												"src": "466:96:34"
											},
											{
												"body": {
													"nativeSrc": "611:79:34",
													"nodeType": "YulBlock",
													"src": "611:79:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:34",
																"nodeType": "YulBlock",
																"src": "668:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:34",
																					"nodeType": "YulLiteral",
																					"src": "677:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:34",
																					"nodeType": "YulLiteral",
																					"src": "680:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:34"
																			},
																			"nativeSrc": "670:12:34",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:34"
																		},
																		"nativeSrc": "670:12:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:34",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:34"
																				},
																				"nativeSrc": "641:24:34",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:34"
																		},
																		"nativeSrc": "631:35:34",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:34"
																},
																"nativeSrc": "624:43:34",
																"nodeType": "YulFunctionCall",
																"src": "624:43:34"
															},
															"nativeSrc": "621:63:34",
															"nodeType": "YulIf",
															"src": "621:63:34"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:34",
														"nodeType": "YulTypedName",
														"src": "604:5:34",
														"type": ""
													}
												],
												"src": "568:122:34"
											},
											{
												"body": {
													"nativeSrc": "748:87:34",
													"nodeType": "YulBlock",
													"src": "748:87:34",
													"statements": [
														{
															"nativeSrc": "758:29:34",
															"nodeType": "YulAssignment",
															"src": "758:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:34",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:34"
																},
																"nativeSrc": "767:20:34",
																"nodeType": "YulFunctionCall",
																"src": "767:20:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:34",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:34"
																},
																"nativeSrc": "796:33:34",
																"nodeType": "YulFunctionCall",
																"src": "796:33:34"
															},
															"nativeSrc": "796:33:34",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:34"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:34",
														"nodeType": "YulTypedName",
														"src": "726:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:34",
														"nodeType": "YulTypedName",
														"src": "734:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:34",
														"nodeType": "YulTypedName",
														"src": "742:5:34",
														"type": ""
													}
												],
												"src": "696:139:34"
											},
											{
												"body": {
													"nativeSrc": "886:32:34",
													"nodeType": "YulBlock",
													"src": "886:32:34",
													"statements": [
														{
															"nativeSrc": "896:16:34",
															"nodeType": "YulAssignment",
															"src": "896:16:34",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:34",
																"nodeType": "YulIdentifier",
																"src": "907:5:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:34",
														"nodeType": "YulTypedName",
														"src": "868:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:34",
														"nodeType": "YulTypedName",
														"src": "878:7:34",
														"type": ""
													}
												],
												"src": "841:77:34"
											},
											{
												"body": {
													"nativeSrc": "967:79:34",
													"nodeType": "YulBlock",
													"src": "967:79:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:34",
																"nodeType": "YulBlock",
																"src": "1024:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:34",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:34",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:34"
																			},
																			"nativeSrc": "1026:12:34",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:34"
																		},
																		"nativeSrc": "1026:12:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:34",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:34"
																				},
																				"nativeSrc": "997:24:34",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:34"
																		},
																		"nativeSrc": "987:35:34",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:34"
																},
																"nativeSrc": "980:43:34",
																"nodeType": "YulFunctionCall",
																"src": "980:43:34"
															},
															"nativeSrc": "977:63:34",
															"nodeType": "YulIf",
															"src": "977:63:34"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:34",
														"nodeType": "YulTypedName",
														"src": "960:5:34",
														"type": ""
													}
												],
												"src": "924:122:34"
											},
											{
												"body": {
													"nativeSrc": "1104:87:34",
													"nodeType": "YulBlock",
													"src": "1104:87:34",
													"statements": [
														{
															"nativeSrc": "1114:29:34",
															"nodeType": "YulAssignment",
															"src": "1114:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:34",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:34"
																},
																"nativeSrc": "1123:20:34",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:34",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:34"
																},
																"nativeSrc": "1152:33:34",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:34"
															},
															"nativeSrc": "1152:33:34",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:34"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:34",
														"nodeType": "YulTypedName",
														"src": "1082:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:34",
														"nodeType": "YulTypedName",
														"src": "1090:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:34",
														"nodeType": "YulTypedName",
														"src": "1098:5:34",
														"type": ""
													}
												],
												"src": "1052:139:34"
											},
											{
												"body": {
													"nativeSrc": "1286:28:34",
													"nodeType": "YulBlock",
													"src": "1286:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1303:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1296:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:34"
																},
																"nativeSrc": "1296:12:34",
																"nodeType": "YulFunctionCall",
																"src": "1296:12:34"
															},
															"nativeSrc": "1296:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:34"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1197:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:34"
											},
											{
												"body": {
													"nativeSrc": "1409:28:34",
													"nodeType": "YulBlock",
													"src": "1409:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1426:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1419:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:34"
																},
																"nativeSrc": "1419:12:34",
																"nodeType": "YulFunctionCall",
																"src": "1419:12:34"
															},
															"nativeSrc": "1419:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:34"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1320:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:34"
											},
											{
												"body": {
													"nativeSrc": "1532:28:34",
													"nodeType": "YulBlock",
													"src": "1532:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1549:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:34",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1542:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:34"
																},
																"nativeSrc": "1542:12:34",
																"nodeType": "YulFunctionCall",
																"src": "1542:12:34"
															},
															"nativeSrc": "1542:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:34"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1443:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:34"
											},
											{
												"body": {
													"nativeSrc": "1653:478:34",
													"nodeType": "YulBlock",
													"src": "1653:478:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "1702:83:34",
																"nodeType": "YulBlock",
																"src": "1702:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1704:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:34"
																			},
																			"nativeSrc": "1704:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:34"
																		},
																		"nativeSrc": "1704:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1681:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1689:4:34",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:34",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1677:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:34"
																				},
																				"nativeSrc": "1677:17:34",
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:34"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1696:3:34",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:34"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1673:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:34"
																		},
																		"nativeSrc": "1673:27:34",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1666:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:34"
																},
																"nativeSrc": "1666:35:34",
																"nodeType": "YulFunctionCall",
																"src": "1666:35:34"
															},
															"nativeSrc": "1663:122:34",
															"nodeType": "YulIf",
															"src": "1663:122:34"
														},
														{
															"nativeSrc": "1794:30:34",
															"nodeType": "YulAssignment",
															"src": "1794:30:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1817:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1804:12:34",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:34"
																},
																"nativeSrc": "1804:20:34",
																"nodeType": "YulFunctionCall",
																"src": "1804:20:34"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1794:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:34"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1867:83:34",
																"nodeType": "YulBlock",
																"src": "1867:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1869:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:34"
																			},
																			"nativeSrc": "1869:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:34"
																		},
																		"nativeSrc": "1869:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1839:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1847:18:34",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:34",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1836:2:34",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:34"
																},
																"nativeSrc": "1836:30:34",
																"nodeType": "YulFunctionCall",
																"src": "1836:30:34"
															},
															"nativeSrc": "1833:117:34",
															"nodeType": "YulIf",
															"src": "1833:117:34"
														},
														{
															"nativeSrc": "1959:29:34",
															"nodeType": "YulAssignment",
															"src": "1959:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1975:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:34",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:34",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1971:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:34"
																},
																"nativeSrc": "1971:17:34",
																"nodeType": "YulFunctionCall",
																"src": "1971:17:34"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1959:8:34",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:34"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2042:83:34",
																"nodeType": "YulBlock",
																"src": "2042:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2044:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:34"
																			},
																			"nativeSrc": "2044:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:34"
																		},
																		"nativeSrc": "2044:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2007:8:34",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2021:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2029:4:34",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:34",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2017:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:34"
																				},
																				"nativeSrc": "2017:17:34",
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2003:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:34"
																		},
																		"nativeSrc": "2003:32:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:34"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2037:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:34"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2000:2:34",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:34"
																},
																"nativeSrc": "2000:41:34",
																"nodeType": "YulFunctionCall",
																"src": "2000:41:34"
															},
															"nativeSrc": "1997:128:34",
															"nodeType": "YulIf",
															"src": "1997:128:34"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "1579:552:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:34",
														"nodeType": "YulTypedName",
														"src": "1620:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:34",
														"nodeType": "YulTypedName",
														"src": "1628:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1636:8:34",
														"nodeType": "YulTypedName",
														"src": "1636:8:34",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1646:6:34",
														"nodeType": "YulTypedName",
														"src": "1646:6:34",
														"type": ""
													}
												],
												"src": "1579:552:34"
											},
											{
												"body": {
													"nativeSrc": "2273:827:34",
													"nodeType": "YulBlock",
													"src": "2273:827:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:34",
																"nodeType": "YulBlock",
																"src": "2320:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2322:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:34"
																			},
																			"nativeSrc": "2322:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:34"
																		},
																		"nativeSrc": "2322:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2294:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "2294:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2303:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2290:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:34"
																		},
																		"nativeSrc": "2290:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2290:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2315:3:34",
																		"nodeType": "YulLiteral",
																		"src": "2315:3:34",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2286:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:34"
																},
																"nativeSrc": "2286:33:34",
																"nodeType": "YulFunctionCall",
																"src": "2286:33:34"
															},
															"nativeSrc": "2283:120:34",
															"nodeType": "YulIf",
															"src": "2283:120:34"
														},
														{
															"nativeSrc": "2413:117:34",
															"nodeType": "YulBlock",
															"src": "2413:117:34",
															"statements": [
																{
																	"nativeSrc": "2428:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2428:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2442:1:34",
																		"nodeType": "YulLiteral",
																		"src": "2442:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2432:6:34",
																			"nodeType": "YulTypedName",
																			"src": "2432:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2457:63:34",
																	"nodeType": "YulAssignment",
																	"src": "2457:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2492:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2503:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "2503:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2488:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "2488:3:34"
																				},
																				"nativeSrc": "2488:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "2488:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2512:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "2512:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2467:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "2467:20:34"
																		},
																		"nativeSrc": "2467:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2467:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2457:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "2457:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2540:118:34",
															"nodeType": "YulBlock",
															"src": "2540:118:34",
															"statements": [
																{
																	"nativeSrc": "2555:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2555:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2569:2:34",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:34",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2559:6:34",
																			"nodeType": "YulTypedName",
																			"src": "2559:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2585:63:34",
																	"nodeType": "YulAssignment",
																	"src": "2585:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2620:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "2620:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2631:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "2631:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2616:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:34"
																				},
																				"nativeSrc": "2616:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "2616:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2640:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2595:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "2595:20:34"
																		},
																		"nativeSrc": "2595:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2585:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2668:118:34",
															"nodeType": "YulBlock",
															"src": "2668:118:34",
															"statements": [
																{
																	"nativeSrc": "2683:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2683:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2697:2:34",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:34",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2687:6:34",
																			"nodeType": "YulTypedName",
																			"src": "2687:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2713:63:34",
																	"nodeType": "YulAssignment",
																	"src": "2713:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2748:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "2748:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2759:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "2759:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2744:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:34"
																				},
																				"nativeSrc": "2744:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "2744:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2768:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2723:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "2723:20:34"
																		},
																		"nativeSrc": "2723:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2713:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2796:297:34",
															"nodeType": "YulBlock",
															"src": "2796:297:34",
															"statements": [
																{
																	"nativeSrc": "2811:46:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:46:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2853:2:34",
																						"nodeType": "YulLiteral",
																						"src": "2853:2:34",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:34"
																				},
																				"nativeSrc": "2838:18:34",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:18:34"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2825:12:34",
																			"nodeType": "YulIdentifier",
																			"src": "2825:12:34"
																		},
																		"nativeSrc": "2825:32:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:32:34"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2815:6:34",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2904:83:34",
																		"nodeType": "YulBlock",
																		"src": "2904:83:34",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2906:77:34",
																						"nodeType": "YulIdentifier",
																						"src": "2906:77:34"
																					},
																					"nativeSrc": "2906:79:34",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:79:34"
																				},
																				"nativeSrc": "2906:79:34",
																				"nodeType": "YulExpressionStatement",
																				"src": "2906:79:34"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2876:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "2876:6:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2884:18:34",
																				"nodeType": "YulLiteral",
																				"src": "2884:18:34",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2873:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "2873:2:34"
																		},
																		"nativeSrc": "2873:30:34",
																		"nodeType": "YulFunctionCall",
																		"src": "2873:30:34"
																	},
																	"nativeSrc": "2870:117:34",
																	"nodeType": "YulIf",
																	"src": "2870:117:34"
																},
																{
																	"nativeSrc": "3001:82:34",
																	"nodeType": "YulAssignment",
																	"src": "3001:82:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3055:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "3055:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3066:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "3066:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3051:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:34"
																				},
																				"nativeSrc": "3051:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "3051:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3075:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "3075:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "3019:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "3019:31:34"
																		},
																		"nativeSrc": "3019:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3001:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "3001:6:34"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "3009:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "3009:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "2137:963:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2211:9:34",
														"nodeType": "YulTypedName",
														"src": "2211:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2222:7:34",
														"nodeType": "YulTypedName",
														"src": "2222:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2234:6:34",
														"nodeType": "YulTypedName",
														"src": "2234:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2242:6:34",
														"nodeType": "YulTypedName",
														"src": "2242:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2250:6:34",
														"nodeType": "YulTypedName",
														"src": "2250:6:34",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2258:6:34",
														"nodeType": "YulTypedName",
														"src": "2258:6:34",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2266:6:34",
														"nodeType": "YulTypedName",
														"src": "2266:6:34",
														"type": ""
													}
												],
												"src": "2137:963:34"
											},
											{
												"body": {
													"nativeSrc": "3150:105:34",
													"nodeType": "YulBlock",
													"src": "3150:105:34",
													"statements": [
														{
															"nativeSrc": "3160:89:34",
															"nodeType": "YulAssignment",
															"src": "3160:89:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3175:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "3175:5:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3182:66:34",
																		"nodeType": "YulLiteral",
																		"src": "3182:66:34",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3171:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:34"
																},
																"nativeSrc": "3171:78:34",
																"nodeType": "YulFunctionCall",
																"src": "3171:78:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3160:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "3160:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "3106:149:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3132:5:34",
														"nodeType": "YulTypedName",
														"src": "3132:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3142:7:34",
														"nodeType": "YulTypedName",
														"src": "3142:7:34",
														"type": ""
													}
												],
												"src": "3106:149:34"
											},
											{
												"body": {
													"nativeSrc": "3324:52:34",
													"nodeType": "YulBlock",
													"src": "3324:52:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3341:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "3341:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3363:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "3346:16:34",
																			"nodeType": "YulIdentifier",
																			"src": "3346:16:34"
																		},
																		"nativeSrc": "3346:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "3346:23:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3334:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:34"
																},
																"nativeSrc": "3334:36:34",
																"nodeType": "YulFunctionCall",
																"src": "3334:36:34"
															},
															"nativeSrc": "3334:36:34",
															"nodeType": "YulExpressionStatement",
															"src": "3334:36:34"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "3261:115:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3312:5:34",
														"nodeType": "YulTypedName",
														"src": "3312:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3319:3:34",
														"nodeType": "YulTypedName",
														"src": "3319:3:34",
														"type": ""
													}
												],
												"src": "3261:115:34"
											},
											{
												"body": {
													"nativeSrc": "3478:122:34",
													"nodeType": "YulBlock",
													"src": "3478:122:34",
													"statements": [
														{
															"nativeSrc": "3488:26:34",
															"nodeType": "YulAssignment",
															"src": "3488:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3500:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3511:2:34",
																		"nodeType": "YulLiteral",
																		"src": "3511:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3496:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "3496:3:34"
																},
																"nativeSrc": "3496:18:34",
																"nodeType": "YulFunctionCall",
																"src": "3496:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3488:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "3488:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3566:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:1:34",
																				"nodeType": "YulLiteral",
																				"src": "3590:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:34"
																		},
																		"nativeSrc": "3575:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "3524:41:34",
																	"nodeType": "YulIdentifier",
																	"src": "3524:41:34"
																},
																"nativeSrc": "3524:69:34",
																"nodeType": "YulFunctionCall",
																"src": "3524:69:34"
															},
															"nativeSrc": "3524:69:34",
															"nodeType": "YulExpressionStatement",
															"src": "3524:69:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "3382:218:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3450:9:34",
														"nodeType": "YulTypedName",
														"src": "3450:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3462:6:34",
														"nodeType": "YulTypedName",
														"src": "3462:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3473:4:34",
														"nodeType": "YulTypedName",
														"src": "3473:4:34",
														"type": ""
													}
												],
												"src": "3382:218:34"
											},
											{
												"body": {
													"nativeSrc": "3695:28:34",
													"nodeType": "YulBlock",
													"src": "3695:28:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3712:1:34",
																		"nodeType": "YulLiteral",
																		"src": "3712:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3715:1:34",
																		"nodeType": "YulLiteral",
																		"src": "3715:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3705:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:34"
																},
																"nativeSrc": "3705:12:34",
																"nodeType": "YulFunctionCall",
																"src": "3705:12:34"
															},
															"nativeSrc": "3705:12:34",
															"nodeType": "YulExpressionStatement",
															"src": "3705:12:34"
														}
													]
												},
												"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
												"nativeSrc": "3606:117:34",
												"nodeType": "YulFunctionDefinition",
												"src": "3606:117:34"
											},
											{
												"body": {
													"nativeSrc": "3869:153:34",
													"nodeType": "YulBlock",
													"src": "3869:153:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "3909:83:34",
																"nodeType": "YulBlock",
																"src": "3909:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d",
																				"nativeSrc": "3911:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "3911:77:34"
																			},
																			"nativeSrc": "3911:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "3911:79:34"
																		},
																		"nativeSrc": "3911:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "3911:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "3890:3:34",
																				"nodeType": "YulIdentifier",
																				"src": "3890:3:34"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3895:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "3895:6:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3886:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "3886:3:34"
																		},
																		"nativeSrc": "3886:16:34",
																		"nodeType": "YulFunctionCall",
																		"src": "3886:16:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3904:3:34",
																		"nodeType": "YulLiteral",
																		"src": "3904:3:34",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3882:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "3882:3:34"
																},
																"nativeSrc": "3882:26:34",
																"nodeType": "YulFunctionCall",
																"src": "3882:26:34"
															},
															"nativeSrc": "3879:113:34",
															"nodeType": "YulIf",
															"src": "3879:113:34"
														},
														{
															"nativeSrc": "4001:15:34",
															"nodeType": "YulAssignment",
															"src": "4001:15:34",
															"value": {
																"name": "offset",
																"nativeSrc": "4010:6:34",
																"nodeType": "YulIdentifier",
																"src": "4010:6:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4001:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "4001:5:34"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_MintNewPositionParams_$61_calldata_ptr",
												"nativeSrc": "3778:244:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3847:6:34",
														"nodeType": "YulTypedName",
														"src": "3847:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3855:3:34",
														"nodeType": "YulTypedName",
														"src": "3855:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3863:5:34",
														"nodeType": "YulTypedName",
														"src": "3863:5:34",
														"type": ""
													}
												],
												"src": "3778:244:34"
											},
											{
												"body": {
													"nativeSrc": "4133:303:34",
													"nodeType": "YulBlock",
													"src": "4133:303:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "4180:83:34",
																"nodeType": "YulBlock",
																"src": "4180:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4182:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "4182:77:34"
																			},
																			"nativeSrc": "4182:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "4182:79:34"
																		},
																		"nativeSrc": "4182:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "4182:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4154:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "4154:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4163:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "4163:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4150:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "4150:3:34"
																		},
																		"nativeSrc": "4150:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "4150:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:3:34",
																		"nodeType": "YulLiteral",
																		"src": "4175:3:34",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4146:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "4146:3:34"
																},
																"nativeSrc": "4146:33:34",
																"nodeType": "YulFunctionCall",
																"src": "4146:33:34"
															},
															"nativeSrc": "4143:120:34",
															"nodeType": "YulIf",
															"src": "4143:120:34"
														},
														{
															"nativeSrc": "4273:156:34",
															"nodeType": "YulBlock",
															"src": "4273:156:34",
															"statements": [
																{
																	"nativeSrc": "4288:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4288:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4302:1:34",
																		"nodeType": "YulLiteral",
																		"src": "4302:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4292:6:34",
																			"nodeType": "YulTypedName",
																			"src": "4292:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4317:102:34",
																	"nodeType": "YulAssignment",
																	"src": "4317:102:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4391:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "4391:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4402:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "4402:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4387:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "4387:3:34"
																				},
																				"nativeSrc": "4387:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "4387:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4411:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "4411:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_MintNewPositionParams_$61_calldata_ptr",
																			"nativeSrc": "4327:59:34",
																			"nodeType": "YulIdentifier",
																			"src": "4327:59:34"
																		},
																		"nativeSrc": "4327:92:34",
																		"nodeType": "YulFunctionCall",
																		"src": "4327:92:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4317:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "4317:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_MintNewPositionParams_$61_calldata_ptr",
												"nativeSrc": "4028:408:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:34",
														"nodeType": "YulTypedName",
														"src": "4103:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4114:7:34",
														"nodeType": "YulTypedName",
														"src": "4114:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4126:6:34",
														"nodeType": "YulTypedName",
														"src": "4126:6:34",
														"type": ""
													}
												],
												"src": "4028:408:34"
											},
											{
												"body": {
													"nativeSrc": "4507:53:34",
													"nodeType": "YulBlock",
													"src": "4507:53:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4524:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4547:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "4547:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4529:17:34",
																			"nodeType": "YulIdentifier",
																			"src": "4529:17:34"
																		},
																		"nativeSrc": "4529:24:34",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:24:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4517:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:34"
																},
																"nativeSrc": "4517:37:34",
																"nodeType": "YulFunctionCall",
																"src": "4517:37:34"
															},
															"nativeSrc": "4517:37:34",
															"nodeType": "YulExpressionStatement",
															"src": "4517:37:34"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4442:118:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4495:5:34",
														"nodeType": "YulTypedName",
														"src": "4495:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4502:3:34",
														"nodeType": "YulTypedName",
														"src": "4502:3:34",
														"type": ""
													}
												],
												"src": "4442:118:34"
											},
											{
												"body": {
													"nativeSrc": "4611:73:34",
													"nodeType": "YulBlock",
													"src": "4611:73:34",
													"statements": [
														{
															"nativeSrc": "4621:57:34",
															"nodeType": "YulAssignment",
															"src": "4621:57:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4636:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "4636:5:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4643:34:34",
																		"nodeType": "YulLiteral",
																		"src": "4643:34:34",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4632:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:34"
																},
																"nativeSrc": "4632:46:34",
																"nodeType": "YulFunctionCall",
																"src": "4632:46:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4621:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "4621:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "4566:118:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4593:5:34",
														"nodeType": "YulTypedName",
														"src": "4593:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4603:7:34",
														"nodeType": "YulTypedName",
														"src": "4603:7:34",
														"type": ""
													}
												],
												"src": "4566:118:34"
											},
											{
												"body": {
													"nativeSrc": "4755:53:34",
													"nodeType": "YulBlock",
													"src": "4755:53:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4772:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "4772:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4795:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "4795:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "4777:17:34",
																			"nodeType": "YulIdentifier",
																			"src": "4777:17:34"
																		},
																		"nativeSrc": "4777:24:34",
																		"nodeType": "YulFunctionCall",
																		"src": "4777:24:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4765:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:34"
																},
																"nativeSrc": "4765:37:34",
																"nodeType": "YulFunctionCall",
																"src": "4765:37:34"
															},
															"nativeSrc": "4765:37:34",
															"nodeType": "YulExpressionStatement",
															"src": "4765:37:34"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "4690:118:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4743:5:34",
														"nodeType": "YulTypedName",
														"src": "4743:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4750:3:34",
														"nodeType": "YulTypedName",
														"src": "4750:3:34",
														"type": ""
													}
												],
												"src": "4690:118:34"
											},
											{
												"body": {
													"nativeSrc": "4996:371:34",
													"nodeType": "YulBlock",
													"src": "4996:371:34",
													"statements": [
														{
															"nativeSrc": "5006:27:34",
															"nodeType": "YulAssignment",
															"src": "5006:27:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5018:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "5018:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5029:3:34",
																		"nodeType": "YulLiteral",
																		"src": "5029:3:34",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5014:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:34"
																},
																"nativeSrc": "5014:19:34",
																"nodeType": "YulFunctionCall",
																"src": "5014:19:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5006:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "5006:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5087:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "5087:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5100:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "5100:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5111:1:34",
																				"nodeType": "YulLiteral",
																				"src": "5111:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5096:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "5096:3:34"
																		},
																		"nativeSrc": "5096:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5096:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5043:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "5043:43:34"
																},
																"nativeSrc": "5043:71:34",
																"nodeType": "YulFunctionCall",
																"src": "5043:71:34"
															},
															"nativeSrc": "5043:71:34",
															"nodeType": "YulExpressionStatement",
															"src": "5043:71:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5168:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "5168:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5181:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "5181:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5192:2:34",
																				"nodeType": "YulLiteral",
																				"src": "5192:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5177:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "5177:3:34"
																		},
																		"nativeSrc": "5177:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5177:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "5124:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "5124:43:34"
																},
																"nativeSrc": "5124:72:34",
																"nodeType": "YulFunctionCall",
																"src": "5124:72:34"
															},
															"nativeSrc": "5124:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "5124:72:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5250:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5263:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5274:2:34",
																				"nodeType": "YulLiteral",
																				"src": "5274:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5259:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:34"
																		},
																		"nativeSrc": "5259:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5259:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5206:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:34"
																},
																"nativeSrc": "5206:72:34",
																"nodeType": "YulFunctionCall",
																"src": "5206:72:34"
															},
															"nativeSrc": "5206:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "5206:72:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5332:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "5332:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5345:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "5345:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5356:2:34",
																				"nodeType": "YulLiteral",
																				"src": "5356:2:34",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5341:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "5341:3:34"
																		},
																		"nativeSrc": "5341:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5341:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5288:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "5288:43:34"
																},
																"nativeSrc": "5288:72:34",
																"nodeType": "YulFunctionCall",
																"src": "5288:72:34"
															},
															"nativeSrc": "5288:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "5288:72:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4814:553:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:34",
														"nodeType": "YulTypedName",
														"src": "4944:9:34",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4956:6:34",
														"nodeType": "YulTypedName",
														"src": "4956:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4964:6:34",
														"nodeType": "YulTypedName",
														"src": "4964:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4972:6:34",
														"nodeType": "YulTypedName",
														"src": "4972:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4980:6:34",
														"nodeType": "YulTypedName",
														"src": "4980:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4991:4:34",
														"nodeType": "YulTypedName",
														"src": "4991:4:34",
														"type": ""
													}
												],
												"src": "4814:553:34"
											},
											{
												"body": {
													"nativeSrc": "5473:519:34",
													"nodeType": "YulBlock",
													"src": "5473:519:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "5519:83:34",
																"nodeType": "YulBlock",
																"src": "5519:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5521:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "5521:77:34"
																			},
																			"nativeSrc": "5521:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "5521:79:34"
																		},
																		"nativeSrc": "5521:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "5521:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5494:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "5494:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5503:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5490:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:34"
																		},
																		"nativeSrc": "5490:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5515:2:34",
																		"nodeType": "YulLiteral",
																		"src": "5515:2:34",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5486:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "5486:3:34"
																},
																"nativeSrc": "5486:32:34",
																"nodeType": "YulFunctionCall",
																"src": "5486:32:34"
															},
															"nativeSrc": "5483:119:34",
															"nodeType": "YulIf",
															"src": "5483:119:34"
														},
														{
															"nativeSrc": "5612:117:34",
															"nodeType": "YulBlock",
															"src": "5612:117:34",
															"statements": [
																{
																	"nativeSrc": "5627:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5627:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5641:1:34",
																		"nodeType": "YulLiteral",
																		"src": "5641:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5631:6:34",
																			"nodeType": "YulTypedName",
																			"src": "5631:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5656:63:34",
																	"nodeType": "YulAssignment",
																	"src": "5656:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5691:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "5691:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5702:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "5702:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5687:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "5687:3:34"
																				},
																				"nativeSrc": "5687:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5711:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "5711:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5666:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "5666:20:34"
																		},
																		"nativeSrc": "5666:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5666:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5656:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "5656:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5739:118:34",
															"nodeType": "YulBlock",
															"src": "5739:118:34",
															"statements": [
																{
																	"nativeSrc": "5754:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5754:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5768:2:34",
																		"nodeType": "YulLiteral",
																		"src": "5768:2:34",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5758:6:34",
																			"nodeType": "YulTypedName",
																			"src": "5758:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5784:63:34",
																	"nodeType": "YulAssignment",
																	"src": "5784:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5819:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "5819:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5830:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "5830:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5815:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "5815:3:34"
																				},
																				"nativeSrc": "5815:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "5815:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5839:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "5839:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5794:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "5794:20:34"
																		},
																		"nativeSrc": "5794:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5794:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5784:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "5784:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5867:118:34",
															"nodeType": "YulBlock",
															"src": "5867:118:34",
															"statements": [
																{
																	"nativeSrc": "5882:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5882:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5896:2:34",
																		"nodeType": "YulLiteral",
																		"src": "5896:2:34",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5886:6:34",
																			"nodeType": "YulTypedName",
																			"src": "5886:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5912:63:34",
																	"nodeType": "YulAssignment",
																	"src": "5912:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5947:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "5947:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5958:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "5958:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5943:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "5943:3:34"
																				},
																				"nativeSrc": "5943:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "5943:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5967:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "5967:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5922:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "5922:20:34"
																		},
																		"nativeSrc": "5922:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "5922:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5912:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "5912:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "5373:619:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5427:9:34",
														"nodeType": "YulTypedName",
														"src": "5427:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5438:7:34",
														"nodeType": "YulTypedName",
														"src": "5438:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5450:6:34",
														"nodeType": "YulTypedName",
														"src": "5450:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5458:6:34",
														"nodeType": "YulTypedName",
														"src": "5458:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5466:6:34",
														"nodeType": "YulTypedName",
														"src": "5466:6:34",
														"type": ""
													}
												],
												"src": "5373:619:34"
											},
											{
												"body": {
													"nativeSrc": "6096:124:34",
													"nodeType": "YulBlock",
													"src": "6096:124:34",
													"statements": [
														{
															"nativeSrc": "6106:26:34",
															"nodeType": "YulAssignment",
															"src": "6106:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6118:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "6118:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6129:2:34",
																		"nodeType": "YulLiteral",
																		"src": "6129:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6114:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:34"
																},
																"nativeSrc": "6114:18:34",
																"nodeType": "YulFunctionCall",
																"src": "6114:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6106:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "6106:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6186:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "6186:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6199:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "6199:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6210:1:34",
																				"nodeType": "YulLiteral",
																				"src": "6210:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6195:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "6195:3:34"
																		},
																		"nativeSrc": "6195:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "6195:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "6142:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "6142:43:34"
																},
																"nativeSrc": "6142:71:34",
																"nodeType": "YulFunctionCall",
																"src": "6142:71:34"
															},
															"nativeSrc": "6142:71:34",
															"nodeType": "YulExpressionStatement",
															"src": "6142:71:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "5998:222:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6068:9:34",
														"nodeType": "YulTypedName",
														"src": "6068:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6080:6:34",
														"nodeType": "YulTypedName",
														"src": "6080:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6091:4:34",
														"nodeType": "YulTypedName",
														"src": "6091:4:34",
														"type": ""
													}
												],
												"src": "5998:222:34"
											},
											{
												"body": {
													"nativeSrc": "6292:263:34",
													"nodeType": "YulBlock",
													"src": "6292:263:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "6338:83:34",
																"nodeType": "YulBlock",
																"src": "6338:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6340:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "6340:77:34"
																			},
																			"nativeSrc": "6340:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "6340:79:34"
																		},
																		"nativeSrc": "6340:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "6340:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6313:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "6313:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6322:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "6322:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6309:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:34"
																		},
																		"nativeSrc": "6309:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "6309:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:2:34",
																		"nodeType": "YulLiteral",
																		"src": "6334:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6305:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "6305:3:34"
																},
																"nativeSrc": "6305:32:34",
																"nodeType": "YulFunctionCall",
																"src": "6305:32:34"
															},
															"nativeSrc": "6302:119:34",
															"nodeType": "YulIf",
															"src": "6302:119:34"
														},
														{
															"nativeSrc": "6431:117:34",
															"nodeType": "YulBlock",
															"src": "6431:117:34",
															"statements": [
																{
																	"nativeSrc": "6446:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6446:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6460:1:34",
																		"nodeType": "YulLiteral",
																		"src": "6460:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6450:6:34",
																			"nodeType": "YulTypedName",
																			"src": "6450:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6475:63:34",
																	"nodeType": "YulAssignment",
																	"src": "6475:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6510:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "6510:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6521:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "6521:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6506:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "6506:3:34"
																				},
																				"nativeSrc": "6506:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "6506:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6530:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "6530:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6485:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "6485:20:34"
																		},
																		"nativeSrc": "6485:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "6485:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6475:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "6475:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6226:329:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6262:9:34",
														"nodeType": "YulTypedName",
														"src": "6262:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6273:7:34",
														"nodeType": "YulTypedName",
														"src": "6273:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6285:6:34",
														"nodeType": "YulTypedName",
														"src": "6285:6:34",
														"type": ""
													}
												],
												"src": "6226:329:34"
											},
											{
												"body": {
													"nativeSrc": "6626:53:34",
													"nodeType": "YulBlock",
													"src": "6626:53:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6643:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "6643:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6666:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "6666:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6648:17:34",
																			"nodeType": "YulIdentifier",
																			"src": "6648:17:34"
																		},
																		"nativeSrc": "6648:24:34",
																		"nodeType": "YulFunctionCall",
																		"src": "6648:24:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6636:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "6636:6:34"
																},
																"nativeSrc": "6636:37:34",
																"nodeType": "YulFunctionCall",
																"src": "6636:37:34"
															},
															"nativeSrc": "6636:37:34",
															"nodeType": "YulExpressionStatement",
															"src": "6636:37:34"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6561:118:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6614:5:34",
														"nodeType": "YulTypedName",
														"src": "6614:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6621:3:34",
														"nodeType": "YulTypedName",
														"src": "6621:3:34",
														"type": ""
													}
												],
												"src": "6561:118:34"
											},
											{
												"body": {
													"nativeSrc": "6811:206:34",
													"nodeType": "YulBlock",
													"src": "6811:206:34",
													"statements": [
														{
															"nativeSrc": "6821:26:34",
															"nodeType": "YulAssignment",
															"src": "6821:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6833:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "6833:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6844:2:34",
																		"nodeType": "YulLiteral",
																		"src": "6844:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6829:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "6829:3:34"
																},
																"nativeSrc": "6829:18:34",
																"nodeType": "YulFunctionCall",
																"src": "6829:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6821:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "6821:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6901:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "6901:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6925:1:34",
																				"nodeType": "YulLiteral",
																				"src": "6925:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6910:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:34"
																		},
																		"nativeSrc": "6910:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "6910:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6857:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "6857:43:34"
																},
																"nativeSrc": "6857:71:34",
																"nodeType": "YulFunctionCall",
																"src": "6857:71:34"
															},
															"nativeSrc": "6857:71:34",
															"nodeType": "YulExpressionStatement",
															"src": "6857:71:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6982:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "6982:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6995:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "6995:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:2:34",
																				"nodeType": "YulLiteral",
																				"src": "7006:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:34"
																		},
																		"nativeSrc": "6991:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "6938:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "6938:43:34"
																},
																"nativeSrc": "6938:72:34",
																"nodeType": "YulFunctionCall",
																"src": "6938:72:34"
															},
															"nativeSrc": "6938:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "6938:72:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint128__fromStack_reversed",
												"nativeSrc": "6685:332:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6775:9:34",
														"nodeType": "YulTypedName",
														"src": "6775:9:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6787:6:34",
														"nodeType": "YulTypedName",
														"src": "6787:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6795:6:34",
														"nodeType": "YulTypedName",
														"src": "6795:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6806:4:34",
														"nodeType": "YulTypedName",
														"src": "6806:4:34",
														"type": ""
													}
												],
												"src": "6685:332:34"
											},
											{
												"body": {
													"nativeSrc": "7055:28:34",
													"nodeType": "YulBlock",
													"src": "7055:28:34",
													"statements": [
														{
															"nativeSrc": "7065:12:34",
															"nodeType": "YulAssignment",
															"src": "7065:12:34",
															"value": {
																"name": "value",
																"nativeSrc": "7072:5:34",
																"nodeType": "YulIdentifier",
																"src": "7072:5:34"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7065:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "7065:3:34"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7023:60:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7041:5:34",
														"nodeType": "YulTypedName",
														"src": "7041:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7051:3:34",
														"nodeType": "YulTypedName",
														"src": "7051:3:34",
														"type": ""
													}
												],
												"src": "7023:60:34"
											},
											{
												"body": {
													"nativeSrc": "7149:82:34",
													"nodeType": "YulBlock",
													"src": "7149:82:34",
													"statements": [
														{
															"nativeSrc": "7159:66:34",
															"nodeType": "YulAssignment",
															"src": "7159:66:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7217:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "7217:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7199:17:34",
																					"nodeType": "YulIdentifier",
																					"src": "7199:17:34"
																				},
																				"nativeSrc": "7199:24:34",
																				"nodeType": "YulFunctionCall",
																				"src": "7199:24:34"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7190:8:34",
																			"nodeType": "YulIdentifier",
																			"src": "7190:8:34"
																		},
																		"nativeSrc": "7190:34:34",
																		"nodeType": "YulFunctionCall",
																		"src": "7190:34:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7172:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "7172:17:34"
																},
																"nativeSrc": "7172:53:34",
																"nodeType": "YulFunctionCall",
																"src": "7172:53:34"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7159:9:34",
																	"nodeType": "YulIdentifier",
																	"src": "7159:9:34"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7089:142:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7129:5:34",
														"nodeType": "YulTypedName",
														"src": "7129:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7139:9:34",
														"nodeType": "YulTypedName",
														"src": "7139:9:34",
														"type": ""
													}
												],
												"src": "7089:142:34"
											},
											{
												"body": {
													"nativeSrc": "7297:66:34",
													"nodeType": "YulBlock",
													"src": "7297:66:34",
													"statements": [
														{
															"nativeSrc": "7307:50:34",
															"nodeType": "YulAssignment",
															"src": "7307:50:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7351:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "7351:5:34"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "7320:30:34",
																	"nodeType": "YulIdentifier",
																	"src": "7320:30:34"
																},
																"nativeSrc": "7320:37:34",
																"nodeType": "YulFunctionCall",
																"src": "7320:37:34"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7307:9:34",
																	"nodeType": "YulIdentifier",
																	"src": "7307:9:34"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7237:126:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7277:5:34",
														"nodeType": "YulTypedName",
														"src": "7277:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7287:9:34",
														"nodeType": "YulTypedName",
														"src": "7287:9:34",
														"type": ""
													}
												],
												"src": "7237:126:34"
											},
											{
												"body": {
													"nativeSrc": "7465:66:34",
													"nodeType": "YulBlock",
													"src": "7465:66:34",
													"statements": [
														{
															"nativeSrc": "7475:50:34",
															"nodeType": "YulAssignment",
															"src": "7475:50:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7519:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "7519:5:34"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7488:30:34",
																	"nodeType": "YulIdentifier",
																	"src": "7488:30:34"
																},
																"nativeSrc": "7488:37:34",
																"nodeType": "YulFunctionCall",
																"src": "7488:37:34"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7475:9:34",
																	"nodeType": "YulIdentifier",
																	"src": "7475:9:34"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INonfungiblePositionManager_$1270_to_t_address",
												"nativeSrc": "7369:162:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7445:5:34",
														"nodeType": "YulTypedName",
														"src": "7445:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7455:9:34",
														"nodeType": "YulTypedName",
														"src": "7455:9:34",
														"type": ""
													}
												],
												"src": "7369:162:34"
											},
											{
												"body": {
													"nativeSrc": "7638:102:34",
													"nodeType": "YulBlock",
													"src": "7638:102:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7655:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "7655:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7727:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "7727:5:34"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INonfungiblePositionManager_$1270_to_t_address",
																			"nativeSrc": "7660:66:34",
																			"nodeType": "YulIdentifier",
																			"src": "7660:66:34"
																		},
																		"nativeSrc": "7660:73:34",
																		"nodeType": "YulFunctionCall",
																		"src": "7660:73:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7648:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "7648:6:34"
																},
																"nativeSrc": "7648:86:34",
																"nodeType": "YulFunctionCall",
																"src": "7648:86:34"
															},
															"nativeSrc": "7648:86:34",
															"nodeType": "YulExpressionStatement",
															"src": "7648:86:34"
														}
													]
												},
												"name": "abi_encode_t_contract$_INonfungiblePositionManager_$1270_to_t_address_fromStack",
												"nativeSrc": "7537:203:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7626:5:34",
														"nodeType": "YulTypedName",
														"src": "7626:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7633:3:34",
														"nodeType": "YulTypedName",
														"src": "7633:3:34",
														"type": ""
													}
												],
												"src": "7537:203:34"
											},
											{
												"body": {
													"nativeSrc": "7880:160:34",
													"nodeType": "YulBlock",
													"src": "7880:160:34",
													"statements": [
														{
															"nativeSrc": "7890:26:34",
															"nodeType": "YulAssignment",
															"src": "7890:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7902:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "7902:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7913:2:34",
																		"nodeType": "YulLiteral",
																		"src": "7913:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7898:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "7898:3:34"
																},
																"nativeSrc": "7898:18:34",
																"nodeType": "YulFunctionCall",
																"src": "7898:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7890:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "7890:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8006:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "8006:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8019:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "8019:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8030:1:34",
																				"nodeType": "YulLiteral",
																				"src": "8030:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8015:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "8015:3:34"
																		},
																		"nativeSrc": "8015:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8015:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INonfungiblePositionManager_$1270_to_t_address_fromStack",
																	"nativeSrc": "7926:79:34",
																	"nodeType": "YulIdentifier",
																	"src": "7926:79:34"
																},
																"nativeSrc": "7926:107:34",
																"nodeType": "YulFunctionCall",
																"src": "7926:107:34"
															},
															"nativeSrc": "7926:107:34",
															"nodeType": "YulExpressionStatement",
															"src": "7926:107:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1270__to_t_address__fromStack_reversed",
												"nativeSrc": "7746:294:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7852:9:34",
														"nodeType": "YulTypedName",
														"src": "7852:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7864:6:34",
														"nodeType": "YulTypedName",
														"src": "7864:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7875:4:34",
														"nodeType": "YulTypedName",
														"src": "7875:4:34",
														"type": ""
													}
												],
												"src": "7746:294:34"
											},
											{
												"body": {
													"nativeSrc": "8112:263:34",
													"nodeType": "YulBlock",
													"src": "8112:263:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "8158:83:34",
																"nodeType": "YulBlock",
																"src": "8158:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8160:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "8160:77:34"
																			},
																			"nativeSrc": "8160:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "8160:79:34"
																		},
																		"nativeSrc": "8160:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "8160:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8133:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "8133:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8142:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "8142:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8129:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "8129:3:34"
																		},
																		"nativeSrc": "8129:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8129:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8154:2:34",
																		"nodeType": "YulLiteral",
																		"src": "8154:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8125:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "8125:3:34"
																},
																"nativeSrc": "8125:32:34",
																"nodeType": "YulFunctionCall",
																"src": "8125:32:34"
															},
															"nativeSrc": "8122:119:34",
															"nodeType": "YulIf",
															"src": "8122:119:34"
														},
														{
															"nativeSrc": "8251:117:34",
															"nodeType": "YulBlock",
															"src": "8251:117:34",
															"statements": [
																{
																	"nativeSrc": "8266:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8266:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8280:1:34",
																		"nodeType": "YulLiteral",
																		"src": "8280:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8270:6:34",
																			"nodeType": "YulTypedName",
																			"src": "8270:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8295:63:34",
																	"nodeType": "YulAssignment",
																	"src": "8295:63:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8330:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "8330:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8341:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "8341:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8326:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "8326:3:34"
																				},
																				"nativeSrc": "8326:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "8326:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8350:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "8350:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8305:20:34",
																			"nodeType": "YulIdentifier",
																			"src": "8305:20:34"
																		},
																		"nativeSrc": "8305:53:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8305:53:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8295:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8046:329:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8082:9:34",
														"nodeType": "YulTypedName",
														"src": "8082:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8093:7:34",
														"nodeType": "YulTypedName",
														"src": "8093:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8105:6:34",
														"nodeType": "YulTypedName",
														"src": "8105:6:34",
														"type": ""
													}
												],
												"src": "8046:329:34"
											},
											{
												"body": {
													"nativeSrc": "8535:288:34",
													"nodeType": "YulBlock",
													"src": "8535:288:34",
													"statements": [
														{
															"nativeSrc": "8545:26:34",
															"nodeType": "YulAssignment",
															"src": "8545:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8557:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "8557:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8568:2:34",
																		"nodeType": "YulLiteral",
																		"src": "8568:2:34",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8553:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "8553:3:34"
																},
																"nativeSrc": "8553:18:34",
																"nodeType": "YulFunctionCall",
																"src": "8553:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8545:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "8545:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8625:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "8625:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8638:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "8638:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8649:1:34",
																				"nodeType": "YulLiteral",
																				"src": "8649:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8634:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "8634:3:34"
																		},
																		"nativeSrc": "8634:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8634:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8581:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "8581:43:34"
																},
																"nativeSrc": "8581:71:34",
																"nodeType": "YulFunctionCall",
																"src": "8581:71:34"
															},
															"nativeSrc": "8581:71:34",
															"nodeType": "YulExpressionStatement",
															"src": "8581:71:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8706:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "8706:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8719:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "8719:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8730:2:34",
																				"nodeType": "YulLiteral",
																				"src": "8730:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8715:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "8715:3:34"
																		},
																		"nativeSrc": "8715:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8715:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8662:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "8662:43:34"
																},
																"nativeSrc": "8662:72:34",
																"nodeType": "YulFunctionCall",
																"src": "8662:72:34"
															},
															"nativeSrc": "8662:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "8662:72:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8788:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "8788:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8801:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8812:2:34",
																				"nodeType": "YulLiteral",
																				"src": "8812:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8797:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:34"
																		},
																		"nativeSrc": "8797:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8744:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "8744:43:34"
																},
																"nativeSrc": "8744:72:34",
																"nodeType": "YulFunctionCall",
																"src": "8744:72:34"
															},
															"nativeSrc": "8744:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "8744:72:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8381:442:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8491:9:34",
														"nodeType": "YulTypedName",
														"src": "8491:9:34",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8503:6:34",
														"nodeType": "YulTypedName",
														"src": "8503:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8511:6:34",
														"nodeType": "YulTypedName",
														"src": "8511:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8519:6:34",
														"nodeType": "YulTypedName",
														"src": "8519:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8530:4:34",
														"nodeType": "YulTypedName",
														"src": "8530:4:34",
														"type": ""
													}
												],
												"src": "8381:442:34"
											},
											{
												"body": {
													"nativeSrc": "8871:48:34",
													"nodeType": "YulBlock",
													"src": "8871:48:34",
													"statements": [
														{
															"nativeSrc": "8881:32:34",
															"nodeType": "YulAssignment",
															"src": "8881:32:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8906:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "8906:5:34"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8899:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "8899:6:34"
																		},
																		"nativeSrc": "8899:13:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8899:13:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8892:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:34"
																},
																"nativeSrc": "8892:21:34",
																"nodeType": "YulFunctionCall",
																"src": "8892:21:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8881:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "8881:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8829:90:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8853:5:34",
														"nodeType": "YulTypedName",
														"src": "8853:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8863:7:34",
														"nodeType": "YulTypedName",
														"src": "8863:7:34",
														"type": ""
													}
												],
												"src": "8829:90:34"
											},
											{
												"body": {
													"nativeSrc": "8965:76:34",
													"nodeType": "YulBlock",
													"src": "8965:76:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "9019:16:34",
																"nodeType": "YulBlock",
																"src": "9019:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9028:1:34",
																					"nodeType": "YulLiteral",
																					"src": "9028:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9031:1:34",
																					"nodeType": "YulLiteral",
																					"src": "9031:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9021:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "9021:6:34"
																			},
																			"nativeSrc": "9021:12:34",
																			"nodeType": "YulFunctionCall",
																			"src": "9021:12:34"
																		},
																		"nativeSrc": "9021:12:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "9021:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8988:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "8988:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9010:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "9010:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8995:14:34",
																					"nodeType": "YulIdentifier",
																					"src": "8995:14:34"
																				},
																				"nativeSrc": "8995:21:34",
																				"nodeType": "YulFunctionCall",
																				"src": "8995:21:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8985:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "8985:2:34"
																		},
																		"nativeSrc": "8985:32:34",
																		"nodeType": "YulFunctionCall",
																		"src": "8985:32:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8978:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "8978:6:34"
																},
																"nativeSrc": "8978:40:34",
																"nodeType": "YulFunctionCall",
																"src": "8978:40:34"
															},
															"nativeSrc": "8975:60:34",
															"nodeType": "YulIf",
															"src": "8975:60:34"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8925:116:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8958:5:34",
														"nodeType": "YulTypedName",
														"src": "8958:5:34",
														"type": ""
													}
												],
												"src": "8925:116:34"
											},
											{
												"body": {
													"nativeSrc": "9107:77:34",
													"nodeType": "YulBlock",
													"src": "9107:77:34",
													"statements": [
														{
															"nativeSrc": "9117:22:34",
															"nodeType": "YulAssignment",
															"src": "9117:22:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9132:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "9132:6:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9126:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "9126:5:34"
																},
																"nativeSrc": "9126:13:34",
																"nodeType": "YulFunctionCall",
																"src": "9126:13:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9117:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "9117:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9172:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "9172:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9148:23:34",
																	"nodeType": "YulIdentifier",
																	"src": "9148:23:34"
																},
																"nativeSrc": "9148:30:34",
																"nodeType": "YulFunctionCall",
																"src": "9148:30:34"
															},
															"nativeSrc": "9148:30:34",
															"nodeType": "YulExpressionStatement",
															"src": "9148:30:34"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9047:137:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9085:6:34",
														"nodeType": "YulTypedName",
														"src": "9085:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9093:3:34",
														"nodeType": "YulTypedName",
														"src": "9093:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9101:5:34",
														"nodeType": "YulTypedName",
														"src": "9101:5:34",
														"type": ""
													}
												],
												"src": "9047:137:34"
											},
											{
												"body": {
													"nativeSrc": "9264:271:34",
													"nodeType": "YulBlock",
													"src": "9264:271:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "9310:83:34",
																"nodeType": "YulBlock",
																"src": "9310:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9312:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "9312:77:34"
																			},
																			"nativeSrc": "9312:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "9312:79:34"
																		},
																		"nativeSrc": "9312:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "9312:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9285:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "9285:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9294:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "9294:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9281:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "9281:3:34"
																		},
																		"nativeSrc": "9281:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "9281:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9306:2:34",
																		"nodeType": "YulLiteral",
																		"src": "9306:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9277:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "9277:3:34"
																},
																"nativeSrc": "9277:32:34",
																"nodeType": "YulFunctionCall",
																"src": "9277:32:34"
															},
															"nativeSrc": "9274:119:34",
															"nodeType": "YulIf",
															"src": "9274:119:34"
														},
														{
															"nativeSrc": "9403:125:34",
															"nodeType": "YulBlock",
															"src": "9403:125:34",
															"statements": [
																{
																	"nativeSrc": "9418:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9418:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9432:1:34",
																		"nodeType": "YulLiteral",
																		"src": "9432:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9422:6:34",
																			"nodeType": "YulTypedName",
																			"src": "9422:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9447:71:34",
																	"nodeType": "YulAssignment",
																	"src": "9447:71:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9490:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "9490:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9501:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "9501:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9486:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "9486:3:34"
																				},
																				"nativeSrc": "9486:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "9486:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9510:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "9510:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9457:28:34",
																			"nodeType": "YulIdentifier",
																			"src": "9457:28:34"
																		},
																		"nativeSrc": "9457:61:34",
																		"nodeType": "YulFunctionCall",
																		"src": "9457:61:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9447:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "9447:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9190:345:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9234:9:34",
														"nodeType": "YulTypedName",
														"src": "9234:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9245:7:34",
														"nodeType": "YulTypedName",
														"src": "9245:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9257:6:34",
														"nodeType": "YulTypedName",
														"src": "9257:6:34",
														"type": ""
													}
												],
												"src": "9190:345:34"
											},
											{
												"body": {
													"nativeSrc": "9585:47:34",
													"nodeType": "YulBlock",
													"src": "9585:47:34",
													"statements": [
														{
															"nativeSrc": "9595:31:34",
															"nodeType": "YulAssignment",
															"src": "9595:31:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9610:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "9610:5:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9617:8:34",
																		"nodeType": "YulLiteral",
																		"src": "9617:8:34",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9606:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "9606:3:34"
																},
																"nativeSrc": "9606:20:34",
																"nodeType": "YulFunctionCall",
																"src": "9606:20:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9595:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "9595:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "9541:91:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9567:5:34",
														"nodeType": "YulTypedName",
														"src": "9567:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9577:7:34",
														"nodeType": "YulTypedName",
														"src": "9577:7:34",
														"type": ""
													}
												],
												"src": "9541:91:34"
											},
											{
												"body": {
													"nativeSrc": "9680:78:34",
													"nodeType": "YulBlock",
													"src": "9680:78:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "9736:16:34",
																"nodeType": "YulBlock",
																"src": "9736:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9745:1:34",
																					"nodeType": "YulLiteral",
																					"src": "9745:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9748:1:34",
																					"nodeType": "YulLiteral",
																					"src": "9748:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9738:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "9738:6:34"
																			},
																			"nativeSrc": "9738:12:34",
																			"nodeType": "YulFunctionCall",
																			"src": "9738:12:34"
																		},
																		"nativeSrc": "9738:12:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "9738:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9703:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "9703:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9727:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "9727:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "9710:16:34",
																					"nodeType": "YulIdentifier",
																					"src": "9710:16:34"
																				},
																				"nativeSrc": "9710:23:34",
																				"nodeType": "YulFunctionCall",
																				"src": "9710:23:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9700:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "9700:2:34"
																		},
																		"nativeSrc": "9700:34:34",
																		"nodeType": "YulFunctionCall",
																		"src": "9700:34:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9693:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "9693:6:34"
																},
																"nativeSrc": "9693:42:34",
																"nodeType": "YulFunctionCall",
																"src": "9693:42:34"
															},
															"nativeSrc": "9690:62:34",
															"nodeType": "YulIf",
															"src": "9690:62:34"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "9638:120:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9673:5:34",
														"nodeType": "YulTypedName",
														"src": "9673:5:34",
														"type": ""
													}
												],
												"src": "9638:120:34"
											},
											{
												"body": {
													"nativeSrc": "9815:86:34",
													"nodeType": "YulBlock",
													"src": "9815:86:34",
													"statements": [
														{
															"nativeSrc": "9825:29:34",
															"nodeType": "YulAssignment",
															"src": "9825:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9847:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "9847:6:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9834:12:34",
																	"nodeType": "YulIdentifier",
																	"src": "9834:12:34"
																},
																"nativeSrc": "9834:20:34",
																"nodeType": "YulFunctionCall",
																"src": "9834:20:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9825:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "9825:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9889:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "9889:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "9863:25:34",
																	"nodeType": "YulIdentifier",
																	"src": "9863:25:34"
																},
																"nativeSrc": "9863:32:34",
																"nodeType": "YulFunctionCall",
																"src": "9863:32:34"
															},
															"nativeSrc": "9863:32:34",
															"nodeType": "YulExpressionStatement",
															"src": "9863:32:34"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nativeSrc": "9764:137:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9793:6:34",
														"nodeType": "YulTypedName",
														"src": "9793:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9801:3:34",
														"nodeType": "YulTypedName",
														"src": "9801:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9809:5:34",
														"nodeType": "YulTypedName",
														"src": "9809:5:34",
														"type": ""
													}
												],
												"src": "9764:137:34"
											},
											{
												"body": {
													"nativeSrc": "9972:262:34",
													"nodeType": "YulBlock",
													"src": "9972:262:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "10018:83:34",
																"nodeType": "YulBlock",
																"src": "10018:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10020:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "10020:77:34"
																			},
																			"nativeSrc": "10020:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "10020:79:34"
																		},
																		"nativeSrc": "10020:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "10020:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9993:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "9993:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10002:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "10002:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9989:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "9989:3:34"
																		},
																		"nativeSrc": "9989:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "9989:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10014:2:34",
																		"nodeType": "YulLiteral",
																		"src": "10014:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9985:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "9985:3:34"
																},
																"nativeSrc": "9985:32:34",
																"nodeType": "YulFunctionCall",
																"src": "9985:32:34"
															},
															"nativeSrc": "9982:119:34",
															"nodeType": "YulIf",
															"src": "9982:119:34"
														},
														{
															"nativeSrc": "10111:116:34",
															"nodeType": "YulBlock",
															"src": "10111:116:34",
															"statements": [
																{
																	"nativeSrc": "10126:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10126:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10140:1:34",
																		"nodeType": "YulLiteral",
																		"src": "10140:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10130:6:34",
																			"nodeType": "YulTypedName",
																			"src": "10130:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10155:62:34",
																	"nodeType": "YulAssignment",
																	"src": "10155:62:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10189:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "10189:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10200:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "10200:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10185:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "10185:3:34"
																				},
																				"nativeSrc": "10185:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "10185:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10209:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "10209:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nativeSrc": "10165:19:34",
																			"nodeType": "YulIdentifier",
																			"src": "10165:19:34"
																		},
																		"nativeSrc": "10165:52:34",
																		"nodeType": "YulFunctionCall",
																		"src": "10165:52:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10155:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "10155:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24",
												"nativeSrc": "9907:327:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9942:9:34",
														"nodeType": "YulTypedName",
														"src": "9942:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9953:7:34",
														"nodeType": "YulTypedName",
														"src": "9953:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9965:6:34",
														"nodeType": "YulTypedName",
														"src": "9965:6:34",
														"type": ""
													}
												],
												"src": "9907:327:34"
											},
											{
												"body": {
													"nativeSrc": "10283:47:34",
													"nodeType": "YulBlock",
													"src": "10283:47:34",
													"statements": [
														{
															"nativeSrc": "10293:31:34",
															"nodeType": "YulAssignment",
															"src": "10293:31:34",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10315:1:34",
																		"nodeType": "YulLiteral",
																		"src": "10315:1:34",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10318:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "10318:5:34"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "10304:10:34",
																	"nodeType": "YulIdentifier",
																	"src": "10304:10:34"
																},
																"nativeSrc": "10304:20:34",
																"nodeType": "YulFunctionCall",
																"src": "10304:20:34"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10293:7:34",
																	"nodeType": "YulIdentifier",
																	"src": "10293:7:34"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "10240:90:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10265:5:34",
														"nodeType": "YulTypedName",
														"src": "10265:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10275:7:34",
														"nodeType": "YulTypedName",
														"src": "10275:7:34",
														"type": ""
													}
												],
												"src": "10240:90:34"
											},
											{
												"body": {
													"nativeSrc": "10364:152:34",
													"nodeType": "YulBlock",
													"src": "10364:152:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10381:1:34",
																		"nodeType": "YulLiteral",
																		"src": "10381:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10384:77:34",
																		"nodeType": "YulLiteral",
																		"src": "10384:77:34",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10374:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "10374:6:34"
																},
																"nativeSrc": "10374:88:34",
																"nodeType": "YulFunctionCall",
																"src": "10374:88:34"
															},
															"nativeSrc": "10374:88:34",
															"nodeType": "YulExpressionStatement",
															"src": "10374:88:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10478:1:34",
																		"nodeType": "YulLiteral",
																		"src": "10478:1:34",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10481:4:34",
																		"nodeType": "YulLiteral",
																		"src": "10481:4:34",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10471:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "10471:6:34"
																},
																"nativeSrc": "10471:15:34",
																"nodeType": "YulFunctionCall",
																"src": "10471:15:34"
															},
															"nativeSrc": "10471:15:34",
															"nodeType": "YulExpressionStatement",
															"src": "10471:15:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10502:1:34",
																		"nodeType": "YulLiteral",
																		"src": "10502:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10505:4:34",
																		"nodeType": "YulLiteral",
																		"src": "10505:4:34",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10495:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "10495:6:34"
																},
																"nativeSrc": "10495:15:34",
																"nodeType": "YulFunctionCall",
																"src": "10495:15:34"
															},
															"nativeSrc": "10495:15:34",
															"nodeType": "YulExpressionStatement",
															"src": "10495:15:34"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10336:180:34",
												"nodeType": "YulFunctionDefinition",
												"src": "10336:180:34"
											},
											{
												"body": {
													"nativeSrc": "10560:188:34",
													"nodeType": "YulBlock",
													"src": "10560:188:34",
													"statements": [
														{
															"nativeSrc": "10570:31:34",
															"nodeType": "YulAssignment",
															"src": "10570:31:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10595:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "10595:5:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "10579:15:34",
																	"nodeType": "YulIdentifier",
																	"src": "10579:15:34"
																},
																"nativeSrc": "10579:22:34",
																"nodeType": "YulFunctionCall",
																"src": "10579:22:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10570:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "10570:5:34"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10691:22:34",
																"nodeType": "YulBlock",
																"src": "10691:22:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10693:16:34",
																				"nodeType": "YulIdentifier",
																				"src": "10693:16:34"
																			},
																			"nativeSrc": "10693:18:34",
																			"nodeType": "YulFunctionCall",
																			"src": "10693:18:34"
																		},
																		"nativeSrc": "10693:18:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "10693:18:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10616:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "10616:5:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10623:66:34",
																		"nodeType": "YulLiteral",
																		"src": "10623:66:34",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10613:2:34",
																	"nodeType": "YulIdentifier",
																	"src": "10613:2:34"
																},
																"nativeSrc": "10613:77:34",
																"nodeType": "YulFunctionCall",
																"src": "10613:77:34"
															},
															"nativeSrc": "10610:103:34",
															"nodeType": "YulIf",
															"src": "10610:103:34"
														},
														{
															"nativeSrc": "10722:20:34",
															"nodeType": "YulAssignment",
															"src": "10722:20:34",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10733:1:34",
																		"nodeType": "YulLiteral",
																		"src": "10733:1:34",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10736:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "10736:5:34"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10729:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "10729:3:34"
																},
																"nativeSrc": "10729:13:34",
																"nodeType": "YulFunctionCall",
																"src": "10729:13:34"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10722:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "10722:3:34"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nativeSrc": "10522:226:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10546:5:34",
														"nodeType": "YulTypedName",
														"src": "10546:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10556:3:34",
														"nodeType": "YulTypedName",
														"src": "10556:3:34",
														"type": ""
													}
												],
												"src": "10522:226:34"
											},
											{
												"body": {
													"nativeSrc": "10798:147:34",
													"nodeType": "YulBlock",
													"src": "10798:147:34",
													"statements": [
														{
															"nativeSrc": "10808:25:34",
															"nodeType": "YulAssignment",
															"src": "10808:25:34",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10831:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "10831:1:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10813:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "10813:17:34"
																},
																"nativeSrc": "10813:20:34",
																"nodeType": "YulFunctionCall",
																"src": "10813:20:34"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10808:1:34",
																	"nodeType": "YulIdentifier",
																	"src": "10808:1:34"
																}
															]
														},
														{
															"nativeSrc": "10842:25:34",
															"nodeType": "YulAssignment",
															"src": "10842:25:34",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10865:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "10865:1:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10847:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "10847:17:34"
																},
																"nativeSrc": "10847:20:34",
																"nodeType": "YulFunctionCall",
																"src": "10847:20:34"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10842:1:34",
																	"nodeType": "YulIdentifier",
																	"src": "10842:1:34"
																}
															]
														},
														{
															"nativeSrc": "10876:16:34",
															"nodeType": "YulAssignment",
															"src": "10876:16:34",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10887:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "10887:1:34"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10890:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "10890:1:34"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10883:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "10883:3:34"
																},
																"nativeSrc": "10883:9:34",
																"nodeType": "YulFunctionCall",
																"src": "10883:9:34"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10876:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "10876:3:34"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10916:22:34",
																"nodeType": "YulBlock",
																"src": "10916:22:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10918:16:34",
																				"nodeType": "YulIdentifier",
																				"src": "10918:16:34"
																			},
																			"nativeSrc": "10918:18:34",
																			"nodeType": "YulFunctionCall",
																			"src": "10918:18:34"
																		},
																		"nativeSrc": "10918:18:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "10918:18:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10908:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "10908:1:34"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10911:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "10911:3:34"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10905:2:34",
																	"nodeType": "YulIdentifier",
																	"src": "10905:2:34"
																},
																"nativeSrc": "10905:10:34",
																"nodeType": "YulFunctionCall",
																"src": "10905:10:34"
															},
															"nativeSrc": "10902:36:34",
															"nodeType": "YulIf",
															"src": "10902:36:34"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10754:191:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10785:1:34",
														"nodeType": "YulTypedName",
														"src": "10785:1:34",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10788:1:34",
														"nodeType": "YulTypedName",
														"src": "10788:1:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10794:3:34",
														"nodeType": "YulTypedName",
														"src": "10794:3:34",
														"type": ""
													}
												],
												"src": "10754:191:34"
											},
											{
												"body": {
													"nativeSrc": "11006:53:34",
													"nodeType": "YulBlock",
													"src": "11006:53:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11023:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "11023:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11046:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "11046:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11028:17:34",
																			"nodeType": "YulIdentifier",
																			"src": "11028:17:34"
																		},
																		"nativeSrc": "11028:24:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11028:24:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11016:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "11016:6:34"
																},
																"nativeSrc": "11016:37:34",
																"nodeType": "YulFunctionCall",
																"src": "11016:37:34"
															},
															"nativeSrc": "11016:37:34",
															"nodeType": "YulExpressionStatement",
															"src": "11016:37:34"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "10951:108:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10994:5:34",
														"nodeType": "YulTypedName",
														"src": "10994:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11001:3:34",
														"nodeType": "YulTypedName",
														"src": "11001:3:34",
														"type": ""
													}
												],
												"src": "10951:108:34"
											},
											{
												"body": {
													"nativeSrc": "11118:52:34",
													"nodeType": "YulBlock",
													"src": "11118:52:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11135:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "11135:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11157:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "11157:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "11140:16:34",
																			"nodeType": "YulIdentifier",
																			"src": "11140:16:34"
																		},
																		"nativeSrc": "11140:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11140:23:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11128:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:34"
																},
																"nativeSrc": "11128:36:34",
																"nodeType": "YulFunctionCall",
																"src": "11128:36:34"
															},
															"nativeSrc": "11128:36:34",
															"nodeType": "YulExpressionStatement",
															"src": "11128:36:34"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "11065:105:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11106:5:34",
														"nodeType": "YulTypedName",
														"src": "11106:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11113:3:34",
														"nodeType": "YulTypedName",
														"src": "11113:3:34",
														"type": ""
													}
												],
												"src": "11065:105:34"
											},
											{
												"body": {
													"nativeSrc": "11227:51:34",
													"nodeType": "YulBlock",
													"src": "11227:51:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11244:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "11244:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11265:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "11265:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "11249:15:34",
																			"nodeType": "YulIdentifier",
																			"src": "11249:15:34"
																		},
																		"nativeSrc": "11249:22:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:22:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11237:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "11237:6:34"
																},
																"nativeSrc": "11237:35:34",
																"nodeType": "YulFunctionCall",
																"src": "11237:35:34"
															},
															"nativeSrc": "11237:35:34",
															"nodeType": "YulExpressionStatement",
															"src": "11237:35:34"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24",
												"nativeSrc": "11176:102:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11215:5:34",
														"nodeType": "YulTypedName",
														"src": "11215:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11222:3:34",
														"nodeType": "YulTypedName",
														"src": "11222:3:34",
														"type": ""
													}
												],
												"src": "11176:102:34"
											},
											{
												"body": {
													"nativeSrc": "11339:53:34",
													"nodeType": "YulBlock",
													"src": "11339:53:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11356:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "11356:3:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11379:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "11379:5:34"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11361:17:34",
																			"nodeType": "YulIdentifier",
																			"src": "11361:17:34"
																		},
																		"nativeSrc": "11361:24:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11361:24:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11349:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "11349:6:34"
																},
																"nativeSrc": "11349:37:34",
																"nodeType": "YulFunctionCall",
																"src": "11349:37:34"
															},
															"nativeSrc": "11349:37:34",
															"nodeType": "YulExpressionStatement",
															"src": "11349:37:34"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "11284:108:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11327:5:34",
														"nodeType": "YulTypedName",
														"src": "11327:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11334:3:34",
														"nodeType": "YulTypedName",
														"src": "11334:3:34",
														"type": ""
													}
												],
												"src": "11284:108:34"
											},
											{
												"body": {
													"nativeSrc": "11622:2015:34",
													"nodeType": "YulBlock",
													"src": "11622:2015:34",
													"statements": [
														{
															"nativeSrc": "11632:28:34",
															"nodeType": "YulVariableDeclaration",
															"src": "11632:28:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11648:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "11648:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11653:6:34",
																		"nodeType": "YulLiteral",
																		"src": "11653:6:34",
																		"type": "",
																		"value": "0x0160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11644:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "11644:3:34"
																},
																"nativeSrc": "11644:16:34",
																"nodeType": "YulFunctionCall",
																"src": "11644:16:34"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "11636:4:34",
																	"nodeType": "YulTypedName",
																	"src": "11636:4:34",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11670:166:34",
															"nodeType": "YulBlock",
															"src": "11670:166:34",
															"statements": [
																{
																	"nativeSrc": "11707:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11707:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11737:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "11737:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11744:4:34",
																						"nodeType": "YulLiteral",
																						"src": "11744:4:34",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11733:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "11733:3:34"
																				},
																				"nativeSrc": "11733:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "11733:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11727:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "11727:5:34"
																		},
																		"nativeSrc": "11727:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11727:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11711:12:34",
																			"nodeType": "YulTypedName",
																			"src": "11711:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11797:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "11797:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11815:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "11815:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11820:4:34",
																						"nodeType": "YulLiteral",
																						"src": "11820:4:34",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11811:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "11811:3:34"
																				},
																				"nativeSrc": "11811:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "11811:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "11763:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "11763:33:34"
																		},
																		"nativeSrc": "11763:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11763:63:34"
																	},
																	"nativeSrc": "11763:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "11763:63:34"
																}
															]
														},
														{
															"nativeSrc": "11846:166:34",
															"nodeType": "YulBlock",
															"src": "11846:166:34",
															"statements": [
																{
																	"nativeSrc": "11883:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11883:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11913:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "11913:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11920:4:34",
																						"nodeType": "YulLiteral",
																						"src": "11920:4:34",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11909:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "11909:3:34"
																				},
																				"nativeSrc": "11909:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "11909:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11903:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "11903:5:34"
																		},
																		"nativeSrc": "11903:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11903:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11887:12:34",
																			"nodeType": "YulTypedName",
																			"src": "11887:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11973:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "11973:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11991:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "11991:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11996:4:34",
																						"nodeType": "YulLiteral",
																						"src": "11996:4:34",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11987:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "11987:3:34"
																				},
																				"nativeSrc": "11987:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "11987:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "11939:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "11939:33:34"
																		},
																		"nativeSrc": "11939:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "11939:63:34"
																	},
																	"nativeSrc": "11939:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "11939:63:34"
																}
															]
														},
														{
															"nativeSrc": "12022:161:34",
															"nodeType": "YulBlock",
															"src": "12022:161:34",
															"statements": [
																{
																	"nativeSrc": "12056:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12056:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12086:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "12086:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12093:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12093:4:34",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12082:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12082:3:34"
																				},
																				"nativeSrc": "12082:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12082:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12076:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "12076:5:34"
																		},
																		"nativeSrc": "12076:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12076:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12060:12:34",
																			"nodeType": "YulTypedName",
																			"src": "12060:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12144:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "12144:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12162:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "12162:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12167:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12167:4:34",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12158:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12158:3:34"
																				},
																				"nativeSrc": "12158:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12158:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "12112:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "12112:31:34"
																		},
																		"nativeSrc": "12112:61:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12112:61:34"
																	},
																	"nativeSrc": "12112:61:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "12112:61:34"
																}
															]
														},
														{
															"nativeSrc": "12193:165:34",
															"nodeType": "YulBlock",
															"src": "12193:165:34",
															"statements": [
																{
																	"nativeSrc": "12233:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12233:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12263:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "12263:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12270:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12270:4:34",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12259:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12259:3:34"
																				},
																				"nativeSrc": "12259:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12259:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12253:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "12253:5:34"
																		},
																		"nativeSrc": "12253:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12253:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12237:12:34",
																			"nodeType": "YulTypedName",
																			"src": "12237:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12319:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "12319:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12337:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "12337:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12342:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12342:4:34",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12333:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12333:3:34"
																				},
																				"nativeSrc": "12333:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12333:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_int24_to_t_int24",
																			"nativeSrc": "12289:29:34",
																			"nodeType": "YulIdentifier",
																			"src": "12289:29:34"
																		},
																		"nativeSrc": "12289:59:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12289:59:34"
																	},
																	"nativeSrc": "12289:59:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "12289:59:34"
																}
															]
														},
														{
															"nativeSrc": "12368:165:34",
															"nodeType": "YulBlock",
															"src": "12368:165:34",
															"statements": [
																{
																	"nativeSrc": "12408:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12408:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12438:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "12438:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12445:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12445:4:34",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12434:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12434:3:34"
																				},
																				"nativeSrc": "12434:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12434:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12428:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "12428:5:34"
																		},
																		"nativeSrc": "12428:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12428:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12412:12:34",
																			"nodeType": "YulTypedName",
																			"src": "12412:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12494:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "12494:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12512:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "12512:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12517:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12517:4:34",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12508:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12508:3:34"
																				},
																				"nativeSrc": "12508:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12508:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_int24_to_t_int24",
																			"nativeSrc": "12464:29:34",
																			"nodeType": "YulIdentifier",
																			"src": "12464:29:34"
																		},
																		"nativeSrc": "12464:59:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12464:59:34"
																	},
																	"nativeSrc": "12464:59:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "12464:59:34"
																}
															]
														},
														{
															"nativeSrc": "12543:174:34",
															"nodeType": "YulBlock",
															"src": "12543:174:34",
															"statements": [
																{
																	"nativeSrc": "12588:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12588:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12618:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "12618:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12625:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12625:4:34",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12614:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12614:3:34"
																				},
																				"nativeSrc": "12614:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12614:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12608:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "12608:5:34"
																		},
																		"nativeSrc": "12608:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12608:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12592:12:34",
																			"nodeType": "YulTypedName",
																			"src": "12592:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12678:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "12678:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12696:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "12696:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12701:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12701:4:34",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12692:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12692:3:34"
																				},
																				"nativeSrc": "12692:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12692:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12644:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "12644:33:34"
																		},
																		"nativeSrc": "12644:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12644:63:34"
																	},
																	"nativeSrc": "12644:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "12644:63:34"
																}
															]
														},
														{
															"nativeSrc": "12727:174:34",
															"nodeType": "YulBlock",
															"src": "12727:174:34",
															"statements": [
																{
																	"nativeSrc": "12772:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12772:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12802:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "12802:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12809:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12809:4:34",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12798:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12798:3:34"
																				},
																				"nativeSrc": "12798:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12798:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12792:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "12792:5:34"
																		},
																		"nativeSrc": "12792:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12792:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12776:12:34",
																			"nodeType": "YulTypedName",
																			"src": "12776:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12862:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "12862:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12880:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "12880:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12885:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12885:4:34",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12876:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12876:3:34"
																				},
																				"nativeSrc": "12876:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12876:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12828:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "12828:33:34"
																		},
																		"nativeSrc": "12828:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12828:63:34"
																	},
																	"nativeSrc": "12828:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "12828:63:34"
																}
															]
														},
														{
															"nativeSrc": "12911:170:34",
															"nodeType": "YulBlock",
															"src": "12911:170:34",
															"statements": [
																{
																	"nativeSrc": "12952:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12952:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12982:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "12982:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12989:4:34",
																						"nodeType": "YulLiteral",
																						"src": "12989:4:34",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12978:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "12978:3:34"
																				},
																				"nativeSrc": "12978:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "12978:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12972:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "12972:5:34"
																		},
																		"nativeSrc": "12972:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "12972:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12956:12:34",
																			"nodeType": "YulTypedName",
																			"src": "12956:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13042:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "13042:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13060:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "13060:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13065:4:34",
																						"nodeType": "YulLiteral",
																						"src": "13065:4:34",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13056:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13056:3:34"
																				},
																				"nativeSrc": "13056:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13056:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13008:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "13008:33:34"
																		},
																		"nativeSrc": "13008:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13008:63:34"
																	},
																	"nativeSrc": "13008:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "13008:63:34"
																}
															]
														},
														{
															"nativeSrc": "13091:174:34",
															"nodeType": "YulBlock",
															"src": "13091:174:34",
															"statements": [
																{
																	"nativeSrc": "13132:45:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13132:45:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13162:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "13162:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13169:6:34",
																						"nodeType": "YulLiteral",
																						"src": "13169:6:34",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13158:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13158:3:34"
																				},
																				"nativeSrc": "13158:18:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13158:18:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13152:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "13152:5:34"
																		},
																		"nativeSrc": "13152:25:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13152:25:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13136:12:34",
																			"nodeType": "YulTypedName",
																			"src": "13136:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13224:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "13224:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13242:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "13242:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13247:6:34",
																						"nodeType": "YulLiteral",
																						"src": "13247:6:34",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13238:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13238:3:34"
																				},
																				"nativeSrc": "13238:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13238:16:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13190:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "13190:33:34"
																		},
																		"nativeSrc": "13190:65:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13190:65:34"
																	},
																	"nativeSrc": "13190:65:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "13190:65:34"
																}
															]
														},
														{
															"nativeSrc": "13275:173:34",
															"nodeType": "YulBlock",
															"src": "13275:173:34",
															"statements": [
																{
																	"nativeSrc": "13315:45:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13315:45:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13345:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "13345:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13352:6:34",
																						"nodeType": "YulLiteral",
																						"src": "13352:6:34",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13341:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13341:3:34"
																				},
																				"nativeSrc": "13341:18:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13341:18:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13335:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "13335:5:34"
																		},
																		"nativeSrc": "13335:25:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13335:25:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13319:12:34",
																			"nodeType": "YulTypedName",
																			"src": "13319:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13407:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "13407:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13425:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "13425:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13430:6:34",
																						"nodeType": "YulLiteral",
																						"src": "13430:6:34",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13421:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13421:3:34"
																				},
																				"nativeSrc": "13421:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13421:16:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "13373:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "13373:33:34"
																		},
																		"nativeSrc": "13373:65:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13373:65:34"
																	},
																	"nativeSrc": "13373:65:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "13373:65:34"
																}
															]
														},
														{
															"nativeSrc": "13458:172:34",
															"nodeType": "YulBlock",
															"src": "13458:172:34",
															"statements": [
																{
																	"nativeSrc": "13497:45:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13497:45:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13527:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "13527:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13534:6:34",
																						"nodeType": "YulLiteral",
																						"src": "13534:6:34",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13523:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13523:3:34"
																				},
																				"nativeSrc": "13523:18:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13523:18:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13517:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "13517:5:34"
																		},
																		"nativeSrc": "13517:25:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13517:25:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13501:12:34",
																			"nodeType": "YulTypedName",
																			"src": "13501:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13589:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "13589:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13607:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "13607:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13612:6:34",
																						"nodeType": "YulLiteral",
																						"src": "13612:6:34",
																						"type": "",
																						"value": "0x0140"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13603:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "13603:3:34"
																				},
																				"nativeSrc": "13603:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "13603:16:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13555:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "13555:33:34"
																		},
																		"nativeSrc": "13555:65:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13555:65:34"
																	},
																	"nativeSrc": "13555:65:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "13555:65:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_MintParams_$1180_memory_ptr_to_t_struct$_MintParams_$1180_memory_ptr_fromStack",
												"nativeSrc": "11500:2137:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11609:5:34",
														"nodeType": "YulTypedName",
														"src": "11609:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11616:3:34",
														"nodeType": "YulTypedName",
														"src": "11616:3:34",
														"type": ""
													}
												],
												"src": "11500:2137:34"
											},
											{
												"body": {
													"nativeSrc": "13797:181:34",
													"nodeType": "YulBlock",
													"src": "13797:181:34",
													"statements": [
														{
															"nativeSrc": "13807:27:34",
															"nodeType": "YulAssignment",
															"src": "13807:27:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13819:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "13819:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13830:3:34",
																		"nodeType": "YulLiteral",
																		"src": "13830:3:34",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13815:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "13815:3:34"
																},
																"nativeSrc": "13815:19:34",
																"nodeType": "YulFunctionCall",
																"src": "13815:19:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13807:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "13807:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13944:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "13944:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13957:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "13957:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13968:1:34",
																				"nodeType": "YulLiteral",
																				"src": "13968:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13953:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "13953:3:34"
																		},
																		"nativeSrc": "13953:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "13953:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_MintParams_$1180_memory_ptr_to_t_struct$_MintParams_$1180_memory_ptr_fromStack",
																	"nativeSrc": "13844:99:34",
																	"nodeType": "YulIdentifier",
																	"src": "13844:99:34"
																},
																"nativeSrc": "13844:127:34",
																"nodeType": "YulFunctionCall",
																"src": "13844:127:34"
															},
															"nativeSrc": "13844:127:34",
															"nodeType": "YulExpressionStatement",
															"src": "13844:127:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1180_memory_ptr__to_t_struct$_MintParams_$1180_memory_ptr__fromStack_reversed",
												"nativeSrc": "13643:335:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13769:9:34",
														"nodeType": "YulTypedName",
														"src": "13769:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13781:6:34",
														"nodeType": "YulTypedName",
														"src": "13781:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13792:4:34",
														"nodeType": "YulTypedName",
														"src": "13792:4:34",
														"type": ""
													}
												],
												"src": "13643:335:34"
											},
											{
												"body": {
													"nativeSrc": "14047:80:34",
													"nodeType": "YulBlock",
													"src": "14047:80:34",
													"statements": [
														{
															"nativeSrc": "14057:22:34",
															"nodeType": "YulAssignment",
															"src": "14057:22:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14072:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "14072:6:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14066:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "14066:5:34"
																},
																"nativeSrc": "14066:13:34",
																"nodeType": "YulFunctionCall",
																"src": "14066:13:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14057:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "14057:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14115:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "14115:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14088:26:34",
																	"nodeType": "YulIdentifier",
																	"src": "14088:26:34"
																},
																"nativeSrc": "14088:33:34",
																"nodeType": "YulFunctionCall",
																"src": "14088:33:34"
															},
															"nativeSrc": "14088:33:34",
															"nodeType": "YulExpressionStatement",
															"src": "14088:33:34"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13984:143:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14025:6:34",
														"nodeType": "YulTypedName",
														"src": "14025:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14033:3:34",
														"nodeType": "YulTypedName",
														"src": "14033:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14041:5:34",
														"nodeType": "YulTypedName",
														"src": "14041:5:34",
														"type": ""
													}
												],
												"src": "13984:143:34"
											},
											{
												"body": {
													"nativeSrc": "14176:79:34",
													"nodeType": "YulBlock",
													"src": "14176:79:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "14233:16:34",
																"nodeType": "YulBlock",
																"src": "14233:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14242:1:34",
																					"nodeType": "YulLiteral",
																					"src": "14242:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14245:1:34",
																					"nodeType": "YulLiteral",
																					"src": "14245:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14235:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "14235:6:34"
																			},
																			"nativeSrc": "14235:12:34",
																			"nodeType": "YulFunctionCall",
																			"src": "14235:12:34"
																		},
																		"nativeSrc": "14235:12:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "14235:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14199:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "14199:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14224:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "14224:5:34"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "14206:17:34",
																					"nodeType": "YulIdentifier",
																					"src": "14206:17:34"
																				},
																				"nativeSrc": "14206:24:34",
																				"nodeType": "YulFunctionCall",
																				"src": "14206:24:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14196:2:34",
																			"nodeType": "YulIdentifier",
																			"src": "14196:2:34"
																		},
																		"nativeSrc": "14196:35:34",
																		"nodeType": "YulFunctionCall",
																		"src": "14196:35:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14189:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "14189:6:34"
																},
																"nativeSrc": "14189:43:34",
																"nodeType": "YulFunctionCall",
																"src": "14189:43:34"
															},
															"nativeSrc": "14186:63:34",
															"nodeType": "YulIf",
															"src": "14186:63:34"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "14133:122:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14169:5:34",
														"nodeType": "YulTypedName",
														"src": "14169:5:34",
														"type": ""
													}
												],
												"src": "14133:122:34"
											},
											{
												"body": {
													"nativeSrc": "14324:80:34",
													"nodeType": "YulBlock",
													"src": "14324:80:34",
													"statements": [
														{
															"nativeSrc": "14334:22:34",
															"nodeType": "YulAssignment",
															"src": "14334:22:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14349:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "14349:6:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14343:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "14343:5:34"
																},
																"nativeSrc": "14343:13:34",
																"nodeType": "YulFunctionCall",
																"src": "14343:13:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14334:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "14334:5:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14392:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "14392:5:34"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "14365:26:34",
																	"nodeType": "YulIdentifier",
																	"src": "14365:26:34"
																},
																"nativeSrc": "14365:33:34",
																"nodeType": "YulFunctionCall",
																"src": "14365:33:34"
															},
															"nativeSrc": "14365:33:34",
															"nodeType": "YulExpressionStatement",
															"src": "14365:33:34"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nativeSrc": "14261:143:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14302:6:34",
														"nodeType": "YulTypedName",
														"src": "14302:6:34",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14310:3:34",
														"nodeType": "YulTypedName",
														"src": "14310:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14318:5:34",
														"nodeType": "YulTypedName",
														"src": "14318:5:34",
														"type": ""
													}
												],
												"src": "14261:143:34"
											},
											{
												"body": {
													"nativeSrc": "14538:692:34",
													"nodeType": "YulBlock",
													"src": "14538:692:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "14585:83:34",
																"nodeType": "YulBlock",
																"src": "14585:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14587:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "14587:77:34"
																			},
																			"nativeSrc": "14587:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "14587:79:34"
																		},
																		"nativeSrc": "14587:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "14587:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14559:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "14559:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14568:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "14568:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14555:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "14555:3:34"
																		},
																		"nativeSrc": "14555:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "14555:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14580:3:34",
																		"nodeType": "YulLiteral",
																		"src": "14580:3:34",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14551:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "14551:3:34"
																},
																"nativeSrc": "14551:33:34",
																"nodeType": "YulFunctionCall",
																"src": "14551:33:34"
															},
															"nativeSrc": "14548:120:34",
															"nodeType": "YulIf",
															"src": "14548:120:34"
														},
														{
															"nativeSrc": "14678:128:34",
															"nodeType": "YulBlock",
															"src": "14678:128:34",
															"statements": [
																{
																	"nativeSrc": "14693:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14693:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14707:1:34",
																		"nodeType": "YulLiteral",
																		"src": "14707:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14697:6:34",
																			"nodeType": "YulTypedName",
																			"src": "14697:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14722:74:34",
																	"nodeType": "YulAssignment",
																	"src": "14722:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14768:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "14768:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14779:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "14779:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14764:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "14764:3:34"
																				},
																				"nativeSrc": "14764:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "14764:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14788:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "14788:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14732:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "14732:31:34"
																		},
																		"nativeSrc": "14732:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "14732:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14722:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "14722:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14816:129:34",
															"nodeType": "YulBlock",
															"src": "14816:129:34",
															"statements": [
																{
																	"nativeSrc": "14831:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14831:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14845:2:34",
																		"nodeType": "YulLiteral",
																		"src": "14845:2:34",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14835:6:34",
																			"nodeType": "YulTypedName",
																			"src": "14835:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14861:74:34",
																	"nodeType": "YulAssignment",
																	"src": "14861:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14907:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "14907:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14918:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "14918:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14903:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "14903:3:34"
																				},
																				"nativeSrc": "14903:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "14903:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14927:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "14927:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nativeSrc": "14871:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "14871:31:34"
																		},
																		"nativeSrc": "14871:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "14871:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14861:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "14861:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14955:129:34",
															"nodeType": "YulBlock",
															"src": "14955:129:34",
															"statements": [
																{
																	"nativeSrc": "14970:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14970:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14984:2:34",
																		"nodeType": "YulLiteral",
																		"src": "14984:2:34",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14974:6:34",
																			"nodeType": "YulTypedName",
																			"src": "14974:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15000:74:34",
																	"nodeType": "YulAssignment",
																	"src": "15000:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15046:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "15046:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15057:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "15057:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15042:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "15042:3:34"
																				},
																				"nativeSrc": "15042:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "15042:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15066:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "15066:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15010:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "15010:31:34"
																		},
																		"nativeSrc": "15010:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "15010:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15000:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "15000:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15094:129:34",
															"nodeType": "YulBlock",
															"src": "15094:129:34",
															"statements": [
																{
																	"nativeSrc": "15109:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15109:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15123:2:34",
																		"nodeType": "YulLiteral",
																		"src": "15123:2:34",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15113:6:34",
																			"nodeType": "YulTypedName",
																			"src": "15113:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15139:74:34",
																	"nodeType": "YulAssignment",
																	"src": "15139:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15185:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "15185:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15196:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "15196:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15181:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "15181:3:34"
																				},
																				"nativeSrc": "15181:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "15181:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15205:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "15205:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15149:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "15149:31:34"
																		},
																		"nativeSrc": "15149:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "15149:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "15139:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "15139:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory",
												"nativeSrc": "14410:820:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14484:9:34",
														"nodeType": "YulTypedName",
														"src": "14484:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14495:7:34",
														"nodeType": "YulTypedName",
														"src": "14495:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14507:6:34",
														"nodeType": "YulTypedName",
														"src": "14507:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14515:6:34",
														"nodeType": "YulTypedName",
														"src": "14515:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14523:6:34",
														"nodeType": "YulTypedName",
														"src": "14523:6:34",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14531:6:34",
														"nodeType": "YulTypedName",
														"src": "14531:6:34",
														"type": ""
													}
												],
												"src": "14410:820:34"
											},
											{
												"body": {
													"nativeSrc": "15281:149:34",
													"nodeType": "YulBlock",
													"src": "15281:149:34",
													"statements": [
														{
															"nativeSrc": "15291:25:34",
															"nodeType": "YulAssignment",
															"src": "15291:25:34",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15314:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "15314:1:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15296:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "15296:17:34"
																},
																"nativeSrc": "15296:20:34",
																"nodeType": "YulFunctionCall",
																"src": "15296:20:34"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15291:1:34",
																	"nodeType": "YulIdentifier",
																	"src": "15291:1:34"
																}
															]
														},
														{
															"nativeSrc": "15325:25:34",
															"nodeType": "YulAssignment",
															"src": "15325:25:34",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15348:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "15348:1:34"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15330:17:34",
																	"nodeType": "YulIdentifier",
																	"src": "15330:17:34"
																},
																"nativeSrc": "15330:20:34",
																"nodeType": "YulFunctionCall",
																"src": "15330:20:34"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15325:1:34",
																	"nodeType": "YulIdentifier",
																	"src": "15325:1:34"
																}
															]
														},
														{
															"nativeSrc": "15359:17:34",
															"nodeType": "YulAssignment",
															"src": "15359:17:34",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15371:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "15371:1:34"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15374:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "15374:1:34"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15367:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "15367:3:34"
																},
																"nativeSrc": "15367:9:34",
																"nodeType": "YulFunctionCall",
																"src": "15367:9:34"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15359:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "15359:4:34"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15401:22:34",
																"nodeType": "YulBlock",
																"src": "15401:22:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15403:16:34",
																				"nodeType": "YulIdentifier",
																				"src": "15403:16:34"
																			},
																			"nativeSrc": "15403:18:34",
																			"nodeType": "YulFunctionCall",
																			"src": "15403:18:34"
																		},
																		"nativeSrc": "15403:18:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "15403:18:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15392:4:34",
																		"nodeType": "YulIdentifier",
																		"src": "15392:4:34"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15398:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "15398:1:34"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15389:2:34",
																	"nodeType": "YulIdentifier",
																	"src": "15389:2:34"
																},
																"nativeSrc": "15389:11:34",
																"nodeType": "YulFunctionCall",
																"src": "15389:11:34"
															},
															"nativeSrc": "15386:37:34",
															"nodeType": "YulIf",
															"src": "15386:37:34"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15236:194:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15267:1:34",
														"nodeType": "YulTypedName",
														"src": "15267:1:34",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15270:1:34",
														"nodeType": "YulTypedName",
														"src": "15270:1:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15276:4:34",
														"nodeType": "YulTypedName",
														"src": "15276:4:34",
														"type": ""
													}
												],
												"src": "15236:194:34"
											},
											{
												"body": {
													"nativeSrc": "15712:1126:34",
													"nodeType": "YulBlock",
													"src": "15712:1126:34",
													"statements": [
														{
															"nativeSrc": "15722:26:34",
															"nodeType": "YulVariableDeclaration",
															"src": "15722:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15738:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "15738:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15743:4:34",
																		"nodeType": "YulLiteral",
																		"src": "15743:4:34",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15734:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:34"
																},
																"nativeSrc": "15734:14:34",
																"nodeType": "YulFunctionCall",
																"src": "15734:14:34"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "15726:4:34",
																	"nodeType": "YulTypedName",
																	"src": "15726:4:34",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15758:167:34",
															"nodeType": "YulBlock",
															"src": "15758:167:34",
															"statements": [
																{
																	"nativeSrc": "15796:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15796:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15826:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "15826:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15833:4:34",
																						"nodeType": "YulLiteral",
																						"src": "15833:4:34",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15822:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "15822:3:34"
																				},
																				"nativeSrc": "15822:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "15822:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15816:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "15816:5:34"
																		},
																		"nativeSrc": "15816:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "15816:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15800:12:34",
																			"nodeType": "YulTypedName",
																			"src": "15800:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15886:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "15886:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15904:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "15904:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15909:4:34",
																						"nodeType": "YulLiteral",
																						"src": "15909:4:34",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15900:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "15900:3:34"
																				},
																				"nativeSrc": "15900:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "15900:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "15852:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "15852:33:34"
																		},
																		"nativeSrc": "15852:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "15852:63:34"
																	},
																	"nativeSrc": "15852:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "15852:63:34"
																}
															]
														},
														{
															"nativeSrc": "15935:174:34",
															"nodeType": "YulBlock",
															"src": "15935:174:34",
															"statements": [
																{
																	"nativeSrc": "15980:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15980:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16010:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "16010:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16017:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16017:4:34",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16006:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16006:3:34"
																				},
																				"nativeSrc": "16006:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16006:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16000:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "16000:5:34"
																		},
																		"nativeSrc": "16000:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16000:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15984:12:34",
																			"nodeType": "YulTypedName",
																			"src": "15984:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16070:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "16070:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16088:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "16088:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16093:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16093:4:34",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16084:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16084:3:34"
																				},
																				"nativeSrc": "16084:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16084:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16036:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "16036:33:34"
																		},
																		"nativeSrc": "16036:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16036:63:34"
																	},
																	"nativeSrc": "16036:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "16036:63:34"
																}
															]
														},
														{
															"nativeSrc": "16119:174:34",
															"nodeType": "YulBlock",
															"src": "16119:174:34",
															"statements": [
																{
																	"nativeSrc": "16164:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16164:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16194:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "16194:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16201:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16201:4:34",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16190:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16190:3:34"
																				},
																				"nativeSrc": "16190:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16190:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16184:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "16184:5:34"
																		},
																		"nativeSrc": "16184:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16184:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16168:12:34",
																			"nodeType": "YulTypedName",
																			"src": "16168:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16254:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "16254:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16272:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "16272:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16277:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16277:4:34",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16268:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16268:3:34"
																				},
																				"nativeSrc": "16268:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16268:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16220:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "16220:33:34"
																		},
																		"nativeSrc": "16220:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16220:63:34"
																	},
																	"nativeSrc": "16220:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "16220:63:34"
																}
															]
														},
														{
															"nativeSrc": "16303:170:34",
															"nodeType": "YulBlock",
															"src": "16303:170:34",
															"statements": [
																{
																	"nativeSrc": "16344:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16344:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16374:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "16374:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16381:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16381:4:34",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16370:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16370:3:34"
																				},
																				"nativeSrc": "16370:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16370:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16364:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "16364:5:34"
																		},
																		"nativeSrc": "16364:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16364:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16348:12:34",
																			"nodeType": "YulTypedName",
																			"src": "16348:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16434:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "16434:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16452:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "16452:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16457:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16457:4:34",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16448:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16448:3:34"
																				},
																				"nativeSrc": "16448:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16448:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16400:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "16400:33:34"
																		},
																		"nativeSrc": "16400:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16400:63:34"
																	},
																	"nativeSrc": "16400:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "16400:63:34"
																}
															]
														},
														{
															"nativeSrc": "16483:170:34",
															"nodeType": "YulBlock",
															"src": "16483:170:34",
															"statements": [
																{
																	"nativeSrc": "16524:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16524:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16554:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "16554:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16561:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16561:4:34",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16550:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16550:3:34"
																				},
																				"nativeSrc": "16550:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16550:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16544:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "16544:5:34"
																		},
																		"nativeSrc": "16544:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16544:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16528:12:34",
																			"nodeType": "YulTypedName",
																			"src": "16528:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16614:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "16614:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16632:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "16632:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16637:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16637:4:34",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16628:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16628:3:34"
																				},
																				"nativeSrc": "16628:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16628:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16580:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "16580:33:34"
																		},
																		"nativeSrc": "16580:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16580:63:34"
																	},
																	"nativeSrc": "16580:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "16580:63:34"
																}
															]
														},
														{
															"nativeSrc": "16663:168:34",
															"nodeType": "YulBlock",
															"src": "16663:168:34",
															"statements": [
																{
																	"nativeSrc": "16702:43:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16702:43:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16732:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "16732:5:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16739:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16739:4:34",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16728:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16728:3:34"
																				},
																				"nativeSrc": "16728:16:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16728:16:34"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16722:5:34",
																			"nodeType": "YulIdentifier",
																			"src": "16722:5:34"
																		},
																		"nativeSrc": "16722:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16722:23:34"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16706:12:34",
																			"nodeType": "YulTypedName",
																			"src": "16706:12:34",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16792:12:34",
																				"nodeType": "YulIdentifier",
																				"src": "16792:12:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16810:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "16810:3:34"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16815:4:34",
																						"nodeType": "YulLiteral",
																						"src": "16815:4:34",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16806:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "16806:3:34"
																				},
																				"nativeSrc": "16806:14:34",
																				"nodeType": "YulFunctionCall",
																				"src": "16806:14:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16758:33:34",
																			"nodeType": "YulIdentifier",
																			"src": "16758:33:34"
																		},
																		"nativeSrc": "16758:63:34",
																		"nodeType": "YulFunctionCall",
																		"src": "16758:63:34"
																	},
																	"nativeSrc": "16758:63:34",
																	"nodeType": "YulExpressionStatement",
																	"src": "16758:63:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_fromStack",
												"nativeSrc": "15564:1274:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15699:5:34",
														"nodeType": "YulTypedName",
														"src": "15699:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15706:3:34",
														"nodeType": "YulTypedName",
														"src": "15706:3:34",
														"type": ""
													}
												],
												"src": "15564:1274:34"
											},
											{
												"body": {
													"nativeSrc": "17024:207:34",
													"nodeType": "YulBlock",
													"src": "17024:207:34",
													"statements": [
														{
															"nativeSrc": "17034:27:34",
															"nodeType": "YulAssignment",
															"src": "17034:27:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17046:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "17046:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17057:3:34",
																		"nodeType": "YulLiteral",
																		"src": "17057:3:34",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17042:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "17042:3:34"
																},
																"nativeSrc": "17042:19:34",
																"nodeType": "YulFunctionCall",
																"src": "17042:19:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17034:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "17034:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17197:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "17197:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17210:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "17210:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17221:1:34",
																				"nodeType": "YulLiteral",
																				"src": "17221:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17206:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "17206:3:34"
																		},
																		"nativeSrc": "17206:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "17206:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_fromStack",
																	"nativeSrc": "17071:125:34",
																	"nodeType": "YulIdentifier",
																	"src": "17071:125:34"
																},
																"nativeSrc": "17071:153:34",
																"nodeType": "YulFunctionCall",
																"src": "17071:153:34"
															},
															"nativeSrc": "17071:153:34",
															"nodeType": "YulExpressionStatement",
															"src": "17071:153:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr__fromStack_reversed",
												"nativeSrc": "16844:387:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16996:9:34",
														"nodeType": "YulTypedName",
														"src": "16996:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17008:6:34",
														"nodeType": "YulTypedName",
														"src": "17008:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17019:4:34",
														"nodeType": "YulTypedName",
														"src": "17019:4:34",
														"type": ""
													}
												],
												"src": "16844:387:34"
											},
											{
												"body": {
													"nativeSrc": "17348:552:34",
													"nodeType": "YulBlock",
													"src": "17348:552:34",
													"statements": [
														{
															"body": {
																"nativeSrc": "17394:83:34",
																"nodeType": "YulBlock",
																"src": "17394:83:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17396:77:34",
																				"nodeType": "YulIdentifier",
																				"src": "17396:77:34"
																			},
																			"nativeSrc": "17396:79:34",
																			"nodeType": "YulFunctionCall",
																			"src": "17396:79:34"
																		},
																		"nativeSrc": "17396:79:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "17396:79:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17369:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "17369:7:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17378:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "17378:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17365:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "17365:3:34"
																		},
																		"nativeSrc": "17365:23:34",
																		"nodeType": "YulFunctionCall",
																		"src": "17365:23:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17390:2:34",
																		"nodeType": "YulLiteral",
																		"src": "17390:2:34",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17361:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "17361:3:34"
																},
																"nativeSrc": "17361:32:34",
																"nodeType": "YulFunctionCall",
																"src": "17361:32:34"
															},
															"nativeSrc": "17358:119:34",
															"nodeType": "YulIf",
															"src": "17358:119:34"
														},
														{
															"nativeSrc": "17487:128:34",
															"nodeType": "YulBlock",
															"src": "17487:128:34",
															"statements": [
																{
																	"nativeSrc": "17502:15:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17502:15:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17516:1:34",
																		"nodeType": "YulLiteral",
																		"src": "17516:1:34",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17506:6:34",
																			"nodeType": "YulTypedName",
																			"src": "17506:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17531:74:34",
																	"nodeType": "YulAssignment",
																	"src": "17531:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17577:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "17577:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17588:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "17588:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17573:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "17573:3:34"
																				},
																				"nativeSrc": "17573:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "17573:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17597:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "17597:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nativeSrc": "17541:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "17541:31:34"
																		},
																		"nativeSrc": "17541:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "17541:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17531:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "17531:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17625:129:34",
															"nodeType": "YulBlock",
															"src": "17625:129:34",
															"statements": [
																{
																	"nativeSrc": "17640:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17640:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17654:2:34",
																		"nodeType": "YulLiteral",
																		"src": "17654:2:34",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17644:6:34",
																			"nodeType": "YulTypedName",
																			"src": "17644:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17670:74:34",
																	"nodeType": "YulAssignment",
																	"src": "17670:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17716:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "17716:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17727:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "17727:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17712:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "17712:3:34"
																				},
																				"nativeSrc": "17712:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "17712:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17736:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "17736:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17680:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "17680:31:34"
																		},
																		"nativeSrc": "17680:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "17680:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17670:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "17670:6:34"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17764:129:34",
															"nodeType": "YulBlock",
															"src": "17764:129:34",
															"statements": [
																{
																	"nativeSrc": "17779:16:34",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17779:16:34",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17793:2:34",
																		"nodeType": "YulLiteral",
																		"src": "17793:2:34",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17783:6:34",
																			"nodeType": "YulTypedName",
																			"src": "17783:6:34",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17809:74:34",
																	"nodeType": "YulAssignment",
																	"src": "17809:74:34",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17855:9:34",
																						"nodeType": "YulIdentifier",
																						"src": "17855:9:34"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17866:6:34",
																						"nodeType": "YulIdentifier",
																						"src": "17866:6:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17851:3:34",
																					"nodeType": "YulIdentifier",
																					"src": "17851:3:34"
																				},
																				"nativeSrc": "17851:22:34",
																				"nodeType": "YulFunctionCall",
																				"src": "17851:22:34"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17875:7:34",
																				"nodeType": "YulIdentifier",
																				"src": "17875:7:34"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17819:31:34",
																			"nodeType": "YulIdentifier",
																			"src": "17819:31:34"
																		},
																		"nativeSrc": "17819:64:34",
																		"nodeType": "YulFunctionCall",
																		"src": "17819:64:34"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17809:6:34",
																			"nodeType": "YulIdentifier",
																			"src": "17809:6:34"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory",
												"nativeSrc": "17237:663:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17302:9:34",
														"nodeType": "YulTypedName",
														"src": "17302:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17313:7:34",
														"nodeType": "YulTypedName",
														"src": "17313:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17325:6:34",
														"nodeType": "YulTypedName",
														"src": "17325:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17333:6:34",
														"nodeType": "YulTypedName",
														"src": "17333:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17341:6:34",
														"nodeType": "YulTypedName",
														"src": "17341:6:34",
														"type": ""
													}
												],
												"src": "17237:663:34"
											},
											{
												"body": {
													"nativeSrc": "18032:206:34",
													"nodeType": "YulBlock",
													"src": "18032:206:34",
													"statements": [
														{
															"nativeSrc": "18042:26:34",
															"nodeType": "YulAssignment",
															"src": "18042:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18054:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "18054:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18065:2:34",
																		"nodeType": "YulLiteral",
																		"src": "18065:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18050:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "18050:3:34"
																},
																"nativeSrc": "18050:18:34",
																"nodeType": "YulFunctionCall",
																"src": "18050:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18042:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "18042:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18122:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "18122:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18135:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "18135:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18146:1:34",
																				"nodeType": "YulLiteral",
																				"src": "18146:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18131:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "18131:3:34"
																		},
																		"nativeSrc": "18131:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "18131:17:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18078:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "18078:43:34"
																},
																"nativeSrc": "18078:71:34",
																"nodeType": "YulFunctionCall",
																"src": "18078:71:34"
															},
															"nativeSrc": "18078:71:34",
															"nodeType": "YulExpressionStatement",
															"src": "18078:71:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18203:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "18203:6:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18216:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "18216:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18227:2:34",
																				"nodeType": "YulLiteral",
																				"src": "18227:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18212:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "18212:3:34"
																		},
																		"nativeSrc": "18212:18:34",
																		"nodeType": "YulFunctionCall",
																		"src": "18212:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18159:43:34",
																	"nodeType": "YulIdentifier",
																	"src": "18159:43:34"
																},
																"nativeSrc": "18159:72:34",
																"nodeType": "YulFunctionCall",
																"src": "18159:72:34"
															},
															"nativeSrc": "18159:72:34",
															"nodeType": "YulExpressionStatement",
															"src": "18159:72:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17906:332:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17996:9:34",
														"nodeType": "YulTypedName",
														"src": "17996:9:34",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18008:6:34",
														"nodeType": "YulTypedName",
														"src": "18008:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18016:6:34",
														"nodeType": "YulTypedName",
														"src": "18016:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18027:4:34",
														"nodeType": "YulTypedName",
														"src": "18027:4:34",
														"type": ""
													}
												],
												"src": "17906:332:34"
											},
											{
												"body": {
													"nativeSrc": "18302:40:34",
													"nodeType": "YulBlock",
													"src": "18302:40:34",
													"statements": [
														{
															"nativeSrc": "18313:22:34",
															"nodeType": "YulAssignment",
															"src": "18313:22:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18329:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "18329:5:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18323:5:34",
																	"nodeType": "YulIdentifier",
																	"src": "18323:5:34"
																},
																"nativeSrc": "18323:12:34",
																"nodeType": "YulFunctionCall",
																"src": "18323:12:34"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18313:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "18313:6:34"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18244:98:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18285:5:34",
														"nodeType": "YulTypedName",
														"src": "18285:5:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18295:6:34",
														"nodeType": "YulTypedName",
														"src": "18295:6:34",
														"type": ""
													}
												],
												"src": "18244:98:34"
											},
											{
												"body": {
													"nativeSrc": "18461:34:34",
													"nodeType": "YulBlock",
													"src": "18461:34:34",
													"statements": [
														{
															"nativeSrc": "18471:18:34",
															"nodeType": "YulAssignment",
															"src": "18471:18:34",
															"value": {
																"name": "pos",
																"nativeSrc": "18486:3:34",
																"nodeType": "YulIdentifier",
																"src": "18486:3:34"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18471:11:34",
																	"nodeType": "YulIdentifier",
																	"src": "18471:11:34"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18348:147:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18433:3:34",
														"nodeType": "YulTypedName",
														"src": "18433:3:34",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18438:6:34",
														"nodeType": "YulTypedName",
														"src": "18438:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18449:11:34",
														"nodeType": "YulTypedName",
														"src": "18449:11:34",
														"type": ""
													}
												],
												"src": "18348:147:34"
											},
											{
												"body": {
													"nativeSrc": "18563:184:34",
													"nodeType": "YulBlock",
													"src": "18563:184:34",
													"statements": [
														{
															"nativeSrc": "18573:10:34",
															"nodeType": "YulVariableDeclaration",
															"src": "18573:10:34",
															"value": {
																"kind": "number",
																"nativeSrc": "18582:1:34",
																"nodeType": "YulLiteral",
																"src": "18582:1:34",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "18577:1:34",
																	"nodeType": "YulTypedName",
																	"src": "18577:1:34",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18642:63:34",
																"nodeType": "YulBlock",
																"src": "18642:63:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "18667:3:34",
																							"nodeType": "YulIdentifier",
																							"src": "18667:3:34"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "18672:1:34",
																							"nodeType": "YulIdentifier",
																							"src": "18672:1:34"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18663:3:34",
																						"nodeType": "YulIdentifier",
																						"src": "18663:3:34"
																					},
																					"nativeSrc": "18663:11:34",
																					"nodeType": "YulFunctionCall",
																					"src": "18663:11:34"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "18686:3:34",
																									"nodeType": "YulIdentifier",
																									"src": "18686:3:34"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "18691:1:34",
																									"nodeType": "YulIdentifier",
																									"src": "18691:1:34"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18682:3:34",
																								"nodeType": "YulIdentifier",
																								"src": "18682:3:34"
																							},
																							"nativeSrc": "18682:11:34",
																							"nodeType": "YulFunctionCall",
																							"src": "18682:11:34"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "18676:5:34",
																						"nodeType": "YulIdentifier",
																						"src": "18676:5:34"
																					},
																					"nativeSrc": "18676:18:34",
																					"nodeType": "YulFunctionCall",
																					"src": "18676:18:34"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18656:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "18656:6:34"
																			},
																			"nativeSrc": "18656:39:34",
																			"nodeType": "YulFunctionCall",
																			"src": "18656:39:34"
																		},
																		"nativeSrc": "18656:39:34",
																		"nodeType": "YulExpressionStatement",
																		"src": "18656:39:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "18603:1:34",
																		"nodeType": "YulIdentifier",
																		"src": "18603:1:34"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18606:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "18606:6:34"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18600:2:34",
																	"nodeType": "YulIdentifier",
																	"src": "18600:2:34"
																},
																"nativeSrc": "18600:13:34",
																"nodeType": "YulFunctionCall",
																"src": "18600:13:34"
															},
															"nativeSrc": "18592:113:34",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18614:19:34",
																"nodeType": "YulBlock",
																"src": "18614:19:34",
																"statements": [
																	{
																		"nativeSrc": "18616:15:34",
																		"nodeType": "YulAssignment",
																		"src": "18616:15:34",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "18625:1:34",
																					"nodeType": "YulIdentifier",
																					"src": "18625:1:34"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18628:2:34",
																					"nodeType": "YulLiteral",
																					"src": "18628:2:34",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18621:3:34",
																				"nodeType": "YulIdentifier",
																				"src": "18621:3:34"
																			},
																			"nativeSrc": "18621:10:34",
																			"nodeType": "YulFunctionCall",
																			"src": "18621:10:34"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "18616:1:34",
																				"nodeType": "YulIdentifier",
																				"src": "18616:1:34"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18596:3:34",
																"nodeType": "YulBlock",
																"src": "18596:3:34",
																"statements": []
															},
															"src": "18592:113:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "18725:3:34",
																				"nodeType": "YulIdentifier",
																				"src": "18725:3:34"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "18730:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "18730:6:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18721:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "18721:3:34"
																		},
																		"nativeSrc": "18721:16:34",
																		"nodeType": "YulFunctionCall",
																		"src": "18721:16:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18739:1:34",
																		"nodeType": "YulLiteral",
																		"src": "18739:1:34",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18714:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "18714:6:34"
																},
																"nativeSrc": "18714:27:34",
																"nodeType": "YulFunctionCall",
																"src": "18714:27:34"
															},
															"nativeSrc": "18714:27:34",
															"nodeType": "YulExpressionStatement",
															"src": "18714:27:34"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "18501:246:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "18545:3:34",
														"nodeType": "YulTypedName",
														"src": "18545:3:34",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "18550:3:34",
														"nodeType": "YulTypedName",
														"src": "18550:3:34",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18555:6:34",
														"nodeType": "YulTypedName",
														"src": "18555:6:34",
														"type": ""
													}
												],
												"src": "18501:246:34"
											},
											{
												"body": {
													"nativeSrc": "18861:278:34",
													"nodeType": "YulBlock",
													"src": "18861:278:34",
													"statements": [
														{
															"nativeSrc": "18871:52:34",
															"nodeType": "YulVariableDeclaration",
															"src": "18871:52:34",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18917:5:34",
																		"nodeType": "YulIdentifier",
																		"src": "18917:5:34"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18885:31:34",
																	"nodeType": "YulIdentifier",
																	"src": "18885:31:34"
																},
																"nativeSrc": "18885:38:34",
																"nodeType": "YulFunctionCall",
																"src": "18885:38:34"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18875:6:34",
																	"nodeType": "YulTypedName",
																	"src": "18875:6:34",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18932:95:34",
															"nodeType": "YulAssignment",
															"src": "18932:95:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19015:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19015:3:34"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19020:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "19020:6:34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18939:75:34",
																	"nodeType": "YulIdentifier",
																	"src": "18939:75:34"
																},
																"nativeSrc": "18939:88:34",
																"nodeType": "YulFunctionCall",
																"src": "18939:88:34"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18932:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "18932:3:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19075:5:34",
																				"nodeType": "YulIdentifier",
																				"src": "19075:5:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19082:4:34",
																				"nodeType": "YulLiteral",
																				"src": "19082:4:34",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19071:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "19071:3:34"
																		},
																		"nativeSrc": "19071:16:34",
																		"nodeType": "YulFunctionCall",
																		"src": "19071:16:34"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19089:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19089:3:34"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19094:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "19094:6:34"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19036:34:34",
																	"nodeType": "YulIdentifier",
																	"src": "19036:34:34"
																},
																"nativeSrc": "19036:65:34",
																"nodeType": "YulFunctionCall",
																"src": "19036:65:34"
															},
															"nativeSrc": "19036:65:34",
															"nodeType": "YulExpressionStatement",
															"src": "19036:65:34"
														},
														{
															"nativeSrc": "19110:23:34",
															"nodeType": "YulAssignment",
															"src": "19110:23:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19121:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19121:3:34"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19126:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "19126:6:34"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19117:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "19117:3:34"
																},
																"nativeSrc": "19117:16:34",
																"nodeType": "YulFunctionCall",
																"src": "19117:16:34"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19110:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "19110:3:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18753:386:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18842:5:34",
														"nodeType": "YulTypedName",
														"src": "18842:5:34",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18849:3:34",
														"nodeType": "YulTypedName",
														"src": "18849:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18857:3:34",
														"nodeType": "YulTypedName",
														"src": "18857:3:34",
														"type": ""
													}
												],
												"src": "18753:386:34"
											},
											{
												"body": {
													"nativeSrc": "19279:137:34",
													"nodeType": "YulBlock",
													"src": "19279:137:34",
													"statements": [
														{
															"nativeSrc": "19290:100:34",
															"nodeType": "YulAssignment",
															"src": "19290:100:34",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19377:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "19377:6:34"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19386:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19386:3:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19297:79:34",
																	"nodeType": "YulIdentifier",
																	"src": "19297:79:34"
																},
																"nativeSrc": "19297:93:34",
																"nodeType": "YulFunctionCall",
																"src": "19297:93:34"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19290:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "19290:3:34"
																}
															]
														},
														{
															"nativeSrc": "19400:10:34",
															"nodeType": "YulAssignment",
															"src": "19400:10:34",
															"value": {
																"name": "pos",
																"nativeSrc": "19407:3:34",
																"nodeType": "YulIdentifier",
																"src": "19407:3:34"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19400:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "19400:3:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19145:271:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19258:3:34",
														"nodeType": "YulTypedName",
														"src": "19258:3:34",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19264:6:34",
														"nodeType": "YulTypedName",
														"src": "19264:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19275:3:34",
														"nodeType": "YulTypedName",
														"src": "19275:3:34",
														"type": ""
													}
												],
												"src": "19145:271:34"
											},
											{
												"body": {
													"nativeSrc": "19518:73:34",
													"nodeType": "YulBlock",
													"src": "19518:73:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19535:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19535:3:34"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19540:6:34",
																		"nodeType": "YulIdentifier",
																		"src": "19540:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19528:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "19528:6:34"
																},
																"nativeSrc": "19528:19:34",
																"nodeType": "YulFunctionCall",
																"src": "19528:19:34"
															},
															"nativeSrc": "19528:19:34",
															"nodeType": "YulExpressionStatement",
															"src": "19528:19:34"
														},
														{
															"nativeSrc": "19556:29:34",
															"nodeType": "YulAssignment",
															"src": "19556:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19575:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19575:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19580:4:34",
																		"nodeType": "YulLiteral",
																		"src": "19580:4:34",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19571:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "19571:3:34"
																},
																"nativeSrc": "19571:14:34",
																"nodeType": "YulFunctionCall",
																"src": "19571:14:34"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19556:11:34",
																	"nodeType": "YulIdentifier",
																	"src": "19556:11:34"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "19422:169:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19490:3:34",
														"nodeType": "YulTypedName",
														"src": "19490:3:34",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19495:6:34",
														"nodeType": "YulTypedName",
														"src": "19495:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19506:11:34",
														"nodeType": "YulTypedName",
														"src": "19506:11:34",
														"type": ""
													}
												],
												"src": "19422:169:34"
											},
											{
												"body": {
													"nativeSrc": "19703:46:34",
													"nodeType": "YulBlock",
													"src": "19703:46:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19725:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "19725:6:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19733:1:34",
																				"nodeType": "YulLiteral",
																				"src": "19733:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19721:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "19721:3:34"
																		},
																		"nativeSrc": "19721:14:34",
																		"nodeType": "YulFunctionCall",
																		"src": "19721:14:34"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "19737:4:34",
																		"nodeType": "YulLiteral",
																		"src": "19737:4:34",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19714:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "19714:6:34"
																},
																"nativeSrc": "19714:28:34",
																"nodeType": "YulFunctionCall",
																"src": "19714:28:34"
															},
															"nativeSrc": "19714:28:34",
															"nodeType": "YulExpressionStatement",
															"src": "19714:28:34"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "19597:152:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19695:6:34",
														"nodeType": "YulTypedName",
														"src": "19695:6:34",
														"type": ""
													}
												],
												"src": "19597:152:34"
											},
											{
												"body": {
													"nativeSrc": "19901:219:34",
													"nodeType": "YulBlock",
													"src": "19901:219:34",
													"statements": [
														{
															"nativeSrc": "19911:73:34",
															"nodeType": "YulAssignment",
															"src": "19911:73:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19977:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "19977:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19982:1:34",
																		"nodeType": "YulLiteral",
																		"src": "19982:1:34",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19918:58:34",
																	"nodeType": "YulIdentifier",
																	"src": "19918:58:34"
																},
																"nativeSrc": "19918:66:34",
																"nodeType": "YulFunctionCall",
																"src": "19918:66:34"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19911:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "19911:3:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20082:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "20082:3:34"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "19993:88:34",
																	"nodeType": "YulIdentifier",
																	"src": "19993:88:34"
																},
																"nativeSrc": "19993:93:34",
																"nodeType": "YulFunctionCall",
																"src": "19993:93:34"
															},
															"nativeSrc": "19993:93:34",
															"nodeType": "YulExpressionStatement",
															"src": "19993:93:34"
														},
														{
															"nativeSrc": "20095:19:34",
															"nodeType": "YulAssignment",
															"src": "20095:19:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20106:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "20106:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20111:2:34",
																		"nodeType": "YulLiteral",
																		"src": "20111:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20102:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "20102:3:34"
																},
																"nativeSrc": "20102:12:34",
																"nodeType": "YulFunctionCall",
																"src": "20102:12:34"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20095:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "20095:3:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19755:365:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19889:3:34",
														"nodeType": "YulTypedName",
														"src": "19889:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19897:3:34",
														"nodeType": "YulTypedName",
														"src": "19897:3:34",
														"type": ""
													}
												],
												"src": "19755:365:34"
											},
											{
												"body": {
													"nativeSrc": "20297:248:34",
													"nodeType": "YulBlock",
													"src": "20297:248:34",
													"statements": [
														{
															"nativeSrc": "20307:26:34",
															"nodeType": "YulAssignment",
															"src": "20307:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20319:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "20319:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20330:2:34",
																		"nodeType": "YulLiteral",
																		"src": "20330:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20315:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "20315:3:34"
																},
																"nativeSrc": "20315:18:34",
																"nodeType": "YulFunctionCall",
																"src": "20315:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20307:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "20307:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20354:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "20354:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20365:1:34",
																				"nodeType": "YulLiteral",
																				"src": "20365:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20350:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "20350:3:34"
																		},
																		"nativeSrc": "20350:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "20350:17:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20373:4:34",
																				"nodeType": "YulIdentifier",
																				"src": "20373:4:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20379:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "20379:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20369:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "20369:3:34"
																		},
																		"nativeSrc": "20369:20:34",
																		"nodeType": "YulFunctionCall",
																		"src": "20369:20:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20343:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "20343:6:34"
																},
																"nativeSrc": "20343:47:34",
																"nodeType": "YulFunctionCall",
																"src": "20343:47:34"
															},
															"nativeSrc": "20343:47:34",
															"nodeType": "YulExpressionStatement",
															"src": "20343:47:34"
														},
														{
															"nativeSrc": "20399:139:34",
															"nodeType": "YulAssignment",
															"src": "20399:139:34",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20533:4:34",
																		"nodeType": "YulIdentifier",
																		"src": "20533:4:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20407:124:34",
																	"nodeType": "YulIdentifier",
																	"src": "20407:124:34"
																},
																"nativeSrc": "20407:131:34",
																"nodeType": "YulFunctionCall",
																"src": "20407:131:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20399:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "20399:4:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20126:419:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20277:9:34",
														"nodeType": "YulTypedName",
														"src": "20277:9:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20292:4:34",
														"nodeType": "YulTypedName",
														"src": "20292:4:34",
														"type": ""
													}
												],
												"src": "20126:419:34"
											},
											{
												"body": {
													"nativeSrc": "20657:46:34",
													"nodeType": "YulBlock",
													"src": "20657:46:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20679:6:34",
																				"nodeType": "YulIdentifier",
																				"src": "20679:6:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20687:1:34",
																				"nodeType": "YulLiteral",
																				"src": "20687:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20675:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "20675:3:34"
																		},
																		"nativeSrc": "20675:14:34",
																		"nodeType": "YulFunctionCall",
																		"src": "20675:14:34"
																	},
																	{
																		"hexValue": "5354",
																		"kind": "string",
																		"nativeSrc": "20691:4:34",
																		"nodeType": "YulLiteral",
																		"src": "20691:4:34",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20668:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "20668:6:34"
																},
																"nativeSrc": "20668:28:34",
																"nodeType": "YulFunctionCall",
																"src": "20668:28:34"
															},
															"nativeSrc": "20668:28:34",
															"nodeType": "YulExpressionStatement",
															"src": "20668:28:34"
														}
													]
												},
												"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
												"nativeSrc": "20551:152:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20649:6:34",
														"nodeType": "YulTypedName",
														"src": "20649:6:34",
														"type": ""
													}
												],
												"src": "20551:152:34"
											},
											{
												"body": {
													"nativeSrc": "20855:219:34",
													"nodeType": "YulBlock",
													"src": "20855:219:34",
													"statements": [
														{
															"nativeSrc": "20865:73:34",
															"nodeType": "YulAssignment",
															"src": "20865:73:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20931:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "20931:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20936:1:34",
																		"nodeType": "YulLiteral",
																		"src": "20936:1:34",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20872:58:34",
																	"nodeType": "YulIdentifier",
																	"src": "20872:58:34"
																},
																"nativeSrc": "20872:66:34",
																"nodeType": "YulFunctionCall",
																"src": "20872:66:34"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20865:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "20865:3:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21036:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "21036:3:34"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																	"nativeSrc": "20947:88:34",
																	"nodeType": "YulIdentifier",
																	"src": "20947:88:34"
																},
																"nativeSrc": "20947:93:34",
																"nodeType": "YulFunctionCall",
																"src": "20947:93:34"
															},
															"nativeSrc": "20947:93:34",
															"nodeType": "YulExpressionStatement",
															"src": "20947:93:34"
														},
														{
															"nativeSrc": "21049:19:34",
															"nodeType": "YulAssignment",
															"src": "21049:19:34",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21060:3:34",
																		"nodeType": "YulIdentifier",
																		"src": "21060:3:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21065:2:34",
																		"nodeType": "YulLiteral",
																		"src": "21065:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21056:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "21056:3:34"
																},
																"nativeSrc": "21056:12:34",
																"nodeType": "YulFunctionCall",
																"src": "21056:12:34"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21049:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "21049:3:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20709:365:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20843:3:34",
														"nodeType": "YulTypedName",
														"src": "20843:3:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20851:3:34",
														"nodeType": "YulTypedName",
														"src": "20851:3:34",
														"type": ""
													}
												],
												"src": "20709:365:34"
											},
											{
												"body": {
													"nativeSrc": "21251:248:34",
													"nodeType": "YulBlock",
													"src": "21251:248:34",
													"statements": [
														{
															"nativeSrc": "21261:26:34",
															"nodeType": "YulAssignment",
															"src": "21261:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21273:9:34",
																		"nodeType": "YulIdentifier",
																		"src": "21273:9:34"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21284:2:34",
																		"nodeType": "YulLiteral",
																		"src": "21284:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21269:3:34",
																	"nodeType": "YulIdentifier",
																	"src": "21269:3:34"
																},
																"nativeSrc": "21269:18:34",
																"nodeType": "YulFunctionCall",
																"src": "21269:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21261:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "21261:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21308:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "21308:9:34"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21319:1:34",
																				"nodeType": "YulLiteral",
																				"src": "21319:1:34",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21304:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "21304:3:34"
																		},
																		"nativeSrc": "21304:17:34",
																		"nodeType": "YulFunctionCall",
																		"src": "21304:17:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21327:4:34",
																				"nodeType": "YulIdentifier",
																				"src": "21327:4:34"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21333:9:34",
																				"nodeType": "YulIdentifier",
																				"src": "21333:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21323:3:34",
																			"nodeType": "YulIdentifier",
																			"src": "21323:3:34"
																		},
																		"nativeSrc": "21323:20:34",
																		"nodeType": "YulFunctionCall",
																		"src": "21323:20:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21297:6:34",
																	"nodeType": "YulIdentifier",
																	"src": "21297:6:34"
																},
																"nativeSrc": "21297:47:34",
																"nodeType": "YulFunctionCall",
																"src": "21297:47:34"
															},
															"nativeSrc": "21297:47:34",
															"nodeType": "YulExpressionStatement",
															"src": "21297:47:34"
														},
														{
															"nativeSrc": "21353:139:34",
															"nodeType": "YulAssignment",
															"src": "21353:139:34",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21487:4:34",
																		"nodeType": "YulIdentifier",
																		"src": "21487:4:34"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21361:124:34",
																	"nodeType": "YulIdentifier",
																	"src": "21361:124:34"
																},
																"nativeSrc": "21361:131:34",
																"nodeType": "YulFunctionCall",
																"src": "21361:131:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21353:4:34",
																	"nodeType": "YulIdentifier",
																	"src": "21353:4:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21080:419:34",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21231:9:34",
														"nodeType": "YulTypedName",
														"src": "21231:9:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21246:4:34",
														"nodeType": "YulTypedName",
														"src": "21246:4:34",
														"type": ""
													}
												],
												"src": "21080:419:34"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct AddLiquidity.MintNewPositionParams\n    function abi_decode_t_struct$_MintNewPositionParams_$61_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 160) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_MintNewPositionParams_$61_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_MintNewPositionParams_$61_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint128__to_t_address_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_INonfungiblePositionManager_$1270_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_INonfungiblePositionManager_$1270_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INonfungiblePositionManager_$1270_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_INonfungiblePositionManager_$1270__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INonfungiblePositionManager_$1270_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_uint24(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function negate_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_int24_to_t_int24(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct INonfungiblePositionManager.MintParams -> struct INonfungiblePositionManager.MintParams\n    function abi_encode_t_struct$_MintParams_$1180_memory_ptr_to_t_struct$_MintParams_$1180_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // token0\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token1\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tickLower\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tickUpper\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amount0Desired\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amount1Desired\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // amount0Min\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // amount1Min\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_MintParams_$1180_memory_ptr__to_t_struct$_MintParams_$1180_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_struct$_MintParams_$1180_memory_ptr_to_t_struct$_MintParams_$1180_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    // struct INonfungiblePositionManager.IncreaseLiquidityParams -> struct INonfungiblePositionManager.IncreaseLiquidityParams\n    function abi_encode_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount0Desired\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount1Desired\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount0Min\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amount1Min\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr__to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_to_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"ST\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 34,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"27": [
									{
										"length": 32,
										"start": 657
									},
									{
										"length": 32,
										"start": 722
									},
									{
										"length": 32,
										"start": 1067
									},
									{
										"length": 32,
										"start": 1255
									},
									{
										"length": 32,
										"start": 1344
									},
									{
										"length": 32,
										"start": 1483
									},
									{
										"length": 32,
										"start": 1740
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x591C7191 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x617D6D6E EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x11D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST POP DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x239 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x255 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST POP PUSH2 0x2BA DUP6 PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH32 0x0 DUP8 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x2FB DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH32 0x0 DUP8 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x3D3 SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E TIMESTAMP PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88316456 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP DUP3 SWAP8 POP DUP4 SWAP9 POP POP POP POP POP DUP6 PUSH1 0x60 ADD CALLDATALOAD DUP4 LT ISZERO PUSH2 0x52A JUMPI PUSH2 0x50C DUP2 PUSH0 ADD MLOAD PUSH32 0x0 PUSH0 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x529 DUP2 PUSH0 ADD MLOAD CALLER DUP6 DUP10 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP6 PUSH1 0x80 ADD CALLDATALOAD DUP3 LT ISZERO PUSH2 0x584 JUMPI PUSH2 0x565 DUP2 PUSH1 0x20 ADD MLOAD PUSH32 0x0 PUSH0 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x583 DUP2 PUSH1 0x20 ADD MLOAD CALLER DUP5 DUP10 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E TIMESTAMP PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x219F5D17 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x722 SWAP3 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7F7 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x7F6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x871 SWAP3 SWAP2 SWAP1 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x919 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x946 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x945 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97C SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x9D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9E8 DUP2 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 DUP2 PUSH2 0x9EE JUMP JUMPDEST DUP2 EQ PUSH2 0xA0A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1B DUP2 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0xA21 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA5E PUSH2 0xA25 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7A PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9A PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAA8 DUP9 DUP3 DUP10 ADD PUSH2 0x9DA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xAB9 DUP9 DUP3 DUP10 ADD PUSH2 0x9DA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xACA DUP9 DUP3 DUP10 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAEB JUMPI PUSH2 0xAEA PUSH2 0x990 JUMP JUMPDEST JUMPDEST PUSH2 0xAF7 DUP9 DUP3 DUP10 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xB06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB53 PUSH0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB71 PUSH2 0xB59 JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB90 JUMPI PUSH2 0xB8F PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB9D DUP5 DUP3 DUP6 ADD PUSH2 0xB5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0x9EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD9 DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xBF2 PUSH0 DUP4 ADD DUP8 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xC0C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0xC19 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH2 0xC38 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC46 DUP7 DUP3 DUP8 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC57 DUP7 DUP3 DUP8 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC68 DUP7 DUP3 DUP8 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xC9F PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCAD DUP5 DUP3 DUP6 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBF DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xCE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD0F PUSH2 0xD0A PUSH2 0xD05 DUP5 PUSH2 0x994 JUMP JUMPDEST PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD20 DUP3 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD31 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5A PUSH0 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0x9DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD9E PUSH0 DUP4 ADD DUP7 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xDAB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xDB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD4 DUP2 PUSH2 0xDC0 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDEF DUP2 PUSH2 0xDCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE17 DUP5 DUP3 DUP6 ADD PUSH2 0xDE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP2 EQ PUSH2 0xE41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE52 DUP2 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH2 0xE6C PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE7A DUP5 DUP3 DUP6 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEC6 DUP3 PUSH2 0xE83 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0xE8F JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF0C DUP3 PUSH2 0x9EE JUMP JUMPDEST SWAP2 POP PUSH2 0xF17 DUP4 PUSH2 0x9EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF2F JUMPI PUSH2 0xF2E PUSH2 0xE8F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3E DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF4D DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF5C DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0x9EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xF86 PUSH0 DUP6 ADD DUP3 PUSH2 0xF35 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF99 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF35 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFAC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF44 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFBF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF53 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xFD2 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF53 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xFE5 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xFF8 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x100B PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x1020 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x1035 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0xF35 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x104A PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x1064 PUSH0 DUP4 ADD DUP5 PUSH2 0xF71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1078 DUP2 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1091 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A2 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10CD DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x10DE DUP8 DUP3 DUP9 ADD PUSH2 0x1094 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x10EF DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1100 DUP8 DUP3 DUP9 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH2 0x1116 DUP3 PUSH2 0x9EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1121 DUP4 PUSH2 0x9EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0xE8F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1153 PUSH0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1166 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1179 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x118C PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x119F PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x11B2 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x11CB PUSH0 DUP4 ADD DUP5 PUSH2 0x113F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E7 PUSH2 0x98C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F5 DUP7 DUP3 DUP8 ADD PUSH2 0x1094 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1206 DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1217 DUP7 DUP3 DUP8 ADD PUSH2 0x106A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1234 PUSH0 DUP4 ADD DUP6 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x1241 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1279 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x125E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x128E DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x1298 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x12A8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12BF DUP3 DUP5 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x130E PUSH1 0x2 DUP4 PUSH2 0x12CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1319 DUP3 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x133B DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1376 PUSH1 0x2 DUP4 PUSH2 0x12CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 DUP3 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A3 DUP2 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xC86616149B6354661DB4527E871DA906CE639621 PUSH4 0xAE0FAEDC EXTCODESIZE 0x24 DIV 0x4E SHL 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "422:5332:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1504:2625;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4137:701;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;725:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;469:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4846:257;5002:6;5065:30;;;5058:37;;4846:257;;;;;;;:::o;1504:2625::-;1628:15;1658:17;1690:15;1720;1773:10;:17;;;;;;;;;;:::i;:::-;1766:38;;;1805:10;1825:4;1832:10;:23;;;1766:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1874:10;:17;;;;;;;;;;:::i;:::-;1867:38;;;1906:10;1926:4;1933:10;:23;;;1867:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:157;2052:10;:17;;;;;;;;;;:::i;:::-;2092:26;2134:10;:23;;;2011:26;:157::i;:::-;2179;2220:10;:17;;;;;;;;;;:::i;:::-;2260:26;2302:10;:23;;;2179:26;:157::i;:::-;2349:65;2417:548;;;;;;;;2483:10;:17;;;;;;;;;;:::i;:::-;2417:548;;;;;;2527:10;:17;;;;;;;;;;:::i;:::-;2417:548;;;;;;2568:10;:18;;;;;;;;;;:::i;:::-;2417:548;;;;;;484:7:32;2417:548:1;;;;;;484:7:32;646:9;;;:::i;:::-;2417:548:1;;;;;;2715:10;:23;;;2417:548;;;;2773:10;:23;;;2417:548;;;;2827:1;2417:548;;;;2859:1;2417:548;;;;2890:10;2417:548;;;;;;2947:2;2929:15;:20;;;;:::i;:::-;2417:548;;;2349:616;;3150:26;:31;;;3182:6;3150:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3109:80;;;;;;;;;;;;;;;;3352:10;:23;;;3342:7;:33;3338:386;;;3392:147;3437:6;:13;;;3477:26;3523:1;3392:26;:147::i;:::-;3623:89;3651:6;:13;;;3666:10;3704:7;3678:10;:23;;;:33;;;;:::i;:::-;3623:27;:89::i;:::-;3338:386;3750:10;:23;;;3740:7;:33;3736:386;;;3790:147;3835:6;:13;;;3875:26;3921:1;3790:26;:147::i;:::-;4021:89;4049:6;:13;;;4064:10;4102:7;4076:10;:23;;;:33;;;;:::i;:::-;4021:27;:89::i;:::-;3736:386;1752:2377;1504:2625;;;;;:::o;4137:701::-;4317:17;4362:65;4443:306;;;;;;;;4523:7;4443:306;;;;4565:10;4443:306;;;;4610:10;4443:306;;;;4651:1;4443:306;;;;4683:1;4443:306;;;;4731:2;4713:15;:20;;;;:::i;:::-;4443:306;;;4362:387;;4778:26;:44;;;4823:6;4778:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4762:68;;;;;;;4351:487;4137:701;;;;;:::o;725:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;469:71::-;;;:::o;1892:314:33:-;2010:12;2024:17;2045:5;:10;;2079:23;;;2104:2;2108:5;2056:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2045:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:106;;;;2134:7;:57;;;;;2161:1;2146:4;:11;:16;:44;;;;2177:4;2166:24;;;;;;;;;;;;:::i;:::-;2146:44;2134:57;2126:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1998:208;;1892:314;;;:::o;1216:316::-;1335:12;1349:17;1370:5;:10;;1404:24;;;1430:2;1434:5;1381:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1370:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1460:7;:57;;;;;1487:1;1472:4;:11;:16;:44;;;;1503:4;1492:24;;;;;;;;;;;;:::i;:::-;1472:44;1460:57;1452:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1323:209;;1216:316;;;:::o;88:117:34:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o;3606:117::-;3715:1;3712;3705:12;3778:244;3863:5;3904:3;3895:6;3890:3;3886:16;3882:26;3879:113;;;3911:79;;:::i;:::-;3879:113;4010:6;4001:15;;3778:244;;;;:::o;4028:408::-;4126:6;4175:3;4163:9;4154:7;4150:23;4146:33;4143:120;;;4182:79;;:::i;:::-;4143:120;4302:1;4327:92;4411:7;4402:6;4391:9;4387:22;4327:92;:::i;:::-;4317:102;;4273:156;4028:408;;;;:::o;4442:118::-;4529:24;4547:5;4529:24;:::i;:::-;4524:3;4517:37;4442:118;;:::o;4566:::-;4603:7;4643:34;4636:5;4632:46;4621:57;;4566:118;;;:::o;4690:::-;4777:24;4795:5;4777:24;:::i;:::-;4772:3;4765:37;4690:118;;:::o;4814:553::-;4991:4;5029:3;5018:9;5014:19;5006:27;;5043:71;5111:1;5100:9;5096:17;5087:6;5043:71;:::i;:::-;5124:72;5192:2;5181:9;5177:18;5168:6;5124:72;:::i;:::-;5206;5274:2;5263:9;5259:18;5250:6;5206:72;:::i;:::-;5288;5356:2;5345:9;5341:18;5332:6;5288:72;:::i;:::-;4814:553;;;;;;;:::o;5373:619::-;5450:6;5458;5466;5515:2;5503:9;5494:7;5490:23;5486:32;5483:119;;;5521:79;;:::i;:::-;5483:119;5641:1;5666:53;5711:7;5702:6;5691:9;5687:22;5666:53;:::i;:::-;5656:63;;5612:117;5768:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;:::i;:::-;5784:63;;5739:118;5896:2;5922:53;5967:7;5958:6;5947:9;5943:22;5922:53;:::i;:::-;5912:63;;5867:118;5373:619;;;;;:::o;5998:222::-;6091:4;6129:2;6118:9;6114:18;6106:26;;6142:71;6210:1;6199:9;6195:17;6186:6;6142:71;:::i;:::-;5998:222;;;;:::o;6226:329::-;6285:6;6334:2;6322:9;6313:7;6309:23;6305:32;6302:119;;;6340:79;;:::i;:::-;6302:119;6460:1;6485:53;6530:7;6521:6;6510:9;6506:22;6485:53;:::i;:::-;6475:63;;6431:117;6226:329;;;;:::o;6561:118::-;6648:24;6666:5;6648:24;:::i;:::-;6643:3;6636:37;6561:118;;:::o;6685:332::-;6806:4;6844:2;6833:9;6829:18;6821:26;;6857:71;6925:1;6914:9;6910:17;6901:6;6857:71;:::i;:::-;6938:72;7006:2;6995:9;6991:18;6982:6;6938:72;:::i;:::-;6685:332;;;;;:::o;7023:60::-;7051:3;7072:5;7065:12;;7023:60;;;:::o;7089:142::-;7139:9;7172:53;7190:34;7199:24;7217:5;7199:24;:::i;:::-;7190:34;:::i;:::-;7172:53;:::i;:::-;7159:66;;7089:142;;;:::o;7237:126::-;7287:9;7320:37;7351:5;7320:37;:::i;:::-;7307:50;;7237:126;;;:::o;7369:162::-;7455:9;7488:37;7519:5;7488:37;:::i;:::-;7475:50;;7369:162;;;:::o;7537:203::-;7660:73;7727:5;7660:73;:::i;:::-;7655:3;7648:86;7537:203;;:::o;7746:294::-;7875:4;7913:2;7902:9;7898:18;7890:26;;7926:107;8030:1;8019:9;8015:17;8006:6;7926:107;:::i;:::-;7746:294;;;;:::o;8046:329::-;8105:6;8154:2;8142:9;8133:7;8129:23;8125:32;8122:119;;;8160:79;;:::i;:::-;8122:119;8280:1;8305:53;8350:7;8341:6;8330:9;8326:22;8305:53;:::i;:::-;8295:63;;8251:117;8046:329;;;;:::o;8381:442::-;8530:4;8568:2;8557:9;8553:18;8545:26;;8581:71;8649:1;8638:9;8634:17;8625:6;8581:71;:::i;:::-;8662:72;8730:2;8719:9;8715:18;8706:6;8662:72;:::i;:::-;8744;8812:2;8801:9;8797:18;8788:6;8744:72;:::i;:::-;8381:442;;;;;;:::o;8829:90::-;8863:7;8906:5;8899:13;8892:21;8881:32;;8829:90;;;:::o;8925:116::-;8995:21;9010:5;8995:21;:::i;:::-;8988:5;8985:32;8975:60;;9031:1;9028;9021:12;8975:60;8925:116;:::o;9047:137::-;9101:5;9132:6;9126:13;9117:22;;9148:30;9172:5;9148:30;:::i;:::-;9047:137;;;;:::o;9190:345::-;9257:6;9306:2;9294:9;9285:7;9281:23;9277:32;9274:119;;;9312:79;;:::i;:::-;9274:119;9432:1;9457:61;9510:7;9501:6;9490:9;9486:22;9457:61;:::i;:::-;9447:71;;9403:125;9190:345;;;;:::o;9541:91::-;9577:7;9617:8;9610:5;9606:20;9595:31;;9541:91;;;:::o;9638:120::-;9710:23;9727:5;9710:23;:::i;:::-;9703:5;9700:34;9690:62;;9748:1;9745;9738:12;9690:62;9638:120;:::o;9764:137::-;9809:5;9847:6;9834:20;9825:29;;9863:32;9889:5;9863:32;:::i;:::-;9764:137;;;;:::o;9907:327::-;9965:6;10014:2;10002:9;9993:7;9989:23;9985:32;9982:119;;;10020:79;;:::i;:::-;9982:119;10140:1;10165:52;10209:7;10200:6;10189:9;10185:22;10165:52;:::i;:::-;10155:62;;10111:116;9907:327;;;;:::o;10240:90::-;10275:7;10318:5;10315:1;10304:20;10293:31;;10240:90;;;:::o;10336:180::-;10384:77;10381:1;10374:88;10481:4;10478:1;10471:15;10505:4;10502:1;10495:15;10522:226;10556:3;10579:22;10595:5;10579:22;:::i;:::-;10570:31;;10623:66;10616:5;10613:77;10610:103;;10693:18;;:::i;:::-;10610:103;10736:5;10733:1;10729:13;10722:20;;10522:226;;;:::o;10754:191::-;10794:3;10813:20;10831:1;10813:20;:::i;:::-;10808:25;;10847:20;10865:1;10847:20;:::i;:::-;10842:25;;10890:1;10887;10883:9;10876:16;;10911:3;10908:1;10905:10;10902:36;;;10918:18;;:::i;:::-;10902:36;10754:191;;;;:::o;10951:108::-;11028:24;11046:5;11028:24;:::i;:::-;11023:3;11016:37;10951:108;;:::o;11065:105::-;11140:23;11157:5;11140:23;:::i;:::-;11135:3;11128:36;11065:105;;:::o;11176:102::-;11249:22;11265:5;11249:22;:::i;:::-;11244:3;11237:35;11176:102;;:::o;11284:108::-;11361:24;11379:5;11361:24;:::i;:::-;11356:3;11349:37;11284:108;;:::o;11500:2137::-;11653:6;11648:3;11644:16;11744:4;11737:5;11733:16;11727:23;11763:63;11820:4;11815:3;11811:14;11797:12;11763:63;:::i;:::-;11670:166;11920:4;11913:5;11909:16;11903:23;11939:63;11996:4;11991:3;11987:14;11973:12;11939:63;:::i;:::-;11846:166;12093:4;12086:5;12082:16;12076:23;12112:61;12167:4;12162:3;12158:14;12144:12;12112:61;:::i;:::-;12022:161;12270:4;12263:5;12259:16;12253:23;12289:59;12342:4;12337:3;12333:14;12319:12;12289:59;:::i;:::-;12193:165;12445:4;12438:5;12434:16;12428:23;12464:59;12517:4;12512:3;12508:14;12494:12;12464:59;:::i;:::-;12368:165;12625:4;12618:5;12614:16;12608:23;12644:63;12701:4;12696:3;12692:14;12678:12;12644:63;:::i;:::-;12543:174;12809:4;12802:5;12798:16;12792:23;12828:63;12885:4;12880:3;12876:14;12862:12;12828:63;:::i;:::-;12727:174;12989:4;12982:5;12978:16;12972:23;13008:63;13065:4;13060:3;13056:14;13042:12;13008:63;:::i;:::-;12911:170;13169:6;13162:5;13158:18;13152:25;13190:65;13247:6;13242:3;13238:16;13224:12;13190:65;:::i;:::-;13091:174;13352:6;13345:5;13341:18;13335:25;13373:65;13430:6;13425:3;13421:16;13407:12;13373:65;:::i;:::-;13275:173;13534:6;13527:5;13523:18;13517:25;13555:65;13612:6;13607:3;13603:16;13589:12;13555:65;:::i;:::-;13458:172;11622:2015;11500:2137;;:::o;13643:335::-;13792:4;13830:3;13819:9;13815:19;13807:27;;13844:127;13968:1;13957:9;13953:17;13944:6;13844:127;:::i;:::-;13643:335;;;;:::o;13984:143::-;14041:5;14072:6;14066:13;14057:22;;14088:33;14115:5;14088:33;:::i;:::-;13984:143;;;;:::o;14133:122::-;14206:24;14224:5;14206:24;:::i;:::-;14199:5;14196:35;14186:63;;14245:1;14242;14235:12;14186:63;14133:122;:::o;14261:143::-;14318:5;14349:6;14343:13;14334:22;;14365:33;14392:5;14365:33;:::i;:::-;14261:143;;;;:::o;14410:820::-;14507:6;14515;14523;14531;14580:3;14568:9;14559:7;14555:23;14551:33;14548:120;;;14587:79;;:::i;:::-;14548:120;14707:1;14732:64;14788:7;14779:6;14768:9;14764:22;14732:64;:::i;:::-;14722:74;;14678:128;14845:2;14871:64;14927:7;14918:6;14907:9;14903:22;14871:64;:::i;:::-;14861:74;;14816:129;14984:2;15010:64;15066:7;15057:6;15046:9;15042:22;15010:64;:::i;:::-;15000:74;;14955:129;15123:2;15149:64;15205:7;15196:6;15185:9;15181:22;15149:64;:::i;:::-;15139:74;;15094:129;14410:820;;;;;;;:::o;15236:194::-;15276:4;15296:20;15314:1;15296:20;:::i;:::-;15291:25;;15330:20;15348:1;15330:20;:::i;:::-;15325:25;;15374:1;15371;15367:9;15359:17;;15398:1;15392:4;15389:11;15386:37;;;15403:18;;:::i;:::-;15386:37;15236:194;;;;:::o;15564:1274::-;15743:4;15738:3;15734:14;15833:4;15826:5;15822:16;15816:23;15852:63;15909:4;15904:3;15900:14;15886:12;15852:63;:::i;:::-;15758:167;16017:4;16010:5;16006:16;16000:23;16036:63;16093:4;16088:3;16084:14;16070:12;16036:63;:::i;:::-;15935:174;16201:4;16194:5;16190:16;16184:23;16220:63;16277:4;16272:3;16268:14;16254:12;16220:63;:::i;:::-;16119:174;16381:4;16374:5;16370:16;16364:23;16400:63;16457:4;16452:3;16448:14;16434:12;16400:63;:::i;:::-;16303:170;16561:4;16554:5;16550:16;16544:23;16580:63;16637:4;16632:3;16628:14;16614:12;16580:63;:::i;:::-;16483:170;16739:4;16732:5;16728:16;16722:23;16758:63;16815:4;16810:3;16806:14;16792:12;16758:63;:::i;:::-;16663:168;15712:1126;15564:1274;;:::o;16844:387::-;17019:4;17057:3;17046:9;17042:19;17034:27;;17071:153;17221:1;17210:9;17206:17;17197:6;17071:153;:::i;:::-;16844:387;;;;:::o;17237:663::-;17325:6;17333;17341;17390:2;17378:9;17369:7;17365:23;17361:32;17358:119;;;17396:79;;:::i;:::-;17358:119;17516:1;17541:64;17597:7;17588:6;17577:9;17573:22;17541:64;:::i;:::-;17531:74;;17487:128;17654:2;17680:64;17736:7;17727:6;17716:9;17712:22;17680:64;:::i;:::-;17670:74;;17625:129;17793:2;17819:64;17875:7;17866:6;17855:9;17851:22;17819:64;:::i;:::-;17809:74;;17764:129;17237:663;;;;;:::o;17906:332::-;18027:4;18065:2;18054:9;18050:18;18042:26;;18078:71;18146:1;18135:9;18131:17;18122:6;18078:71;:::i;:::-;18159:72;18227:2;18216:9;18212:18;18203:6;18159:72;:::i;:::-;17906:332;;;;;:::o;18244:98::-;18295:6;18329:5;18323:12;18313:22;;18244:98;;;:::o;18348:147::-;18449:11;18486:3;18471:18;;18348:147;;;;:::o;18501:246::-;18582:1;18592:113;18606:6;18603:1;18600:13;18592:113;;;18691:1;18686:3;18682:11;18676:18;18672:1;18667:3;18663:11;18656:39;18628:2;18625:1;18621:10;18616:15;;18592:113;;;18739:1;18730:6;18725:3;18721:16;18714:27;18563:184;18501:246;;;:::o;18753:386::-;18857:3;18885:38;18917:5;18885:38;:::i;:::-;18939:88;19020:6;19015:3;18939:88;:::i;:::-;18932:95;;19036:65;19094:6;19089:3;19082:4;19075:5;19071:16;19036:65;:::i;:::-;19126:6;19121:3;19117:16;19110:23;;18861:278;18753:386;;;;:::o;19145:271::-;19275:3;19297:93;19386:3;19377:6;19297:93;:::i;:::-;19290:100;;19407:3;19400:10;;19145:271;;;;:::o;19422:169::-;19506:11;19540:6;19535:3;19528:19;19580:4;19575:3;19571:14;19556:29;;19422:169;;;;:::o;19597:152::-;19737:4;19733:1;19725:6;19721:14;19714:28;19597:152;:::o;19755:365::-;19897:3;19918:66;19982:1;19977:3;19918:66;:::i;:::-;19911:73;;19993:93;20082:3;19993:93;:::i;:::-;20111:2;20106:3;20102:12;20095:19;;19755:365;;;:::o;20126:419::-;20292:4;20330:2;20319:9;20315:18;20307:26;;20379:9;20373:4;20369:20;20365:1;20354:9;20350:17;20343:47;20407:131;20533:4;20407:131;:::i;:::-;20399:139;;20126:419;;;:::o;20551:152::-;20691:4;20687:1;20679:6;20675:14;20668:28;20551:152;:::o;20709:365::-;20851:3;20872:66;20936:1;20931:3;20872:66;:::i;:::-;20865:73;;20947:93;21036:3;20947:93;:::i;:::-;21065:2;21060:3;21056:12;21049:19;;20709:365;;;:::o;21080:419::-;21246:4;21284:2;21273:9;21269:18;21261:26;;21333:9;21327:4;21323:20;21319:1;21308:9;21304:17;21297:47;21361:131;21487:4;21361:131;:::i;:::-;21353:139;;21080:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1017600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposits(uint256)": "5145",
								"increaseLiquidityCurrentRange(uint256,uint256,uint256)": "infinite",
								"mintNewPosition((address,address,uint24,uint256,uint256))": "infinite",
								"nonfungiblePositionManager()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 777,
									"end": 921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 777,
									"end": 921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 886,
									"end": 913,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 857,
									"end": 913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 857,
									"end": 913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 857,
									"end": 913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 857,
									"end": 913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 777,
									"end": 921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 34,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 34
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 34
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 34,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 34,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 34
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 34
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 34,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 34,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 34
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 568,
									"end": 700,
									"name": "tag",
									"source": 34,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 700,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 641,
									"end": 648,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 694,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "23"
								},
								{
									"begin": 688,
									"end": 693,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 670,
									"end": 694,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "11"
								},
								{
									"begin": 670,
									"end": 694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 670,
									"end": 694,
									"name": "tag",
									"source": 34,
									"value": "23"
								},
								{
									"begin": 670,
									"end": 694,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 659,
									"end": 694,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 659,
									"end": 694,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 568,
									"end": 700,
									"name": "SWAP2",
									"source": 34
								},
								{
									"begin": 568,
									"end": 700,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 568,
									"end": 700,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 568,
									"end": 700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 706,
									"end": 900,
									"name": "tag",
									"source": 34,
									"value": "13"
								},
								{
									"begin": 706,
									"end": 900,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 815,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "25"
								},
								{
									"begin": 869,
									"end": 874,
									"name": "DUP2",
									"source": 34
								},
								{
									"begin": 815,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "12"
								},
								{
									"begin": 815,
									"end": 875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 815,
									"end": 875,
									"name": "tag",
									"source": 34,
									"value": "25"
								},
								{
									"begin": 815,
									"end": 875,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 808,
									"end": 813,
									"name": "DUP2",
									"source": 34
								},
								{
									"begin": 805,
									"end": 876,
									"name": "EQ",
									"source": 34
								},
								{
									"begin": 795,
									"end": 894,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "26"
								},
								{
									"begin": 795,
									"end": 894,
									"name": "JUMPI",
									"source": 34
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 888,
									"name": "DUP1",
									"source": 34
								},
								{
									"begin": 880,
									"end": 892,
									"name": "REVERT",
									"source": 34
								},
								{
									"begin": 795,
									"end": 894,
									"name": "tag",
									"source": 34,
									"value": "26"
								},
								{
									"begin": 795,
									"end": 894,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 706,
									"end": 900,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 706,
									"end": 900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 906,
									"end": 1121,
									"name": "tag",
									"source": 34,
									"value": "14"
								},
								{
									"begin": 906,
									"end": 1121,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1036,
									"name": "DUP2",
									"source": 34
								},
								{
									"begin": 1024,
									"end": 1037,
									"name": "MLOAD",
									"source": 34
								},
								{
									"begin": 1015,
									"end": 1037,
									"name": "SWAP1",
									"source": 34
								},
								{
									"begin": 1015,
									"end": 1037,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 1046,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "28"
								},
								{
									"begin": 1109,
									"end": 1114,
									"name": "DUP2",
									"source": 34
								},
								{
									"begin": 1046,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "13"
								},
								{
									"begin": 1046,
									"end": 1115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 1046,
									"end": 1115,
									"name": "tag",
									"source": 34,
									"value": "28"
								},
								{
									"begin": 1046,
									"end": 1115,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 906,
									"end": 1121,
									"name": "SWAP3",
									"source": 34
								},
								{
									"begin": 906,
									"end": 1121,
									"name": "SWAP2",
									"source": 34
								},
								{
									"begin": 906,
									"end": 1121,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 906,
									"end": 1121,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 906,
									"end": 1121,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 1127,
									"end": 1550,
									"name": "tag",
									"source": 34,
									"value": "3"
								},
								{
									"begin": 1127,
									"end": 1550,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 1233,
									"end": 1239,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 1282,
									"end": 1284,
									"name": "PUSH",
									"source": 34,
									"value": "20"
								},
								{
									"begin": 1270,
									"end": 1279,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 1261,
									"end": 1268,
									"name": "DUP5",
									"source": 34
								},
								{
									"begin": 1257,
									"end": 1280,
									"name": "SUB",
									"source": 34
								},
								{
									"begin": 1253,
									"end": 1285,
									"name": "SLT",
									"source": 34
								},
								{
									"begin": 1250,
									"end": 1369,
									"name": "ISZERO",
									"source": 34
								},
								{
									"begin": 1250,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "30"
								},
								{
									"begin": 1250,
									"end": 1369,
									"name": "JUMPI",
									"source": 34
								},
								{
									"begin": 1288,
									"end": 1367,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "31"
								},
								{
									"begin": 1288,
									"end": 1367,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "8"
								},
								{
									"begin": 1288,
									"end": 1367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 1288,
									"end": 1367,
									"name": "tag",
									"source": 34,
									"value": "31"
								},
								{
									"begin": 1288,
									"end": 1367,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 1250,
									"end": 1369,
									"name": "tag",
									"source": 34,
									"value": "30"
								},
								{
									"begin": 1250,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 1408,
									"end": 1409,
									"name": "PUSH",
									"source": 34,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "32"
								},
								{
									"begin": 1525,
									"end": 1532,
									"name": "DUP5",
									"source": 34
								},
								{
									"begin": 1516,
									"end": 1522,
									"name": "DUP3",
									"source": 34
								},
								{
									"begin": 1505,
									"end": 1514,
									"name": "DUP6",
									"source": 34
								},
								{
									"begin": 1501,
									"end": 1523,
									"name": "ADD",
									"source": 34
								},
								{
									"begin": 1433,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 34,
									"value": "14"
								},
								{
									"begin": 1433,
									"end": 1533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 1433,
									"end": 1533,
									"name": "tag",
									"source": 34,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 34
								},
								{
									"begin": 1423,
									"end": 1533,
									"name": "SWAP2",
									"source": 34
								},
								{
									"begin": 1423,
									"end": 1533,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 1379,
									"end": 1543,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 1127,
									"end": 1550,
									"name": "SWAP3",
									"source": 34
								},
								{
									"begin": 1127,
									"end": 1550,
									"name": "SWAP2",
									"source": 34
								},
								{
									"begin": 1127,
									"end": 1550,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 1127,
									"end": 1550,
									"name": "POP",
									"source": 34
								},
								{
									"begin": 1127,
									"end": 1550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 34
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 5754,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073c86616149b6354661db4527e871da906ce63962163ae0faedc3b24044e1bd864736f6c63430008160033",
									".code": [
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "591C7191"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "617D6D6E"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "B02C43D0"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "B44A2722"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 5754,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4846,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4846,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4846,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1504,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1504,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1504,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4137,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4137,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4137,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 469,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 469,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5065,
											"end": 5095,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 5103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1773,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1773,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1829,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1766,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1766,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1874,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1874,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1906,
											"end": 1916,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1943,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1956,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1867,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1867,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2052,
											"end": 2062,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2052,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2052,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2118,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2134,
											"end": 2157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2157,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2011,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2011,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2220,
											"end": 2230,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2220,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2220,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2286,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2179,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2179,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2493,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2483,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2537,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2527,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2578,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2568,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 32,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 32,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "60"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 646,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "61"
										},
										{
											"begin": 646,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 646,
											"end": 655,
											"name": "tag",
											"source": 32,
											"value": "60"
										},
										{
											"begin": 646,
											"end": 655,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2725,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2738,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2715,
											"end": 2738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2738,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2773,
											"end": 2796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2796,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 2929,
											"end": 2944,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2929,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3150,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3181,
											"name": "PUSH",
											"source": 1,
											"value": "88316456"
										},
										{
											"begin": 3182,
											"end": 3188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3150,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3150,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3375,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3375,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3338,
											"end": 3724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3392,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3539,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3392,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3676,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3678,
											"end": 3701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3701,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3623,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3712,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3623,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3724,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3338,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3773,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3750,
											"end": 3773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3773,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3773,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 4122,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3736,
											"end": 4122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3901,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3790,
											"end": 3937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3937,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3790,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4074,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4109,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4099,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4076,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4099,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4076,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4076,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4021,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4110,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4021,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 4122,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3736,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 4129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 4129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4575,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4620,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4713,
											"end": 4728,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4713,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4804,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4778,
											"end": 4822,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4822,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4822,
											"name": "PUSH",
											"source": 1,
											"value": "219F5D17"
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4778,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4778,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4778,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 469,
											"end": 540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2206,
											"name": "tag",
											"source": 33,
											"value": "53"
										},
										{
											"begin": 1892,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2079,
											"end": 2102,
											"name": "PUSH",
											"source": 33,
											"value": "95EA7B3"
										},
										{
											"begin": 2079,
											"end": 2102,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 2079,
											"end": 2102,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 2104,
											"end": 2106,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "89"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "90"
										},
										{
											"begin": 2056,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "tag",
											"source": 33,
											"value": "89"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2056,
											"end": 2114,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "91"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "92"
										},
										{
											"begin": 2045,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "tag",
											"source": 33,
											"value": "91"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "GAS",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "CALL",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "95"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "3F"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "RETURNDATACOPY",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "94"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "tag",
											"source": 33,
											"value": "95"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "tag",
											"source": 33,
											"value": "94"
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2045,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2009,
											"end": 2115,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2009,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2009,
											"end": 2115,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2009,
											"end": 2115,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "96"
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2161,
											"end": 2162,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2146,
											"end": 2157,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2146,
											"end": 2162,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 2146,
											"end": 2190,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2146,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "97"
										},
										{
											"begin": 2146,
											"end": 2190,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2146,
											"end": 2190,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2177,
											"end": 2181,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "98"
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "45"
										},
										{
											"begin": 2166,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "tag",
											"source": 33,
											"value": "98"
										},
										{
											"begin": 2166,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2146,
											"end": 2190,
											"name": "tag",
											"source": 33,
											"value": "97"
										},
										{
											"begin": 2146,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "tag",
											"source": 33,
											"value": "96"
										},
										{
											"begin": 2134,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "99"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH",
											"source": 33,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "100"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "101"
										},
										{
											"begin": 2126,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "tag",
											"source": 33,
											"value": "100"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "tag",
											"source": 33,
											"value": "99"
										},
										{
											"begin": 2126,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1998,
											"end": 2206,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1998,
											"end": 2206,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1892,
											"end": 2206,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1892,
											"end": 2206,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1892,
											"end": 2206,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1892,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1216,
											"end": 1532,
											"name": "tag",
											"source": 33,
											"value": "75"
										},
										{
											"begin": 1216,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1366,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1375,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "PUSH",
											"source": 33,
											"value": "A9059CBB"
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "24"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "103"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "90"
										},
										{
											"begin": 1381,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "tag",
											"source": 33,
											"value": "103"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1381,
											"end": 1440,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "104"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "92"
										},
										{
											"begin": 1370,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "tag",
											"source": 33,
											"value": "104"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "GAS",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "CALL",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "107"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "3F"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "RETURNDATACOPY",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "106"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "tag",
											"source": 33,
											"value": "107"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "tag",
											"source": 33,
											"value": "106"
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1370,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1334,
											"end": 1441,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1334,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1334,
											"end": 1441,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1334,
											"end": 1441,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1460,
											"end": 1467,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "108"
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1472,
											"end": 1483,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1472,
											"end": 1488,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 1472,
											"end": 1516,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1472,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "109"
										},
										{
											"begin": 1472,
											"end": 1516,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1472,
											"end": 1516,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1503,
											"end": 1507,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "110"
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "45"
										},
										{
											"begin": 1492,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "tag",
											"source": 33,
											"value": "110"
										},
										{
											"begin": 1492,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1472,
											"end": 1516,
											"name": "tag",
											"source": 33,
											"value": "109"
										},
										{
											"begin": 1472,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "tag",
											"source": 33,
											"value": "108"
										},
										{
											"begin": 1460,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "111"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH",
											"source": 33,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "112"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "113"
										},
										{
											"begin": 1452,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "tag",
											"source": 33,
											"value": "112"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "tag",
											"source": 33,
											"value": "111"
										},
										{
											"begin": 1452,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1323,
											"end": 1532,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1323,
											"end": 1532,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1216,
											"end": 1532,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1216,
											"end": 1532,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1216,
											"end": 1532,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1216,
											"end": 1532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 34,
											"value": "116"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 34,
											"value": "117"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 34,
											"value": "118"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "173"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "117"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 34,
											"value": "173"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 34,
											"value": "119"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "175"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "118"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 34,
											"value": "175"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "176"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 34,
											"value": "176"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 34,
											"value": "120"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "178"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "119"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 34,
											"value": "178"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 34,
											"value": "122"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "181"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 34,
											"value": "181"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "182"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 34,
											"value": "182"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 34,
											"value": "123"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "184"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "122"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 34,
											"value": "184"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 34,
											"value": "124"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 34,
											"value": "125"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 34,
											"value": "126"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 34,
											"value": "127"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "189"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "190"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "124"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 34,
											"value": "190"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 34,
											"value": "189"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "191"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "192"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "125"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 34,
											"value": "192"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 34,
											"value": "191"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 34,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 34
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "193"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "194"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "126"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 34,
											"value": "194"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 34,
											"value": "193"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "tag",
											"source": 34,
											"value": "10"
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 2286,
											"end": 2319,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "196"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "197"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 34,
											"value": "197"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "tag",
											"source": 34,
											"value": "196"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "198"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP10",
											"source": 34
										},
										{
											"begin": 2488,
											"end": 2510,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "120"
										},
										{
											"begin": 2467,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "tag",
											"source": 34,
											"value": "198"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "SWAP6",
											"source": 34
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2413,
											"end": 2530,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "199"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP10",
											"source": 34
										},
										{
											"begin": 2616,
											"end": 2638,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "120"
										},
										{
											"begin": 2595,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "tag",
											"source": 34,
											"value": "199"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "SWAP5",
											"source": 34
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2540,
											"end": 2658,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "200"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 2748,
											"end": 2757,
											"name": "DUP10",
											"source": 34
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "123"
										},
										{
											"begin": 2723,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "tag",
											"source": 34,
											"value": "200"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2668,
											"end": 2786,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2825,
											"end": 2857,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 2873,
											"end": 2903,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "201"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "202"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "116"
										},
										{
											"begin": 2906,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "tag",
											"source": 34,
											"value": "202"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "tag",
											"source": 34,
											"value": "201"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "203"
										},
										{
											"begin": 3075,
											"end": 3082,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP10",
											"source": 34
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "127"
										},
										{
											"begin": 3019,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "tag",
											"source": 34,
											"value": "203"
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2796,
											"end": 3093,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 2137,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "tag",
											"source": 34,
											"value": "128"
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3142,
											"end": 3149,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3248,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3171,
											"end": 3249,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3106,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "tag",
											"source": 34,
											"value": "129"
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "206"
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "128"
										},
										{
											"begin": 3346,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "tag",
											"source": 34,
											"value": "206"
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3261,
											"end": 3376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "tag",
											"source": 34,
											"value": "13"
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "208"
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "129"
										},
										{
											"begin": 3524,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "tag",
											"source": 34,
											"value": "208"
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3382,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "tag",
											"source": 34,
											"value": "130"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3715,
											"end": 3716,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 3705,
											"end": 3717,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 3778,
											"end": 4022,
											"name": "tag",
											"source": 34,
											"value": "131"
										},
										{
											"begin": 3778,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3863,
											"end": 3868,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3907,
											"name": "PUSH",
											"source": 34,
											"value": "A0"
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3890,
											"end": 3893,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 3886,
											"end": 3902,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 3882,
											"end": 3908,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 3879,
											"end": 3992,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 3879,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "211"
										},
										{
											"begin": 3879,
											"end": 3992,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 3911,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "212"
										},
										{
											"begin": 3911,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "130"
										},
										{
											"begin": 3911,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 3911,
											"end": 3990,
											"name": "tag",
											"source": 34,
											"value": "212"
										},
										{
											"begin": 3911,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 3879,
											"end": 3992,
											"name": "tag",
											"source": 34,
											"value": "211"
										},
										{
											"begin": 3879,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3778,
											"end": 4022,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 3778,
											"end": 4022,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 3778,
											"end": 4022,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3778,
											"end": 4022,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 3778,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4028,
											"end": 4436,
											"name": "tag",
											"source": 34,
											"value": "16"
										},
										{
											"begin": 4028,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "PUSH",
											"source": 34,
											"value": "A0"
										},
										{
											"begin": 4163,
											"end": 4172,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4154,
											"end": 4161,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 4150,
											"end": 4173,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 4143,
											"end": 4263,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 4143,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "214"
										},
										{
											"begin": 4143,
											"end": 4263,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 4182,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "215"
										},
										{
											"begin": 4182,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 4182,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4182,
											"end": 4261,
											"name": "tag",
											"source": 34,
											"value": "215"
										},
										{
											"begin": 4182,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4143,
											"end": 4263,
											"name": "tag",
											"source": 34,
											"value": "214"
										},
										{
											"begin": 4143,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "216"
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 4387,
											"end": 4409,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 4327,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "131"
										},
										{
											"begin": 4327,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4327,
											"end": 4419,
											"name": "tag",
											"source": 34,
											"value": "216"
										},
										{
											"begin": 4327,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4317,
											"end": 4419,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4317,
											"end": 4419,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4273,
											"end": 4429,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4028,
											"end": 4436,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 4028,
											"end": 4436,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4028,
											"end": 4436,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4028,
											"end": 4436,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4028,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4442,
											"end": 4560,
											"name": "tag",
											"source": 34,
											"value": "132"
										},
										{
											"begin": 4442,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4529,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "218"
										},
										{
											"begin": 4547,
											"end": 4552,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 4529,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 4529,
											"end": 4553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4529,
											"end": 4553,
											"name": "tag",
											"source": 34,
											"value": "218"
										},
										{
											"begin": 4529,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4517,
											"end": 4554,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 4442,
											"end": 4560,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4442,
											"end": 4560,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4442,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "tag",
											"source": 34,
											"value": "133"
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4603,
											"end": 4610,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4677,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4636,
											"end": 4641,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4632,
											"end": 4678,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 4621,
											"end": 4678,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4621,
											"end": 4678,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4566,
											"end": 4684,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4566,
											"end": 4684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4690,
											"end": 4808,
											"name": "tag",
											"source": 34,
											"value": "134"
										},
										{
											"begin": 4690,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "221"
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "133"
										},
										{
											"begin": 4777,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "tag",
											"source": 34,
											"value": "221"
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4765,
											"end": 4802,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 4690,
											"end": 4808,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4690,
											"end": 4808,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4690,
											"end": 4808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "tag",
											"source": 34,
											"value": "19"
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 5014,
											"end": 5033,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5006,
											"end": 5033,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 5006,
											"end": 5033,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5043,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "223"
										},
										{
											"begin": 5111,
											"end": 5112,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5109,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 5096,
											"end": 5113,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 5043,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "132"
										},
										{
											"begin": 5043,
											"end": 5114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5043,
											"end": 5114,
											"name": "tag",
											"source": 34,
											"value": "223"
										},
										{
											"begin": 5043,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5124,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "224"
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5190,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5168,
											"end": 5174,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 5124,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "134"
										},
										{
											"begin": 5124,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5124,
											"end": 5196,
											"name": "tag",
											"source": 34,
											"value": "224"
										},
										{
											"begin": 5124,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5206,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "225"
										},
										{
											"begin": 5274,
											"end": 5276,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 5206,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "132"
										},
										{
											"begin": 5206,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5206,
											"end": 5278,
											"name": "tag",
											"source": 34,
											"value": "225"
										},
										{
											"begin": 5206,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5288,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "226"
										},
										{
											"begin": 5356,
											"end": 5358,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 5345,
											"end": 5354,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 5288,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "132"
										},
										{
											"begin": 5288,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5288,
											"end": 5360,
											"name": "tag",
											"source": 34,
											"value": "226"
										},
										{
											"begin": 5288,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "SWAP6",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "SWAP5",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 4814,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "tag",
											"source": 34,
											"value": "22"
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5450,
											"end": 5456,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 5466,
											"end": 5472,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5517,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 5494,
											"end": 5501,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 5490,
											"end": 5513,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 5486,
											"end": 5518,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 5483,
											"end": 5602,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 5483,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "228"
										},
										{
											"begin": 5483,
											"end": 5602,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 5521,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "229"
										},
										{
											"begin": 5521,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 5521,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5521,
											"end": 5600,
											"name": "tag",
											"source": 34,
											"value": "229"
										},
										{
											"begin": 5521,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5483,
											"end": 5602,
											"name": "tag",
											"source": 34,
											"value": "228"
										},
										{
											"begin": 5483,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "230"
										},
										{
											"begin": 5711,
											"end": 5718,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 5687,
											"end": 5709,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "123"
										},
										{
											"begin": 5666,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "tag",
											"source": 34,
											"value": "230"
										},
										{
											"begin": 5666,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5656,
											"end": 5719,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 5656,
											"end": 5719,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5612,
											"end": 5729,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "231"
										},
										{
											"begin": 5839,
											"end": 5846,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 5830,
											"end": 5836,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 5815,
											"end": 5837,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "123"
										},
										{
											"begin": 5794,
											"end": 5847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "tag",
											"source": 34,
											"value": "231"
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5784,
											"end": 5847,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 5784,
											"end": 5847,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5739,
											"end": 5857,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "232"
										},
										{
											"begin": 5967,
											"end": 5974,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 5947,
											"end": 5956,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 5943,
											"end": 5965,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5922,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "123"
										},
										{
											"begin": 5922,
											"end": 5975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5922,
											"end": 5975,
											"name": "tag",
											"source": 34,
											"value": "232"
										},
										{
											"begin": 5922,
											"end": 5975,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5912,
											"end": 5975,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 5912,
											"end": 5975,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5867,
											"end": 5985,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 5373,
											"end": 5992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 5998,
											"end": 6220,
											"name": "tag",
											"source": 34,
											"value": "25"
										},
										{
											"begin": 5998,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6091,
											"end": 6095,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 6129,
											"end": 6131,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 6118,
											"end": 6127,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6142,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "234"
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 6195,
											"end": 6212,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 6186,
											"end": 6192,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 6142,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "134"
										},
										{
											"begin": 6142,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6142,
											"end": 6213,
											"name": "tag",
											"source": 34,
											"value": "234"
										},
										{
											"begin": 6142,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5998,
											"end": 6220,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 5998,
											"end": 6220,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 5998,
											"end": 6220,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5998,
											"end": 6220,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 5998,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6226,
											"end": 6555,
											"name": "tag",
											"source": 34,
											"value": "28"
										},
										{
											"begin": 6226,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6285,
											"end": 6291,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6336,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 6313,
											"end": 6320,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 6309,
											"end": 6332,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 6305,
											"end": 6337,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 6302,
											"end": 6421,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 6302,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "236"
										},
										{
											"begin": 6302,
											"end": 6421,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "237"
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 6340,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "tag",
											"source": 34,
											"value": "237"
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6302,
											"end": 6421,
											"name": "tag",
											"source": 34,
											"value": "236"
										},
										{
											"begin": 6302,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6460,
											"end": 6461,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "238"
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 6510,
											"end": 6519,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 6506,
											"end": 6528,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 6485,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "123"
										},
										{
											"begin": 6485,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6485,
											"end": 6538,
											"name": "tag",
											"source": 34,
											"value": "238"
										},
										{
											"begin": 6485,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6475,
											"end": 6538,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 6475,
											"end": 6538,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6431,
											"end": 6548,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6226,
											"end": 6555,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 6226,
											"end": 6555,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 6226,
											"end": 6555,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6226,
											"end": 6555,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6226,
											"end": 6555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6561,
											"end": 6679,
											"name": "tag",
											"source": 34,
											"value": "135"
										},
										{
											"begin": 6561,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6648,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "240"
										},
										{
											"begin": 6666,
											"end": 6671,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 6648,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "118"
										},
										{
											"begin": 6648,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6648,
											"end": 6672,
											"name": "tag",
											"source": 34,
											"value": "240"
										},
										{
											"begin": 6648,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 6636,
											"end": 6673,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 6561,
											"end": 6679,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6561,
											"end": 6679,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6561,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "tag",
											"source": 34,
											"value": "31"
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6806,
											"end": 6810,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6846,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 6833,
											"end": 6842,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 6821,
											"end": 6847,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 6821,
											"end": 6847,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "242"
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 6910,
											"end": 6927,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "135"
										},
										{
											"begin": 6857,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "tag",
											"source": 34,
											"value": "242"
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6938,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "243"
										},
										{
											"begin": 7006,
											"end": 7008,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7004,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 6982,
											"end": 6988,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 6938,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "134"
										},
										{
											"begin": 6938,
											"end": 7010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 6938,
											"end": 7010,
											"name": "tag",
											"source": 34,
											"value": "243"
										},
										{
											"begin": 6938,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 6685,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7023,
											"end": 7083,
											"name": "tag",
											"source": 34,
											"value": "136"
										},
										{
											"begin": 7023,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7051,
											"end": 7054,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7023,
											"end": 7083,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 7023,
											"end": 7083,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7023,
											"end": 7083,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7023,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7089,
											"end": 7231,
											"name": "tag",
											"source": 34,
											"value": "137"
										},
										{
											"begin": 7089,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7139,
											"end": 7148,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "246"
										},
										{
											"begin": 7190,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "247"
										},
										{
											"begin": 7199,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "248"
										},
										{
											"begin": 7217,
											"end": 7222,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 7199,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "117"
										},
										{
											"begin": 7199,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7199,
											"end": 7223,
											"name": "tag",
											"source": 34,
											"value": "248"
										},
										{
											"begin": 7199,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7190,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "136"
										},
										{
											"begin": 7190,
											"end": 7224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7190,
											"end": 7224,
											"name": "tag",
											"source": 34,
											"value": "247"
										},
										{
											"begin": 7190,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7172,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "117"
										},
										{
											"begin": 7172,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7172,
											"end": 7225,
											"name": "tag",
											"source": 34,
											"value": "246"
										},
										{
											"begin": 7172,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7159,
											"end": 7225,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7159,
											"end": 7225,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7089,
											"end": 7231,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 7089,
											"end": 7231,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7089,
											"end": 7231,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7089,
											"end": 7231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7237,
											"end": 7363,
											"name": "tag",
											"source": 34,
											"value": "138"
										},
										{
											"begin": 7237,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "250"
										},
										{
											"begin": 7351,
											"end": 7356,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 7320,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "137"
										},
										{
											"begin": 7320,
											"end": 7357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7320,
											"end": 7357,
											"name": "tag",
											"source": 34,
											"value": "250"
										},
										{
											"begin": 7320,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7307,
											"end": 7357,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7307,
											"end": 7357,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7237,
											"end": 7363,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 7237,
											"end": 7363,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7237,
											"end": 7363,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7237,
											"end": 7363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7369,
											"end": 7531,
											"name": "tag",
											"source": 34,
											"value": "139"
										},
										{
											"begin": 7369,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7455,
											"end": 7464,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 7488,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "252"
										},
										{
											"begin": 7519,
											"end": 7524,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 7488,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "138"
										},
										{
											"begin": 7488,
											"end": 7525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7488,
											"end": 7525,
											"name": "tag",
											"source": 34,
											"value": "252"
										},
										{
											"begin": 7488,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7475,
											"end": 7525,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7475,
											"end": 7525,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7369,
											"end": 7531,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 7369,
											"end": 7531,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7369,
											"end": 7531,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7369,
											"end": 7531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7537,
											"end": 7740,
											"name": "tag",
											"source": 34,
											"value": "140"
										},
										{
											"begin": 7537,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7660,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "254"
										},
										{
											"begin": 7727,
											"end": 7732,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 7660,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "139"
										},
										{
											"begin": 7660,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7660,
											"end": 7733,
											"name": "tag",
											"source": 34,
											"value": "254"
										},
										{
											"begin": 7660,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 7648,
											"end": 7734,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 7537,
											"end": 7740,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7537,
											"end": 7740,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7537,
											"end": 7740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7746,
											"end": 8040,
											"name": "tag",
											"source": 34,
											"value": "35"
										},
										{
											"begin": 7746,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7875,
											"end": 7879,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7915,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 7890,
											"end": 7916,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 7890,
											"end": 7916,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7926,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "256"
										},
										{
											"begin": 8030,
											"end": 8031,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8028,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 8015,
											"end": 8032,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 8006,
											"end": 8012,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 7926,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "140"
										},
										{
											"begin": 7926,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 7926,
											"end": 8033,
											"name": "tag",
											"source": 34,
											"value": "256"
										},
										{
											"begin": 7926,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 7746,
											"end": 8040,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 7746,
											"end": 8040,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 7746,
											"end": 8040,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7746,
											"end": 8040,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 7746,
											"end": 8040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8046,
											"end": 8375,
											"name": "tag",
											"source": 34,
											"value": "39"
										},
										{
											"begin": 8046,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8105,
											"end": 8111,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 8129,
											"end": 8152,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 8125,
											"end": 8157,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 8122,
											"end": 8241,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 8122,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "258"
										},
										{
											"begin": 8122,
											"end": 8241,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 8160,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "259"
										},
										{
											"begin": 8160,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 8160,
											"end": 8239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8160,
											"end": 8239,
											"name": "tag",
											"source": 34,
											"value": "259"
										},
										{
											"begin": 8160,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8122,
											"end": 8241,
											"name": "tag",
											"source": 34,
											"value": "258"
										},
										{
											"begin": 8122,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "260"
										},
										{
											"begin": 8350,
											"end": 8357,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 8326,
											"end": 8348,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "120"
										},
										{
											"begin": 8305,
											"end": 8358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "tag",
											"source": 34,
											"value": "260"
										},
										{
											"begin": 8305,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8295,
											"end": 8358,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 8295,
											"end": 8358,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8251,
											"end": 8368,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8046,
											"end": 8375,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 8046,
											"end": 8375,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 8046,
											"end": 8375,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8046,
											"end": 8375,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8046,
											"end": 8375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "tag",
											"source": 34,
											"value": "41"
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8570,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 8545,
											"end": 8571,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "262"
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 8634,
											"end": 8651,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 8625,
											"end": 8631,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "135"
										},
										{
											"begin": 8581,
											"end": 8652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "tag",
											"source": 34,
											"value": "262"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "263"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "135"
										},
										{
											"begin": 8662,
											"end": 8734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "tag",
											"source": 34,
											"value": "263"
										},
										{
											"begin": 8662,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8744,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "264"
										},
										{
											"begin": 8812,
											"end": 8814,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 8801,
											"end": 8810,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 8744,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "132"
										},
										{
											"begin": 8744,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8744,
											"end": 8816,
											"name": "tag",
											"source": 34,
											"value": "264"
										},
										{
											"begin": 8744,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "SWAP5",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8381,
											"end": 8823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8829,
											"end": 8919,
											"name": "tag",
											"source": 34,
											"value": "141"
										},
										{
											"begin": 8829,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8863,
											"end": 8870,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8911,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 8892,
											"end": 8913,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8829,
											"end": 8919,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 8829,
											"end": 8919,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 8829,
											"end": 8919,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8829,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8925,
											"end": 9041,
											"name": "tag",
											"source": 34,
											"value": "142"
										},
										{
											"begin": 8925,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8995,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "267"
										},
										{
											"begin": 9010,
											"end": 9015,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 8995,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "141"
										},
										{
											"begin": 8995,
											"end": 9016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 8995,
											"end": 9016,
											"name": "tag",
											"source": 34,
											"value": "267"
										},
										{
											"begin": 8995,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 8985,
											"end": 9017,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 8975,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "268"
										},
										{
											"begin": 8975,
											"end": 9035,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 9031,
											"end": 9032,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9029,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 9021,
											"end": 9033,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 8975,
											"end": 9035,
											"name": "tag",
											"source": 34,
											"value": "268"
										},
										{
											"begin": 8975,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 8925,
											"end": 9041,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 8925,
											"end": 9041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9047,
											"end": 9184,
											"name": "tag",
											"source": 34,
											"value": "143"
										},
										{
											"begin": 9047,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9101,
											"end": 9106,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9138,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 9126,
											"end": 9139,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 9117,
											"end": 9139,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 9117,
											"end": 9139,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9148,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "270"
										},
										{
											"begin": 9172,
											"end": 9177,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 9148,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "142"
										},
										{
											"begin": 9148,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9148,
											"end": 9178,
											"name": "tag",
											"source": 34,
											"value": "270"
										},
										{
											"begin": 9148,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9047,
											"end": 9184,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 9047,
											"end": 9184,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 9047,
											"end": 9184,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9047,
											"end": 9184,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9047,
											"end": 9184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9190,
											"end": 9535,
											"name": "tag",
											"source": 34,
											"value": "45"
										},
										{
											"begin": 9190,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9257,
											"end": 9263,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9308,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 9294,
											"end": 9303,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 9285,
											"end": 9292,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 9281,
											"end": 9304,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 9277,
											"end": 9309,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 9274,
											"end": 9393,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 9274,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "272"
										},
										{
											"begin": 9274,
											"end": 9393,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 9312,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "273"
										},
										{
											"begin": 9312,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 9312,
											"end": 9391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9312,
											"end": 9391,
											"name": "tag",
											"source": 34,
											"value": "273"
										},
										{
											"begin": 9312,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9274,
											"end": 9393,
											"name": "tag",
											"source": 34,
											"value": "272"
										},
										{
											"begin": 9274,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9457,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "274"
										},
										{
											"begin": 9510,
											"end": 9517,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 9501,
											"end": 9507,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 9486,
											"end": 9508,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 9457,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "143"
										},
										{
											"begin": 9457,
											"end": 9518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9457,
											"end": 9518,
											"name": "tag",
											"source": 34,
											"value": "274"
										},
										{
											"begin": 9457,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9447,
											"end": 9518,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 9447,
											"end": 9518,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9403,
											"end": 9528,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9190,
											"end": 9535,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 9190,
											"end": 9535,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 9190,
											"end": 9535,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9190,
											"end": 9535,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9190,
											"end": 9535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9541,
											"end": 9632,
											"name": "tag",
											"source": 34,
											"value": "144"
										},
										{
											"begin": 9541,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9577,
											"end": 9584,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9625,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFF"
										},
										{
											"begin": 9610,
											"end": 9615,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 9606,
											"end": 9626,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 9595,
											"end": 9626,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 9595,
											"end": 9626,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9541,
											"end": 9632,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 9541,
											"end": 9632,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 9541,
											"end": 9632,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9541,
											"end": 9632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9638,
											"end": 9758,
											"name": "tag",
											"source": 34,
											"value": "145"
										},
										{
											"begin": 9638,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9710,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "277"
										},
										{
											"begin": 9727,
											"end": 9732,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 9710,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "144"
										},
										{
											"begin": 9710,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9710,
											"end": 9733,
											"name": "tag",
											"source": 34,
											"value": "277"
										},
										{
											"begin": 9710,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9703,
											"end": 9708,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 9700,
											"end": 9734,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 9690,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "278"
										},
										{
											"begin": 9690,
											"end": 9752,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 9748,
											"end": 9749,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 9738,
											"end": 9750,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 9690,
											"end": 9752,
											"name": "tag",
											"source": 34,
											"value": "278"
										},
										{
											"begin": 9690,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9638,
											"end": 9758,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9638,
											"end": 9758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9764,
											"end": 9901,
											"name": "tag",
											"source": 34,
											"value": "146"
										},
										{
											"begin": 9764,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9809,
											"end": 9814,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 9834,
											"end": 9854,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 9825,
											"end": 9854,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 9825,
											"end": 9854,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "280"
										},
										{
											"begin": 9889,
											"end": 9894,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "145"
										},
										{
											"begin": 9863,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "tag",
											"source": 34,
											"value": "280"
										},
										{
											"begin": 9863,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9764,
											"end": 9901,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 9764,
											"end": 9901,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 9764,
											"end": 9901,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9764,
											"end": 9901,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9764,
											"end": 9901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 9907,
											"end": 10234,
											"name": "tag",
											"source": 34,
											"value": "59"
										},
										{
											"begin": 9907,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9965,
											"end": 9971,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10016,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 9993,
											"end": 10000,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 9985,
											"end": 10017,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 9982,
											"end": 10101,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 9982,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "282"
										},
										{
											"begin": 9982,
											"end": 10101,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 10020,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "283"
										},
										{
											"begin": 10020,
											"end": 10099,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 10020,
											"end": 10099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10020,
											"end": 10099,
											"name": "tag",
											"source": 34,
											"value": "283"
										},
										{
											"begin": 10020,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 9982,
											"end": 10101,
											"name": "tag",
											"source": 34,
											"value": "282"
										},
										{
											"begin": 9982,
											"end": 10101,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "284"
										},
										{
											"begin": 10209,
											"end": 10216,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10189,
											"end": 10198,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 10185,
											"end": 10207,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 10165,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "146"
										},
										{
											"begin": 10165,
											"end": 10217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10165,
											"end": 10217,
											"name": "tag",
											"source": 34,
											"value": "284"
										},
										{
											"begin": 10165,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10155,
											"end": 10217,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 10155,
											"end": 10217,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10111,
											"end": 10227,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9907,
											"end": 10234,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 9907,
											"end": 10234,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 9907,
											"end": 10234,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9907,
											"end": 10234,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 9907,
											"end": 10234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10240,
											"end": 10330,
											"name": "tag",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 10240,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10275,
											"end": 10282,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10318,
											"end": 10323,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 10315,
											"end": 10316,
											"name": "PUSH",
											"source": 34,
											"value": "2"
										},
										{
											"begin": 10304,
											"end": 10324,
											"name": "SIGNEXTEND",
											"source": 34
										},
										{
											"begin": 10293,
											"end": 10324,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 10293,
											"end": 10324,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10240,
											"end": 10330,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 10240,
											"end": 10330,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 10240,
											"end": 10330,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10240,
											"end": 10330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10336,
											"end": 10516,
											"name": "tag",
											"source": 34,
											"value": "148"
										},
										{
											"begin": 10336,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10384,
											"end": 10461,
											"name": "PUSH",
											"source": 34,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10381,
											"end": 10382,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10462,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 10481,
											"end": 10485,
											"name": "PUSH",
											"source": 34,
											"value": "11"
										},
										{
											"begin": 10478,
											"end": 10479,
											"name": "PUSH",
											"source": 34,
											"value": "4"
										},
										{
											"begin": 10471,
											"end": 10486,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 10505,
											"end": 10509,
											"name": "PUSH",
											"source": 34,
											"value": "24"
										},
										{
											"begin": 10502,
											"end": 10503,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10495,
											"end": 10510,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 10522,
											"end": 10748,
											"name": "tag",
											"source": 34,
											"value": "61"
										},
										{
											"begin": 10522,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10556,
											"end": 10559,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "288"
										},
										{
											"begin": 10595,
											"end": 10600,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10579,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 10579,
											"end": 10601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10579,
											"end": 10601,
											"name": "tag",
											"source": 34,
											"value": "288"
										},
										{
											"begin": 10579,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10570,
											"end": 10601,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 10570,
											"end": 10601,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10623,
											"end": 10689,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 10616,
											"end": 10621,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10613,
											"end": 10690,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "289"
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "290"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "148"
										},
										{
											"begin": 10693,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "tag",
											"source": 34,
											"value": "290"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "tag",
											"source": 34,
											"value": "289"
										},
										{
											"begin": 10610,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10736,
											"end": 10741,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 10733,
											"end": 10734,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10742,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 10722,
											"end": 10742,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 10722,
											"end": 10742,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10522,
											"end": 10748,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 10522,
											"end": 10748,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 10522,
											"end": 10748,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10522,
											"end": 10748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10754,
											"end": 10945,
											"name": "tag",
											"source": 34,
											"value": "63"
										},
										{
											"begin": 10754,
											"end": 10945,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10794,
											"end": 10797,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "292"
										},
										{
											"begin": 10831,
											"end": 10832,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 10813,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "tag",
											"source": 34,
											"value": "292"
										},
										{
											"begin": 10813,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10808,
											"end": 10833,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 10808,
											"end": 10833,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10847,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "293"
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 10847,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 10847,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10847,
											"end": 10867,
											"name": "tag",
											"source": 34,
											"value": "293"
										},
										{
											"begin": 10847,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10842,
											"end": 10867,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 10842,
											"end": 10867,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10890,
											"end": 10891,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10883,
											"end": 10892,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 10876,
											"end": 10892,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 10876,
											"end": 10892,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10911,
											"end": 10914,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 10908,
											"end": 10909,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 10905,
											"end": 10915,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 10902,
											"end": 10938,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 10902,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "294"
										},
										{
											"begin": 10902,
											"end": 10938,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "295"
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "148"
										},
										{
											"begin": 10918,
											"end": 10936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "tag",
											"source": 34,
											"value": "295"
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10902,
											"end": 10938,
											"name": "tag",
											"source": 34,
											"value": "294"
										},
										{
											"begin": 10902,
											"end": 10938,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 10754,
											"end": 10945,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 10754,
											"end": 10945,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 10754,
											"end": 10945,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10754,
											"end": 10945,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10754,
											"end": 10945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 10951,
											"end": 11059,
											"name": "tag",
											"source": 34,
											"value": "149"
										},
										{
											"begin": 10951,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11028,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "297"
										},
										{
											"begin": 11046,
											"end": 11051,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 11028,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "118"
										},
										{
											"begin": 11028,
											"end": 11052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11028,
											"end": 11052,
											"name": "tag",
											"source": 34,
											"value": "297"
										},
										{
											"begin": 11028,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11023,
											"end": 11026,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11016,
											"end": 11053,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 10951,
											"end": 11059,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10951,
											"end": 11059,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 10951,
											"end": 11059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11065,
											"end": 11170,
											"name": "tag",
											"source": 34,
											"value": "150"
										},
										{
											"begin": 11065,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11140,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "299"
										},
										{
											"begin": 11157,
											"end": 11162,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 11140,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "144"
										},
										{
											"begin": 11140,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11140,
											"end": 11163,
											"name": "tag",
											"source": 34,
											"value": "299"
										},
										{
											"begin": 11140,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11135,
											"end": 11138,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11128,
											"end": 11164,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 11065,
											"end": 11170,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11065,
											"end": 11170,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11065,
											"end": 11170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11176,
											"end": 11278,
											"name": "tag",
											"source": 34,
											"value": "151"
										},
										{
											"begin": 11176,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11249,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "301"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 11249,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 11249,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11249,
											"end": 11271,
											"name": "tag",
											"source": 34,
											"value": "301"
										},
										{
											"begin": 11249,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11244,
											"end": 11247,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11237,
											"end": 11272,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 11176,
											"end": 11278,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11176,
											"end": 11278,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11176,
											"end": 11278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11284,
											"end": 11392,
											"name": "tag",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 11284,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11361,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "303"
										},
										{
											"begin": 11379,
											"end": 11384,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 11361,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 11361,
											"end": 11385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11361,
											"end": 11385,
											"name": "tag",
											"source": 34,
											"value": "303"
										},
										{
											"begin": 11361,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11356,
											"end": 11359,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 11284,
											"end": 11392,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11284,
											"end": 11392,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11284,
											"end": 11392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11500,
											"end": 13637,
											"name": "tag",
											"source": 34,
											"value": "153"
										},
										{
											"begin": 11500,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11653,
											"end": 11659,
											"name": "PUSH",
											"source": 34,
											"value": "160"
										},
										{
											"begin": 11648,
											"end": 11651,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 11744,
											"end": 11748,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 11742,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11733,
											"end": 11749,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 11727,
											"end": 11750,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 11763,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "305"
										},
										{
											"begin": 11820,
											"end": 11824,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 11815,
											"end": 11818,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 11811,
											"end": 11825,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 11797,
											"end": 11809,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11763,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "149"
										},
										{
											"begin": 11763,
											"end": 11826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11763,
											"end": 11826,
											"name": "tag",
											"source": 34,
											"value": "305"
										},
										{
											"begin": 11763,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11670,
											"end": 11836,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11920,
											"end": 11924,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 11913,
											"end": 11918,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11909,
											"end": 11925,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 11903,
											"end": 11926,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 11939,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "306"
										},
										{
											"begin": 11996,
											"end": 12000,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 11991,
											"end": 11994,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 11987,
											"end": 12001,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 11939,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "149"
										},
										{
											"begin": 11939,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 11939,
											"end": 12002,
											"name": "tag",
											"source": 34,
											"value": "306"
										},
										{
											"begin": 11939,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 11846,
											"end": 12012,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 12093,
											"end": 12097,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 12086,
											"end": 12091,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12082,
											"end": 12098,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12076,
											"end": 12099,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 12112,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "307"
										},
										{
											"begin": 12167,
											"end": 12171,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12165,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 12158,
											"end": 12172,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12144,
											"end": 12156,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12112,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "150"
										},
										{
											"begin": 12112,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 12112,
											"end": 12173,
											"name": "tag",
											"source": 34,
											"value": "307"
										},
										{
											"begin": 12112,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 12022,
											"end": 12183,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 12270,
											"end": 12274,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 12263,
											"end": 12268,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12259,
											"end": 12275,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12253,
											"end": 12276,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 12289,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "308"
										},
										{
											"begin": 12342,
											"end": 12346,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 12337,
											"end": 12340,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 12333,
											"end": 12347,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12319,
											"end": 12331,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12289,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "151"
										},
										{
											"begin": 12289,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 12289,
											"end": 12348,
											"name": "tag",
											"source": 34,
											"value": "308"
										},
										{
											"begin": 12289,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 12193,
											"end": 12358,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 12445,
											"end": 12449,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 12438,
											"end": 12443,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12434,
											"end": 12450,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12428,
											"end": 12451,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 12464,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "309"
										},
										{
											"begin": 12517,
											"end": 12521,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 12512,
											"end": 12515,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 12508,
											"end": 12522,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12494,
											"end": 12506,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12464,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "151"
										},
										{
											"begin": 12464,
											"end": 12523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 12464,
											"end": 12523,
											"name": "tag",
											"source": 34,
											"value": "309"
										},
										{
											"begin": 12464,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 12368,
											"end": 12533,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 12625,
											"end": 12629,
											"name": "PUSH",
											"source": 34,
											"value": "A0"
										},
										{
											"begin": 12618,
											"end": 12623,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12614,
											"end": 12630,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12608,
											"end": 12631,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 12644,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "310"
										},
										{
											"begin": 12701,
											"end": 12705,
											"name": "PUSH",
											"source": 34,
											"value": "A0"
										},
										{
											"begin": 12696,
											"end": 12699,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 12692,
											"end": 12706,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12678,
											"end": 12690,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12644,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 12644,
											"end": 12707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 12644,
											"end": 12707,
											"name": "tag",
											"source": 34,
											"value": "310"
										},
										{
											"begin": 12644,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 12543,
											"end": 12717,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 12809,
											"end": 12813,
											"name": "PUSH",
											"source": 34,
											"value": "C0"
										},
										{
											"begin": 12802,
											"end": 12807,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12798,
											"end": 12814,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12792,
											"end": 12815,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 12828,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "311"
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "PUSH",
											"source": 34,
											"value": "C0"
										},
										{
											"begin": 12880,
											"end": 12883,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 12876,
											"end": 12890,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12828,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 12828,
											"end": 12891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 12828,
											"end": 12891,
											"name": "tag",
											"source": 34,
											"value": "311"
										},
										{
											"begin": 12828,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 12727,
											"end": 12901,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 12989,
											"end": 12993,
											"name": "PUSH",
											"source": 34,
											"value": "E0"
										},
										{
											"begin": 12982,
											"end": 12987,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 12978,
											"end": 12994,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 12972,
											"end": 12995,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 13008,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "312"
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "PUSH",
											"source": 34,
											"value": "E0"
										},
										{
											"begin": 13060,
											"end": 13063,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 13056,
											"end": 13070,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13042,
											"end": 13054,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13008,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 13008,
											"end": 13071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13008,
											"end": 13071,
											"name": "tag",
											"source": 34,
											"value": "312"
										},
										{
											"begin": 13008,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 12911,
											"end": 13081,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13169,
											"end": 13175,
											"name": "PUSH",
											"source": 34,
											"value": "100"
										},
										{
											"begin": 13162,
											"end": 13167,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13152,
											"end": 13177,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 13190,
											"end": 13255,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "313"
										},
										{
											"begin": 13247,
											"end": 13253,
											"name": "PUSH",
											"source": 34,
											"value": "100"
										},
										{
											"begin": 13242,
											"end": 13245,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 13238,
											"end": 13254,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13224,
											"end": 13236,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13190,
											"end": 13255,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 13190,
											"end": 13255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13190,
											"end": 13255,
											"name": "tag",
											"source": 34,
											"value": "313"
										},
										{
											"begin": 13190,
											"end": 13255,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 13091,
											"end": 13265,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13352,
											"end": 13358,
											"name": "PUSH",
											"source": 34,
											"value": "120"
										},
										{
											"begin": 13345,
											"end": 13350,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13341,
											"end": 13359,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13335,
											"end": 13360,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 13373,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "314"
										},
										{
											"begin": 13430,
											"end": 13436,
											"name": "PUSH",
											"source": 34,
											"value": "120"
										},
										{
											"begin": 13425,
											"end": 13428,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 13421,
											"end": 13437,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13407,
											"end": 13419,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13373,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "149"
										},
										{
											"begin": 13373,
											"end": 13438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13373,
											"end": 13438,
											"name": "tag",
											"source": 34,
											"value": "314"
										},
										{
											"begin": 13373,
											"end": 13438,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 13275,
											"end": 13448,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13534,
											"end": 13540,
											"name": "PUSH",
											"source": 34,
											"value": "140"
										},
										{
											"begin": 13527,
											"end": 13532,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13523,
											"end": 13541,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13517,
											"end": 13542,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 13555,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "315"
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "PUSH",
											"source": 34,
											"value": "140"
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 13603,
											"end": 13619,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13589,
											"end": 13601,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13555,
											"end": 13620,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 13555,
											"end": 13620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13555,
											"end": 13620,
											"name": "tag",
											"source": 34,
											"value": "315"
										},
										{
											"begin": 13555,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 13458,
											"end": 13630,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11622,
											"end": 13637,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11500,
											"end": 13637,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11500,
											"end": 13637,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 11500,
											"end": 13637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13643,
											"end": 13978,
											"name": "tag",
											"source": 34,
											"value": "65"
										},
										{
											"begin": 13643,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 13792,
											"end": 13796,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 13830,
											"end": 13833,
											"name": "PUSH",
											"source": 34,
											"value": "160"
										},
										{
											"begin": 13819,
											"end": 13828,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 13815,
											"end": 13834,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13807,
											"end": 13834,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 13807,
											"end": 13834,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13844,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "317"
										},
										{
											"begin": 13968,
											"end": 13969,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 13957,
											"end": 13966,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 13953,
											"end": 13970,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 13944,
											"end": 13950,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 13844,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "153"
										},
										{
											"begin": 13844,
											"end": 13971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13844,
											"end": 13971,
											"name": "tag",
											"source": 34,
											"value": "317"
										},
										{
											"begin": 13844,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 13643,
											"end": 13978,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 13643,
											"end": 13978,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 13643,
											"end": 13978,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13643,
											"end": 13978,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13643,
											"end": 13978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 13984,
											"end": 14127,
											"name": "tag",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 13984,
											"end": 14127,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14041,
											"end": 14046,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 14072,
											"end": 14078,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 14066,
											"end": 14079,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 14057,
											"end": 14079,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 14057,
											"end": 14079,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14088,
											"end": 14121,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "319"
										},
										{
											"begin": 14115,
											"end": 14120,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 14088,
											"end": 14121,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "122"
										},
										{
											"begin": 14088,
											"end": 14121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14088,
											"end": 14121,
											"name": "tag",
											"source": 34,
											"value": "319"
										},
										{
											"begin": 14088,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 13984,
											"end": 14127,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 13984,
											"end": 14127,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 13984,
											"end": 14127,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13984,
											"end": 14127,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 13984,
											"end": 14127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14133,
											"end": 14255,
											"name": "tag",
											"source": 34,
											"value": "155"
										},
										{
											"begin": 14133,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14206,
											"end": 14230,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "321"
										},
										{
											"begin": 14224,
											"end": 14229,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 14206,
											"end": 14230,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "133"
										},
										{
											"begin": 14206,
											"end": 14230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14206,
											"end": 14230,
											"name": "tag",
											"source": 34,
											"value": "321"
										},
										{
											"begin": 14206,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14199,
											"end": 14204,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 14196,
											"end": 14231,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 14186,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "322"
										},
										{
											"begin": 14186,
											"end": 14249,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 14245,
											"end": 14246,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14243,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 14235,
											"end": 14247,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 14186,
											"end": 14249,
											"name": "tag",
											"source": 34,
											"value": "322"
										},
										{
											"begin": 14186,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14133,
											"end": 14255,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14133,
											"end": 14255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14261,
											"end": 14404,
											"name": "tag",
											"source": 34,
											"value": "156"
										},
										{
											"begin": 14261,
											"end": 14404,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14318,
											"end": 14323,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 14349,
											"end": 14355,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 14343,
											"end": 14356,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 14334,
											"end": 14356,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 14334,
											"end": 14356,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14365,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "324"
										},
										{
											"begin": 14392,
											"end": 14397,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 14365,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "155"
										},
										{
											"begin": 14365,
											"end": 14398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14365,
											"end": 14398,
											"name": "tag",
											"source": 34,
											"value": "324"
										},
										{
											"begin": 14365,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14261,
											"end": 14404,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 14261,
											"end": 14404,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 14261,
											"end": 14404,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14261,
											"end": 14404,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14261,
											"end": 14404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "tag",
											"source": 34,
											"value": "69"
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14507,
											"end": 14513,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 14515,
											"end": 14521,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 14523,
											"end": 14529,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 14531,
											"end": 14537,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 14580,
											"end": 14583,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 14568,
											"end": 14577,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 14559,
											"end": 14566,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 14555,
											"end": 14578,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 14551,
											"end": 14584,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 14548,
											"end": 14668,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 14548,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "326"
										},
										{
											"begin": 14548,
											"end": 14668,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 14587,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "327"
										},
										{
											"begin": 14587,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 14587,
											"end": 14666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14587,
											"end": 14666,
											"name": "tag",
											"source": 34,
											"value": "327"
										},
										{
											"begin": 14587,
											"end": 14666,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14548,
											"end": 14668,
											"name": "tag",
											"source": 34,
											"value": "326"
										},
										{
											"begin": 14548,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14707,
											"end": 14708,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 14732,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "328"
										},
										{
											"begin": 14788,
											"end": 14795,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 14779,
											"end": 14785,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 14768,
											"end": 14777,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 14764,
											"end": 14786,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 14732,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 14732,
											"end": 14796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14732,
											"end": 14796,
											"name": "tag",
											"source": 34,
											"value": "328"
										},
										{
											"begin": 14732,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14722,
											"end": 14796,
											"name": "SWAP5",
											"source": 34
										},
										{
											"begin": 14722,
											"end": 14796,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14678,
											"end": 14806,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14845,
											"end": 14847,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 14871,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "329"
										},
										{
											"begin": 14927,
											"end": 14934,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 14918,
											"end": 14924,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 14907,
											"end": 14916,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 14903,
											"end": 14925,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 14871,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "156"
										},
										{
											"begin": 14871,
											"end": 14935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 14871,
											"end": 14935,
											"name": "tag",
											"source": 34,
											"value": "329"
										},
										{
											"begin": 14871,
											"end": 14935,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 14861,
											"end": 14935,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 14861,
											"end": 14935,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14816,
											"end": 14945,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14984,
											"end": 14986,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 15010,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "330"
										},
										{
											"begin": 15066,
											"end": 15073,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 15057,
											"end": 15063,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15046,
											"end": 15055,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 15042,
											"end": 15064,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 15010,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 15010,
											"end": 15074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15010,
											"end": 15074,
											"name": "tag",
											"source": 34,
											"value": "330"
										},
										{
											"begin": 15010,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15000,
											"end": 15074,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 15000,
											"end": 15074,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14955,
											"end": 15084,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15123,
											"end": 15125,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "331"
										},
										{
											"begin": 15205,
											"end": 15212,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 15196,
											"end": 15202,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15185,
											"end": 15194,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 15181,
											"end": 15203,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 15149,
											"end": 15213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "tag",
											"source": 34,
											"value": "331"
										},
										{
											"begin": 15149,
											"end": 15213,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15139,
											"end": 15213,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 15139,
											"end": 15213,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15094,
											"end": 15223,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "SWAP6",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "SWAP5",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 14410,
											"end": 15230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15236,
											"end": 15430,
											"name": "tag",
											"source": 34,
											"value": "74"
										},
										{
											"begin": 15236,
											"end": 15430,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "333"
										},
										{
											"begin": 15314,
											"end": 15315,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15296,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 15296,
											"end": 15316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15296,
											"end": 15316,
											"name": "tag",
											"source": 34,
											"value": "333"
										},
										{
											"begin": 15296,
											"end": 15316,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15291,
											"end": 15316,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 15291,
											"end": 15316,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15330,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "334"
										},
										{
											"begin": 15348,
											"end": 15349,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 15330,
											"end": 15350,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "121"
										},
										{
											"begin": 15330,
											"end": 15350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15330,
											"end": 15350,
											"name": "tag",
											"source": 34,
											"value": "334"
										},
										{
											"begin": 15330,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15325,
											"end": 15350,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 15325,
											"end": 15350,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15374,
											"end": 15375,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15371,
											"end": 15372,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15367,
											"end": 15376,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 15359,
											"end": 15376,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 15359,
											"end": 15376,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15398,
											"end": 15399,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 15392,
											"end": 15396,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 15389,
											"end": 15400,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 15386,
											"end": 15423,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 15386,
											"end": 15423,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "335"
										},
										{
											"begin": 15386,
											"end": 15423,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "336"
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "148"
										},
										{
											"begin": 15403,
											"end": 15421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "tag",
											"source": 34,
											"value": "336"
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15386,
											"end": 15423,
											"name": "tag",
											"source": 34,
											"value": "335"
										},
										{
											"begin": 15386,
											"end": 15423,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15236,
											"end": 15430,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 15236,
											"end": 15430,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 15236,
											"end": 15430,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15236,
											"end": 15430,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15236,
											"end": 15430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15564,
											"end": 16838,
											"name": "tag",
											"source": 34,
											"value": "157"
										},
										{
											"begin": 15564,
											"end": 16838,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15743,
											"end": 15747,
											"name": "PUSH",
											"source": 34,
											"value": "C0"
										},
										{
											"begin": 15738,
											"end": 15741,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15734,
											"end": 15748,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 15833,
											"end": 15837,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 15826,
											"end": 15831,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15822,
											"end": 15838,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 15816,
											"end": 15839,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 15852,
											"end": 15915,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "338"
										},
										{
											"begin": 15909,
											"end": 15913,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 15904,
											"end": 15907,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 15900,
											"end": 15914,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 15886,
											"end": 15898,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 15852,
											"end": 15915,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 15852,
											"end": 15915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 15852,
											"end": 15915,
											"name": "tag",
											"source": 34,
											"value": "338"
										},
										{
											"begin": 15852,
											"end": 15915,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15758,
											"end": 15925,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16017,
											"end": 16021,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 16010,
											"end": 16015,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16006,
											"end": 16022,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 16036,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "339"
										},
										{
											"begin": 16093,
											"end": 16097,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 16088,
											"end": 16091,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 16084,
											"end": 16098,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16070,
											"end": 16082,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16036,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 16036,
											"end": 16099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 16036,
											"end": 16099,
											"name": "tag",
											"source": 34,
											"value": "339"
										},
										{
											"begin": 16036,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 15935,
											"end": 16109,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16201,
											"end": 16205,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 16194,
											"end": 16199,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16190,
											"end": 16206,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16184,
											"end": 16207,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 16220,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "340"
										},
										{
											"begin": 16277,
											"end": 16281,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 16272,
											"end": 16275,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 16268,
											"end": 16282,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16254,
											"end": 16266,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16220,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 16220,
											"end": 16283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 16220,
											"end": 16283,
											"name": "tag",
											"source": 34,
											"value": "340"
										},
										{
											"begin": 16220,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 16119,
											"end": 16293,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16381,
											"end": 16385,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 16374,
											"end": 16379,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16370,
											"end": 16386,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16364,
											"end": 16387,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 16400,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "341"
										},
										{
											"begin": 16457,
											"end": 16461,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 16452,
											"end": 16455,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 16448,
											"end": 16462,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16434,
											"end": 16446,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16400,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 16400,
											"end": 16463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 16400,
											"end": 16463,
											"name": "tag",
											"source": 34,
											"value": "341"
										},
										{
											"begin": 16400,
											"end": 16463,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 16303,
											"end": 16473,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16561,
											"end": 16565,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 16554,
											"end": 16559,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16550,
											"end": 16566,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16544,
											"end": 16567,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 16580,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "342"
										},
										{
											"begin": 16637,
											"end": 16641,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 16632,
											"end": 16635,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 16628,
											"end": 16642,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16614,
											"end": 16626,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16580,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 16580,
											"end": 16643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 16580,
											"end": 16643,
											"name": "tag",
											"source": 34,
											"value": "342"
										},
										{
											"begin": 16580,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 16483,
											"end": 16653,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16739,
											"end": 16743,
											"name": "PUSH",
											"source": 34,
											"value": "A0"
										},
										{
											"begin": 16732,
											"end": 16737,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16728,
											"end": 16744,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16722,
											"end": 16745,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 16758,
											"end": 16821,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "343"
										},
										{
											"begin": 16815,
											"end": 16819,
											"name": "PUSH",
											"source": 34,
											"value": "A0"
										},
										{
											"begin": 16810,
											"end": 16813,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 16806,
											"end": 16820,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 16792,
											"end": 16804,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 16758,
											"end": 16821,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 16758,
											"end": 16821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 16758,
											"end": 16821,
											"name": "tag",
											"source": 34,
											"value": "343"
										},
										{
											"begin": 16758,
											"end": 16821,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 16663,
											"end": 16831,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15712,
											"end": 16838,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15564,
											"end": 16838,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15564,
											"end": 16838,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 15564,
											"end": 16838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 16844,
											"end": 17231,
											"name": "tag",
											"source": 34,
											"value": "83"
										},
										{
											"begin": 16844,
											"end": 17231,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17019,
											"end": 17023,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 17057,
											"end": 17060,
											"name": "PUSH",
											"source": 34,
											"value": "C0"
										},
										{
											"begin": 17046,
											"end": 17055,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 17042,
											"end": 17061,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 17034,
											"end": 17061,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 17034,
											"end": 17061,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17071,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "345"
										},
										{
											"begin": 17221,
											"end": 17222,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 17210,
											"end": 17219,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 17206,
											"end": 17223,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 17197,
											"end": 17203,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 17071,
											"end": 17224,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "157"
										},
										{
											"begin": 17071,
											"end": 17224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17071,
											"end": 17224,
											"name": "tag",
											"source": 34,
											"value": "345"
										},
										{
											"begin": 17071,
											"end": 17224,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 16844,
											"end": 17231,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 16844,
											"end": 17231,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 16844,
											"end": 17231,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16844,
											"end": 17231,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 16844,
											"end": 17231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "tag",
											"source": 34,
											"value": "87"
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17325,
											"end": 17331,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 17333,
											"end": 17339,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 17341,
											"end": 17347,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 17390,
											"end": 17392,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 17378,
											"end": 17387,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 17369,
											"end": 17376,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 17365,
											"end": 17388,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 17361,
											"end": 17393,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 17358,
											"end": 17477,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 17358,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "347"
										},
										{
											"begin": 17358,
											"end": 17477,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 17396,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "348"
										},
										{
											"begin": 17396,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "115"
										},
										{
											"begin": 17396,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17396,
											"end": 17475,
											"name": "tag",
											"source": 34,
											"value": "348"
										},
										{
											"begin": 17396,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17358,
											"end": 17477,
											"name": "tag",
											"source": 34,
											"value": "347"
										},
										{
											"begin": 17358,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 17541,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "349"
										},
										{
											"begin": 17597,
											"end": 17604,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 17588,
											"end": 17594,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 17577,
											"end": 17586,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 17541,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "156"
										},
										{
											"begin": 17541,
											"end": 17605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17541,
											"end": 17605,
											"name": "tag",
											"source": 34,
											"value": "349"
										},
										{
											"begin": 17541,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17531,
											"end": 17605,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 17531,
											"end": 17605,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17487,
											"end": 17615,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17654,
											"end": 17656,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 17680,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "350"
										},
										{
											"begin": 17736,
											"end": 17743,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 17727,
											"end": 17733,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 17716,
											"end": 17725,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 17712,
											"end": 17734,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 17680,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 17680,
											"end": 17744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17680,
											"end": 17744,
											"name": "tag",
											"source": 34,
											"value": "350"
										},
										{
											"begin": 17680,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17670,
											"end": 17744,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 17670,
											"end": 17744,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17625,
											"end": 17754,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17793,
											"end": 17795,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 17819,
											"end": 17883,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "351"
										},
										{
											"begin": 17875,
											"end": 17882,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 17866,
											"end": 17872,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 17855,
											"end": 17864,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 17851,
											"end": 17873,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 17819,
											"end": 17883,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 17819,
											"end": 17883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17819,
											"end": 17883,
											"name": "tag",
											"source": 34,
											"value": "351"
										},
										{
											"begin": 17819,
											"end": 17883,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17809,
											"end": 17883,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 17809,
											"end": 17883,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17764,
											"end": 17893,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 17237,
											"end": 17900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "tag",
											"source": 34,
											"value": "90"
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18027,
											"end": 18031,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18065,
											"end": 18067,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 18054,
											"end": 18063,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 18050,
											"end": 18068,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18042,
											"end": 18068,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 18042,
											"end": 18068,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18078,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "353"
										},
										{
											"begin": 18146,
											"end": 18147,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18135,
											"end": 18144,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 18131,
											"end": 18148,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18122,
											"end": 18128,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 18078,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "135"
										},
										{
											"begin": 18078,
											"end": 18149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18078,
											"end": 18149,
											"name": "tag",
											"source": 34,
											"value": "353"
										},
										{
											"begin": 18078,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18159,
											"end": 18231,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "354"
										},
										{
											"begin": 18227,
											"end": 18229,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 18216,
											"end": 18225,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 18212,
											"end": 18230,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18203,
											"end": 18209,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 18159,
											"end": 18231,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "132"
										},
										{
											"begin": 18159,
											"end": 18231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18159,
											"end": 18231,
											"name": "tag",
											"source": 34,
											"value": "354"
										},
										{
											"begin": 18159,
											"end": 18231,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 17906,
											"end": 18238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18244,
											"end": 18342,
											"name": "tag",
											"source": 34,
											"value": "158"
										},
										{
											"begin": 18244,
											"end": 18342,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18295,
											"end": 18301,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18334,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 18323,
											"end": 18335,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 18313,
											"end": 18335,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 18313,
											"end": 18335,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18244,
											"end": 18342,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 18244,
											"end": 18342,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 18244,
											"end": 18342,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18244,
											"end": 18342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18348,
											"end": 18495,
											"name": "tag",
											"source": 34,
											"value": "159"
										},
										{
											"begin": 18348,
											"end": 18495,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18449,
											"end": 18460,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18486,
											"end": 18489,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 18471,
											"end": 18489,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 18471,
											"end": 18489,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18348,
											"end": 18495,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 18348,
											"end": 18495,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 18348,
											"end": 18495,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18348,
											"end": 18495,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18348,
											"end": 18495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18501,
											"end": 18747,
											"name": "tag",
											"source": 34,
											"value": "160"
										},
										{
											"begin": 18501,
											"end": 18747,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18582,
											"end": 18583,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "tag",
											"source": 34,
											"value": "358"
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18606,
											"end": 18612,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 18603,
											"end": 18604,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 18600,
											"end": 18613,
											"name": "LT",
											"source": 34
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "360"
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 18691,
											"end": 18692,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 18686,
											"end": 18689,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 18682,
											"end": 18693,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18676,
											"end": 18694,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 18672,
											"end": 18673,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 18667,
											"end": 18670,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 18663,
											"end": 18674,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18656,
											"end": 18695,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 18628,
											"end": 18630,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 18625,
											"end": 18626,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 18621,
											"end": 18631,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18616,
											"end": 18631,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 18616,
											"end": 18631,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "358"
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "tag",
											"source": 34,
											"value": "360"
										},
										{
											"begin": 18592,
											"end": 18705,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18739,
											"end": 18740,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18736,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 18725,
											"end": 18728,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 18721,
											"end": 18737,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 18714,
											"end": 18741,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 18563,
											"end": 18747,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18501,
											"end": 18747,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18501,
											"end": 18747,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18501,
											"end": 18747,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18501,
											"end": 18747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18753,
											"end": 19139,
											"name": "tag",
											"source": 34,
											"value": "161"
										},
										{
											"begin": 18753,
											"end": 19139,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18857,
											"end": 18860,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 18923,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "362"
										},
										{
											"begin": 18917,
											"end": 18922,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 18885,
											"end": 18923,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "158"
										},
										{
											"begin": 18885,
											"end": 18923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18885,
											"end": 18923,
											"name": "tag",
											"source": 34,
											"value": "362"
										},
										{
											"begin": 18885,
											"end": 18923,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18939,
											"end": 19027,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "363"
										},
										{
											"begin": 19020,
											"end": 19026,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 19015,
											"end": 19018,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 18939,
											"end": 19027,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "159"
										},
										{
											"begin": 18939,
											"end": 19027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 18939,
											"end": 19027,
											"name": "tag",
											"source": 34,
											"value": "363"
										},
										{
											"begin": 18939,
											"end": 19027,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 18932,
											"end": 19027,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 18932,
											"end": 19027,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19036,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "364"
										},
										{
											"begin": 19094,
											"end": 19100,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 19089,
											"end": 19092,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 19082,
											"end": 19086,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 19075,
											"end": 19080,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 19071,
											"end": 19087,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 19036,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "160"
										},
										{
											"begin": 19036,
											"end": 19101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19036,
											"end": 19101,
											"name": "tag",
											"source": 34,
											"value": "364"
										},
										{
											"begin": 19036,
											"end": 19101,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19126,
											"end": 19132,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 19121,
											"end": 19124,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 19117,
											"end": 19133,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 19110,
											"end": 19133,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 19110,
											"end": 19133,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18861,
											"end": 19139,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18753,
											"end": 19139,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 18753,
											"end": 19139,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 18753,
											"end": 19139,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18753,
											"end": 19139,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 18753,
											"end": 19139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19145,
											"end": 19416,
											"name": "tag",
											"source": 34,
											"value": "92"
										},
										{
											"begin": 19145,
											"end": 19416,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19275,
											"end": 19278,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 19297,
											"end": 19390,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "366"
										},
										{
											"begin": 19386,
											"end": 19389,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 19377,
											"end": 19383,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 19297,
											"end": 19390,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "161"
										},
										{
											"begin": 19297,
											"end": 19390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19297,
											"end": 19390,
											"name": "tag",
											"source": 34,
											"value": "366"
										},
										{
											"begin": 19297,
											"end": 19390,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19290,
											"end": 19390,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 19290,
											"end": 19390,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19407,
											"end": 19410,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 19400,
											"end": 19410,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 19400,
											"end": 19410,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19145,
											"end": 19416,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 19145,
											"end": 19416,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 19145,
											"end": 19416,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19145,
											"end": 19416,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19145,
											"end": 19416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19422,
											"end": 19591,
											"name": "tag",
											"source": 34,
											"value": "162"
										},
										{
											"begin": 19422,
											"end": 19591,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19506,
											"end": 19517,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 19540,
											"end": 19546,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 19535,
											"end": 19538,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 19528,
											"end": 19547,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 19580,
											"end": 19584,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 19575,
											"end": 19578,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 19571,
											"end": 19585,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 19556,
											"end": 19585,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 19556,
											"end": 19585,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19422,
											"end": 19591,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 19422,
											"end": 19591,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 19422,
											"end": 19591,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19422,
											"end": 19591,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19422,
											"end": 19591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19597,
											"end": 19749,
											"name": "tag",
											"source": 34,
											"value": "163"
										},
										{
											"begin": 19597,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19737,
											"end": 19741,
											"name": "PUSH",
											"source": 34,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19733,
											"end": 19734,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 19725,
											"end": 19731,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 19721,
											"end": 19735,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 19714,
											"end": 19742,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 19597,
											"end": 19749,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19597,
											"end": 19749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19755,
											"end": 20120,
											"name": "tag",
											"source": 34,
											"value": "164"
										},
										{
											"begin": 19755,
											"end": 20120,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19897,
											"end": 19900,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 19918,
											"end": 19984,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "370"
										},
										{
											"begin": 19982,
											"end": 19983,
											"name": "PUSH",
											"source": 34,
											"value": "2"
										},
										{
											"begin": 19977,
											"end": 19980,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 19918,
											"end": 19984,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "162"
										},
										{
											"begin": 19918,
											"end": 19984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19918,
											"end": 19984,
											"name": "tag",
											"source": 34,
											"value": "370"
										},
										{
											"begin": 19918,
											"end": 19984,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 19911,
											"end": 19984,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 19911,
											"end": 19984,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19993,
											"end": 20086,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "371"
										},
										{
											"begin": 20082,
											"end": 20085,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 19993,
											"end": 20086,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "163"
										},
										{
											"begin": 19993,
											"end": 20086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 19993,
											"end": 20086,
											"name": "tag",
											"source": 34,
											"value": "371"
										},
										{
											"begin": 19993,
											"end": 20086,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 20111,
											"end": 20113,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 20106,
											"end": 20109,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 20102,
											"end": 20114,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 20095,
											"end": 20114,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 20095,
											"end": 20114,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19755,
											"end": 20120,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 19755,
											"end": 20120,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 19755,
											"end": 20120,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 19755,
											"end": 20120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 20126,
											"end": 20545,
											"name": "tag",
											"source": 34,
											"value": "101"
										},
										{
											"begin": 20126,
											"end": 20545,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 20292,
											"end": 20296,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 20330,
											"end": 20332,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 20319,
											"end": 20328,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 20315,
											"end": 20333,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 20307,
											"end": 20333,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 20307,
											"end": 20333,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20379,
											"end": 20388,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 20373,
											"end": 20377,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 20369,
											"end": 20389,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 20365,
											"end": 20366,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 20354,
											"end": 20363,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 20350,
											"end": 20367,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 20343,
											"end": 20390,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 20407,
											"end": 20538,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "373"
										},
										{
											"begin": 20533,
											"end": 20537,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 20407,
											"end": 20538,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "164"
										},
										{
											"begin": 20407,
											"end": 20538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 20407,
											"end": 20538,
											"name": "tag",
											"source": 34,
											"value": "373"
										},
										{
											"begin": 20407,
											"end": 20538,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 20399,
											"end": 20538,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 20399,
											"end": 20538,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20126,
											"end": 20545,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 20126,
											"end": 20545,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 20126,
											"end": 20545,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20126,
											"end": 20545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 20551,
											"end": 20703,
											"name": "tag",
											"source": 34,
											"value": "165"
										},
										{
											"begin": 20551,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 20691,
											"end": 20695,
											"name": "PUSH",
											"source": 34,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20687,
											"end": 20688,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 20679,
											"end": 20685,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 20675,
											"end": 20689,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 20668,
											"end": 20696,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 20551,
											"end": 20703,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20551,
											"end": 20703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 20709,
											"end": 21074,
											"name": "tag",
											"source": 34,
											"value": "166"
										},
										{
											"begin": 20709,
											"end": 21074,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 20851,
											"end": 20854,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 20872,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "376"
										},
										{
											"begin": 20936,
											"end": 20937,
											"name": "PUSH",
											"source": 34,
											"value": "2"
										},
										{
											"begin": 20931,
											"end": 20934,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 20872,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "162"
										},
										{
											"begin": 20872,
											"end": 20938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 20872,
											"end": 20938,
											"name": "tag",
											"source": 34,
											"value": "376"
										},
										{
											"begin": 20872,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 20865,
											"end": 20938,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 20865,
											"end": 20938,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20947,
											"end": 21040,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "377"
										},
										{
											"begin": 21036,
											"end": 21039,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 20947,
											"end": 21040,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "165"
										},
										{
											"begin": 20947,
											"end": 21040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 20947,
											"end": 21040,
											"name": "tag",
											"source": 34,
											"value": "377"
										},
										{
											"begin": 20947,
											"end": 21040,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 21065,
											"end": 21067,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 21060,
											"end": 21063,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 21056,
											"end": 21068,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 21049,
											"end": 21068,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 21049,
											"end": 21068,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20709,
											"end": 21074,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 20709,
											"end": 21074,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 20709,
											"end": 21074,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 20709,
											"end": 21074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 21080,
											"end": 21499,
											"name": "tag",
											"source": 34,
											"value": "113"
										},
										{
											"begin": 21080,
											"end": 21499,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 21246,
											"end": 21250,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 21284,
											"end": 21286,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 21273,
											"end": 21282,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 21269,
											"end": 21287,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 21261,
											"end": 21287,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 21261,
											"end": 21287,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 21333,
											"end": 21342,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 21327,
											"end": 21331,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 21323,
											"end": 21343,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 21319,
											"end": 21320,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 21308,
											"end": 21317,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 21304,
											"end": 21321,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 21297,
											"end": 21344,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 21361,
											"end": 21492,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "379"
										},
										{
											"begin": 21487,
											"end": 21491,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 21361,
											"end": 21492,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "166"
										},
										{
											"begin": 21361,
											"end": 21492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 34
										},
										{
											"begin": 21361,
											"end": 21492,
											"name": "tag",
											"source": 34,
											"value": "379"
										},
										{
											"begin": 21361,
											"end": 21492,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 21353,
											"end": 21492,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 21353,
											"end": 21492,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 21080,
											"end": 21499,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 21080,
											"end": 21499,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 21080,
											"end": 21499,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 21080,
											"end": 21499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 34
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposits(uint256)": "b02c43d0",
							"increaseLiquidityCurrentRange(uint256,uint256,uint256)": "617d6d6e",
							"mintNewPosition((address,address,uint24,uint256,uint256))": "591c7191",
							"nonfungiblePositionManager()": "b44a2722",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"_nonfungiblePositionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAdd0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAdd1\",\"type\":\"uint256\"}],\"name\":\"increaseLiquidityCurrentRange\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AddLiquidity.MintNewPositionParams\",\"name\":\"mintParams\",\"type\":\"tuple\"}],\"name\":\"mintNewPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mintNewPosition((address,address,uint24,uint256,uint256))\":{\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for the position\",\"tokenId\":\"The id of the newly minted ERC721\"}}},\"stateVariables\":{\"deposits\":{\"details\":\"deposits[tokenId] => Deposit\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mintNewPosition((address,address,uint24,uint256,uint256))\":{\"notice\":\"Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 token0 and 1000 token1 in liquidity\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AddLiquidity.sol\":\"AddLiquidity\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"contracts/AddLiquidity.sol\":{\"keccak256\":\"0xfa6cf55f0eb1469fa39685532cd9155c32449eb45ea7c9ab43c1c4b8eaa4b6ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59de664f8badf6ba2f83743bd7851cbddcc59483dd4a80b3fbe9478048821334\",\"dweb:/ipfs/QmUTkXtB8FusxTMDAwMF1U6gV1c5CZ4zz8kT56HfYCUuYy\"]},\"contracts/base/LiquidityManagement.sol\":{\"keccak256\":\"0xf4bcfbecaed79fad739e1886c0ec20de16f3c6e36a459a3bd4f844d86423e158\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3e9971e4e979c2abc9ca44be0c6b30c5c7606644806e06d9815b5a15e04694ef\",\"dweb:/ipfs/QmRgbYRixEjZUe2iyqrgnNozfJL73b14aMR2AMYixo95Nt\"]},\"contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xec69cda51970fbd5417501e6cb0a14e4a3c4782c94731d1176dbcb7a4ceaf18e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62fb13f734b891537a318c1aa2197fbf8eb532fe11b8620ea0c948198236fb45\",\"dweb:/ipfs/QmNtg7nZUwk3stnZeMkYDc4WDyfhq3qsStaFgWydKMKCWS\"]},\"contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x7f8222ccce886042ac8da21290fa55f92d68715fdc8fcc57ffb4ac0a7f0ee5cc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e04a603df10149d4f46419220d6eb661c7d485559d2bfc68302e9e63427da110\",\"dweb:/ipfs/QmbjQXmrvXQfE7CQKayJ2haGrb2Mp6TsD5h6UMubtPU2cR\"]},\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84\",\"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x6ac9ef0ef2a0d45e9f00a82a3641a8155839ce9eb1695d517af590a2a77fbfaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096d4af6070fa18e3e1c61898d72ce3dbc0dfe32ba2cb2d9fb4235aef69e1226\",\"dweb:/ipfs/QmNukaEBdy4vj1GjTwgrFckWAAP78taPdrcUpxSTqvfTUR\"]},\"interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xddb622a2a3477ec05ebda998d826e983d380220d63751474bbe6980633a73b04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567c87f2c3bba3dc84b9afc29302243197a3603c9d390fe6b98ca84f0d92ced2\",\"dweb:/ipfs/QmPQtVyqJGuCdEQUynEDhVGpVr3Tjb24FFmtqStya1sKQu\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0x45afe24d08f682db601e0a3a275d821e5307e5623675f33ac3ed1734bde7e6e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c2905e23ead4990271e590fddab53b77c596741b5b7f1795ff792c54b68f8f\",\"dweb:/ipfs/QmQFEh5doRaJXLDjSr6SbNCXW8CB3MRKka2qaGYmyzUp1Y\"]},\"interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x6f1dbfe6e2ffe63e8019070cfc06e5a97ed657666ceb22df2764ded1d03be47b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d73f986d5cbe5f9445b7160aa276fb7c1e136339204c3e3a5f1c1d3495c73c29\",\"dweb:/ipfs/QmbTaB8ZbEFXdXNrAJZMEAPX8Aiy4SsYsppvRQ7UwKxS8g\"]},\"interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xbebd2be6d6d821744eff4c5deae62fd25a71fb65bed5dee33a03615903ee3b1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a6b36c622bb33c5c851d211cf44b70d3d78074c0a294be376fe99e083a6ac\",\"dweb:/ipfs/QmYc6Pdqj7u6dARiJDwGoGdHGMJah58vENY44ymsWUKhG5\"]},\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x0721f9a63e9f273cb46949ae3218f64c9a613c7406f7c1e579be141f1f673021\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d34574a36aad0b7d95d0043f988104b87402fe78a5e5ed606dd9e40ada36bdd\",\"dweb:/ipfs/QmNvYQpcTYQL1BbEStB68Y1xM3dCazs8ZYMkffATJmQspU\"]},\"interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x86864d56ab9c90cd8b55b9fbbd649dac563a50ef5198216f4d64eee9ea214844\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00d88f12cb4f8ed2a878eec0fada480a119ef879a385bc114a9543585dca5053\",\"dweb:/ipfs/Qmcs7RkRZL9QjPpwZNe7ni4WWsc8ng4jAuVcXjo2RUAbDp\"]},\"interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x2d05cad9db03edb62e0294a2405461e94bafe0f7a8b4406818bfd25cc2778d83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f491725a4b43b999034c89bed6716903a5f08f8183d91c1ac4bf8d6596c5ed8\",\"dweb:/ipfs/QmcegGmqaAf7DVYYMcjmhYDNy5nqyYjeLpX6cDJycngx2a\"]},\"interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0xaf904ce3780579c240ac33e5f5aa81871cd3b9f5ee80062e56b22d0720778f6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://abc0470449ff8c6dd1387d084f2e4cc65acff3c580efbda65309f73664e7f1b1\",\"dweb:/ipfs/QmVoYieDdN16RevqXMC7hx7kYo3B3amZNsvykn5ixUcxDs\"]},\"interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x27762f5100350f2413440a12588ea06b01ff98ba2b114cd9fff2609b9decd726\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1379fee64912d089e8d0900d3b5ff325afb73ba442e4e39dc9268ec289bc1337\",\"dweb:/ipfs/Qmdbv7S4CbrdVkgHR4rAmc2mzkj6Ru8P4VcKKNRBZAoSfu\"]},\"interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xa423f4498d2d6afe0ab41ff99348b1b67f9e2c2ef6e65f35336c9d3f306daf56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3dc3bd977f65c3197e83398966df249774b95c0e711415cdfaf110fa1bffe26c\",\"dweb:/ipfs/QmUrGRLYKhRhWJW6637YevkQGXYqT92JybkQTwCTAzvGv8\"]},\"interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x33e31bebc692bce4bbe0d5575cad32c1473aebaebd8164733a023572471136ff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4130925a601ba87ed919f18563f9fbbc4099cfe9b51fec09a0623de25724a9b0\",\"dweb:/ipfs/Qmd5czyfkiRR2jZ2n8ZeKDCAH6HTyzcKkEM1rWLZ9Coozp\"]},\"interfaces/IWETH9.sol\":{\"keccak256\":\"0x82959d397297efe564b916dc07bbf1659915140be0fc0061a7ebd049d2ed9c9a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d1de5a5dd39a0a8244b68e0d5413c8a83b40a2b931cbdec6ad880accbaac8f9\",\"dweb:/ipfs/QmTwgbh66BTNF2C1Yikv22Rs8e5qK65JDeAzY2EgxUtTmc\"]},\"interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0xaa9d30a71d4a9a1ddad57b3ef67f699ffe639a25b4a3004a7e872ca762fa222d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20c5d9622646870c16313f0d2e3504b153509d64ae9dcabeafb339fee9133551\",\"dweb:/ipfs/QmbEh7vrR82dRBPCGVVoXoMkPgMLR9yzyPY6jCGXkgKyjY\"]},\"interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9dcec803e1bb4d5a5adb72ab959c3957cbeff429f4b1c829374372c684990ee3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8348cea7c3d67526b5702bb3eceacba6652d0c7fcbaea6aa739a6d474d91bbfc\",\"dweb:/ipfs/QmYYhEHSnJSsNBPPjXTke4bpXW6YtK9akeDof8eDVCoGVj\"]},\"interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x89c305b25f4c8e0b486efd7babf8b7c0eeceb417cdef24371320167edac4f1af\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7db14aa035390900cc65bc120828a8072d0d77b02af0776a3037046acd17cede\",\"dweb:/ipfs/QmfEdAF5ooeppuhKT7CbKfABYHekUPQvMoxNQfzrxXHjFE\"]},\"interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xa2f030ae26fb12eb82947791994474da6bbf3065658008ef18c6a37ea8c4ee6c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8554f3d48ee3433417c38ed7f7a9ca2c313679a9aa97e583b1b01af7c53c931e\",\"dweb:/ipfs/QmQsLobFDQrsn8Vgup86FAKEgJqb9ZUyhrejcVjoNgsnxF\"]},\"interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xba3a5ffc88dcc4133e943e23313e41476e29b8478ee1ba1495e353a8ad9141a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://36ef120748ee4dc22b31272f82820b00451059e6026d2b595bf39a863faf7d16\",\"dweb:/ipfs/QmSDzybBz4fjRgdt9Hx4eaTufGUZT142bNkPaZTQq5jSxv\"]},\"interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x0d3a6c36b5cc653a4a5db9a87c80f8439ae1f9f6e90edd45731bc40f60302e55\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0dd270ee8c749c67a6ddebe83b8e85a0133af2005e1caed2d4f9f041bd9beeb1\",\"dweb:/ipfs/Qmcdc6pGKkfStihb57kUbVSEPxEW421rifyRyWRgWTLbGg\"]},\"interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xed929228e67a5fd94861fff56f0f3ed33a5673acce2366e52f99ad8cbab4d7e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a45daeb13dd33b2c668455f02de50a9d1ec68f0dc012ba6e16f043aaa8c68afc\",\"dweb:/ipfs/QmRUFbtyWRV1iGGApVyeXJhacE5hXj8wjjWGUsgFAXaPEm\"]},\"libraries/CallbackValidation.sol\":{\"keccak256\":\"0x8f05f4e5101af37056084067627ae1e4ce71145b9e4cdcbf722ad394ed651674\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9cd3691bb4c0d69b993258f772bb39d0728244431f9e95bc88a7a0377b356421\",\"dweb:/ipfs/QmPdgHPpivKFTLzRDfe1xQP3UCE6zBnFiDHRYW4chtUc9Q\"]},\"libraries/FixedPoint96.sol\":{\"keccak256\":\"0x130c24f1de1a1c0f1c9b041654c24ccd101fb8d2c4ba081605bd20e8bfd7599b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ecc0ed5e67dfbd94862a9955879dd58007473cd917a40e03aae841f75f693c34\",\"dweb:/ipfs/QmYZ57RNqmXPJMCSjeEg4GGWFv8pptfJq1dp479Zx2YurQ\"]},\"libraries/FullMath.sol\":{\"keccak256\":\"0x64b61af37111d6035419dcc4e476084e46244df78b9ca7843a338632cae90516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4ccff2535b4df812a02013d8932cb6935256bbedfc8f29f5dbac3711e8a11cd\",\"dweb:/ipfs/QmajCAiGoxtM6yV48CAi91aZVhzf3WnymuHTVLSVKWq5Q7\"]},\"libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x84b695fe8e8faa6286f61e77a60632b06bc22f322d1ad3c764243ec57c654b66\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fe276e990a565142aa41355929e3ce90ff590304292edd40524490f535433aac\",\"dweb:/ipfs/QmYQGZ2qCWYgqhFLyHcoDNaMPpUE5Eiux3KHsH3bSkmMhy\"]},\"libraries/PoolAddress.sol\":{\"keccak256\":\"0x686b0ba1413a18052a4cad2132e88866be07f87f6f832847fb90e5e00d4ef87b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8084aab135d4256605f184c1e72958574f58f64c98d0f8ca510817b5d9178f9d\",\"dweb:/ipfs/QmSwkL5EMWJyzpX4dij4DaHLdeMyYUCdXbomGPEyQZET29\"]},\"libraries/TickMath.sol\":{\"keccak256\":\"0x0bc2419b67780f9ef41c80e685fd0613a94a9e16d738da259e181fbee8dc7ee2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://93d569d0044418e2730293efe4d0d10fd100f28fae137c05cdb92c684898a860\",\"dweb:/ipfs/QmYXRprqXE3uAGxXURQcuHs3QVZVwTmrv4924ShH6nMm3u\"]},\"libraries/TransferHelper.sol\":{\"keccak256\":\"0xf391b1d26025bf5d50ac10d4e84a1d1353f67c7109c2bb32f034cefab132a7a5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e45f9b60388a9d3280ff0595c0f799f76935f0caa13de1999a4b99cdd43f9563\",\"dweb:/ipfs/QmSNMTPHowQhV9ShLcMi86qjvhmqhBiAaEfxc4Bx1qAEP4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 39,
								"contract": "contracts/AddLiquidity.sol:AddLiquidity",
								"label": "deposits",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Deposit)33_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Deposit)33_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AddLiquidity.Deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(Deposit)33_storage"
							},
							"t_struct(Deposit)33_storage": {
								"encoding": "inplace",
								"label": "struct AddLiquidity.Deposit",
								"members": [
									{
										"astId": 30,
										"contract": "contracts/AddLiquidity.sol:AddLiquidity",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 32,
										"contract": "contracts/AddLiquidity.sol:AddLiquidity",
										"label": "liquidity",
										"offset": 0,
										"slot": "1",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mintNewPosition((address,address,uint24,uint256,uint256))": {
								"notice": "Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 token0 and 1000 token1 in liquidity"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/base/LiquidityManagement.sol": {
				"LiquidityManagement": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Owed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Owed",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3MintCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
									"amount1Owed": "The amount of token1 due to the pool for the minted liquidity",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#mint call"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Liquidity management functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#mint call\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Liquidity management functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Internal functions for safely managing liquidity in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/LiquidityManagement.sol\":\"LiquidityManagement\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/LiquidityManagement.sol\":{\"keccak256\":\"0xf4bcfbecaed79fad739e1886c0ec20de16f3c6e36a459a3bd4f844d86423e158\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3e9971e4e979c2abc9ca44be0c6b30c5c7606644806e06d9815b5a15e04694ef\",\"dweb:/ipfs/QmRgbYRixEjZUe2iyqrgnNozfJL73b14aMR2AMYixo95Nt\"]},\"contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xec69cda51970fbd5417501e6cb0a14e4a3c4782c94731d1176dbcb7a4ceaf18e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62fb13f734b891537a318c1aa2197fbf8eb532fe11b8620ea0c948198236fb45\",\"dweb:/ipfs/QmNtg7nZUwk3stnZeMkYDc4WDyfhq3qsStaFgWydKMKCWS\"]},\"contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x7f8222ccce886042ac8da21290fa55f92d68715fdc8fcc57ffb4ac0a7f0ee5cc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e04a603df10149d4f46419220d6eb661c7d485559d2bfc68302e9e63427da110\",\"dweb:/ipfs/QmbjQXmrvXQfE7CQKayJ2haGrb2Mp6TsD5h6UMubtPU2cR\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84\",\"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja\"]},\"interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x86864d56ab9c90cd8b55b9fbbd649dac563a50ef5198216f4d64eee9ea214844\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00d88f12cb4f8ed2a878eec0fada480a119ef879a385bc114a9543585dca5053\",\"dweb:/ipfs/Qmcs7RkRZL9QjPpwZNe7ni4WWsc8ng4jAuVcXjo2RUAbDp\"]},\"interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x2d05cad9db03edb62e0294a2405461e94bafe0f7a8b4406818bfd25cc2778d83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f491725a4b43b999034c89bed6716903a5f08f8183d91c1ac4bf8d6596c5ed8\",\"dweb:/ipfs/QmcegGmqaAf7DVYYMcjmhYDNy5nqyYjeLpX6cDJycngx2a\"]},\"interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xa423f4498d2d6afe0ab41ff99348b1b67f9e2c2ef6e65f35336c9d3f306daf56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3dc3bd977f65c3197e83398966df249774b95c0e711415cdfaf110fa1bffe26c\",\"dweb:/ipfs/QmUrGRLYKhRhWJW6637YevkQGXYqT92JybkQTwCTAzvGv8\"]},\"interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x33e31bebc692bce4bbe0d5575cad32c1473aebaebd8164733a023572471136ff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4130925a601ba87ed919f18563f9fbbc4099cfe9b51fec09a0623de25724a9b0\",\"dweb:/ipfs/Qmd5czyfkiRR2jZ2n8ZeKDCAH6HTyzcKkEM1rWLZ9Coozp\"]},\"interfaces/IWETH9.sol\":{\"keccak256\":\"0x82959d397297efe564b916dc07bbf1659915140be0fc0061a7ebd049d2ed9c9a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d1de5a5dd39a0a8244b68e0d5413c8a83b40a2b931cbdec6ad880accbaac8f9\",\"dweb:/ipfs/QmTwgbh66BTNF2C1Yikv22Rs8e5qK65JDeAzY2EgxUtTmc\"]},\"interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0xaa9d30a71d4a9a1ddad57b3ef67f699ffe639a25b4a3004a7e872ca762fa222d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20c5d9622646870c16313f0d2e3504b153509d64ae9dcabeafb339fee9133551\",\"dweb:/ipfs/QmbEh7vrR82dRBPCGVVoXoMkPgMLR9yzyPY6jCGXkgKyjY\"]},\"interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9dcec803e1bb4d5a5adb72ab959c3957cbeff429f4b1c829374372c684990ee3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8348cea7c3d67526b5702bb3eceacba6652d0c7fcbaea6aa739a6d474d91bbfc\",\"dweb:/ipfs/QmYYhEHSnJSsNBPPjXTke4bpXW6YtK9akeDof8eDVCoGVj\"]},\"interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x89c305b25f4c8e0b486efd7babf8b7c0eeceb417cdef24371320167edac4f1af\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7db14aa035390900cc65bc120828a8072d0d77b02af0776a3037046acd17cede\",\"dweb:/ipfs/QmfEdAF5ooeppuhKT7CbKfABYHekUPQvMoxNQfzrxXHjFE\"]},\"interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xa2f030ae26fb12eb82947791994474da6bbf3065658008ef18c6a37ea8c4ee6c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8554f3d48ee3433417c38ed7f7a9ca2c313679a9aa97e583b1b01af7c53c931e\",\"dweb:/ipfs/QmQsLobFDQrsn8Vgup86FAKEgJqb9ZUyhrejcVjoNgsnxF\"]},\"interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xba3a5ffc88dcc4133e943e23313e41476e29b8478ee1ba1495e353a8ad9141a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://36ef120748ee4dc22b31272f82820b00451059e6026d2b595bf39a863faf7d16\",\"dweb:/ipfs/QmSDzybBz4fjRgdt9Hx4eaTufGUZT142bNkPaZTQq5jSxv\"]},\"interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x0d3a6c36b5cc653a4a5db9a87c80f8439ae1f9f6e90edd45731bc40f60302e55\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0dd270ee8c749c67a6ddebe83b8e85a0133af2005e1caed2d4f9f041bd9beeb1\",\"dweb:/ipfs/Qmcdc6pGKkfStihb57kUbVSEPxEW421rifyRyWRgWTLbGg\"]},\"interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xed929228e67a5fd94861fff56f0f3ed33a5673acce2366e52f99ad8cbab4d7e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a45daeb13dd33b2c668455f02de50a9d1ec68f0dc012ba6e16f043aaa8c68afc\",\"dweb:/ipfs/QmRUFbtyWRV1iGGApVyeXJhacE5hXj8wjjWGUsgFAXaPEm\"]},\"libraries/CallbackValidation.sol\":{\"keccak256\":\"0x8f05f4e5101af37056084067627ae1e4ce71145b9e4cdcbf722ad394ed651674\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9cd3691bb4c0d69b993258f772bb39d0728244431f9e95bc88a7a0377b356421\",\"dweb:/ipfs/QmPdgHPpivKFTLzRDfe1xQP3UCE6zBnFiDHRYW4chtUc9Q\"]},\"libraries/FixedPoint96.sol\":{\"keccak256\":\"0x130c24f1de1a1c0f1c9b041654c24ccd101fb8d2c4ba081605bd20e8bfd7599b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ecc0ed5e67dfbd94862a9955879dd58007473cd917a40e03aae841f75f693c34\",\"dweb:/ipfs/QmYZ57RNqmXPJMCSjeEg4GGWFv8pptfJq1dp479Zx2YurQ\"]},\"libraries/FullMath.sol\":{\"keccak256\":\"0x64b61af37111d6035419dcc4e476084e46244df78b9ca7843a338632cae90516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4ccff2535b4df812a02013d8932cb6935256bbedfc8f29f5dbac3711e8a11cd\",\"dweb:/ipfs/QmajCAiGoxtM6yV48CAi91aZVhzf3WnymuHTVLSVKWq5Q7\"]},\"libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x84b695fe8e8faa6286f61e77a60632b06bc22f322d1ad3c764243ec57c654b66\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fe276e990a565142aa41355929e3ce90ff590304292edd40524490f535433aac\",\"dweb:/ipfs/QmYQGZ2qCWYgqhFLyHcoDNaMPpUE5Eiux3KHsH3bSkmMhy\"]},\"libraries/PoolAddress.sol\":{\"keccak256\":\"0x686b0ba1413a18052a4cad2132e88866be07f87f6f832847fb90e5e00d4ef87b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8084aab135d4256605f184c1e72958574f58f64c98d0f8ca510817b5d9178f9d\",\"dweb:/ipfs/QmSwkL5EMWJyzpX4dij4DaHLdeMyYUCdXbomGPEyQZET29\"]},\"libraries/TickMath.sol\":{\"keccak256\":\"0x0bc2419b67780f9ef41c80e685fd0613a94a9e16d738da259e181fbee8dc7ee2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://93d569d0044418e2730293efe4d0d10fd100f28fae137c05cdb92c684898a860\",\"dweb:/ipfs/QmYXRprqXE3uAGxXURQcuHs3QVZVwTmrv4924ShH6nMm3u\"]},\"libraries/TransferHelper.sol\":{\"keccak256\":\"0xf391b1d26025bf5d50ac10d4e84a1d1353f67c7109c2bb32f034cefab132a7a5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e45f9b60388a9d3280ff0595c0f799f76935f0caa13de1999a4b99cdd43f9563\",\"dweb:/ipfs/QmSNMTPHowQhV9ShLcMi86qjvhmqhBiAaEfxc4Bx1qAEP4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Internal functions for safely managing liquidity in Uniswap V3",
						"version": 1
					}
				}
			},
			"contracts/base/PeripheryImmutableState.sol": {
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9",
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory",
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\",\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\",\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/PeripheryImmutableState.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xec69cda51970fbd5417501e6cb0a14e4a3c4782c94731d1176dbcb7a4ceaf18e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62fb13f734b891537a318c1aa2197fbf8eb532fe11b8620ea0c948198236fb45\",\"dweb:/ipfs/QmNtg7nZUwk3stnZeMkYDc4WDyfhq3qsStaFgWydKMKCWS\"]},\"interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x86864d56ab9c90cd8b55b9fbbd649dac563a50ef5198216f4d64eee9ea214844\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00d88f12cb4f8ed2a878eec0fada480a119ef879a385bc114a9543585dca5053\",\"dweb:/ipfs/Qmcs7RkRZL9QjPpwZNe7ni4WWsc8ng4jAuVcXjo2RUAbDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				}
			},
			"contracts/base/PeripheryPayments.sol": {
				"PeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/PeripheryPayments.sol\":\"PeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xec69cda51970fbd5417501e6cb0a14e4a3c4782c94731d1176dbcb7a4ceaf18e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62fb13f734b891537a318c1aa2197fbf8eb532fe11b8620ea0c948198236fb45\",\"dweb:/ipfs/QmNtg7nZUwk3stnZeMkYDc4WDyfhq3qsStaFgWydKMKCWS\"]},\"contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0x7f8222ccce886042ac8da21290fa55f92d68715fdc8fcc57ffb4ac0a7f0ee5cc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e04a603df10149d4f46419220d6eb661c7d485559d2bfc68302e9e63427da110\",\"dweb:/ipfs/QmbjQXmrvXQfE7CQKayJ2haGrb2Mp6TsD5h6UMubtPU2cR\"]},\"interfaces/IERC20.sol\":{\"keccak256\":\"0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84\",\"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja\"]},\"interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x86864d56ab9c90cd8b55b9fbbd649dac563a50ef5198216f4d64eee9ea214844\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00d88f12cb4f8ed2a878eec0fada480a119ef879a385bc114a9543585dca5053\",\"dweb:/ipfs/Qmcs7RkRZL9QjPpwZNe7ni4WWsc8ng4jAuVcXjo2RUAbDp\"]},\"interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x2d05cad9db03edb62e0294a2405461e94bafe0f7a8b4406818bfd25cc2778d83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f491725a4b43b999034c89bed6716903a5f08f8183d91c1ac4bf8d6596c5ed8\",\"dweb:/ipfs/QmcegGmqaAf7DVYYMcjmhYDNy5nqyYjeLpX6cDJycngx2a\"]},\"interfaces/IWETH9.sol\":{\"keccak256\":\"0x82959d397297efe564b916dc07bbf1659915140be0fc0061a7ebd049d2ed9c9a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d1de5a5dd39a0a8244b68e0d5413c8a83b40a2b931cbdec6ad880accbaac8f9\",\"dweb:/ipfs/QmTwgbh66BTNF2C1Yikv22Rs8e5qK65JDeAzY2EgxUtTmc\"]},\"libraries/TransferHelper.sol\":{\"keccak256\":\"0xf391b1d26025bf5d50ac10d4e84a1d1353f67c7109c2bb32f034cefab132a7a5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e45f9b60388a9d3280ff0595c0f799f76935f0caa13de1999a4b99cdd43f9563\",\"dweb:/ipfs/QmSNMTPHowQhV9ShLcMi86qjvhmqhBiAaEfxc4Bx1qAEP4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84\",\"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x6ac9ef0ef2a0d45e9f00a82a3641a8155839ce9eb1695d517af590a2a77fbfaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096d4af6070fa18e3e1c61898d72ce3dbc0dfe32ba2cb2d9fb4235aef69e1226\",\"dweb:/ipfs/QmNukaEBdy4vj1GjTwgrFckWAAP78taPdrcUpxSTqvfTUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x6ac9ef0ef2a0d45e9f00a82a3641a8155839ce9eb1695d517af590a2a77fbfaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096d4af6070fa18e3e1c61898d72ce3dbc0dfe32ba2cb2d9fb4235aef69e1226\",\"dweb:/ipfs/QmNukaEBdy4vj1GjTwgrFckWAAP78taPdrcUpxSTqvfTUR\"]},\"interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xddb622a2a3477ec05ebda998d826e983d380220d63751474bbe6980633a73b04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567c87f2c3bba3dc84b9afc29302243197a3603c9d390fe6b98ca84f0d92ced2\",\"dweb:/ipfs/QmPQtVyqJGuCdEQUynEDhVGpVr3Tjb24FFmtqStya1sKQu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x6ac9ef0ef2a0d45e9f00a82a3641a8155839ce9eb1695d517af590a2a77fbfaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096d4af6070fa18e3e1c61898d72ce3dbc0dfe32ba2cb2d9fb4235aef69e1226\",\"dweb:/ipfs/QmNukaEBdy4vj1GjTwgrFckWAAP78taPdrcUpxSTqvfTUR\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0x45afe24d08f682db601e0a3a275d821e5307e5623675f33ac3ed1734bde7e6e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c2905e23ead4990271e590fddab53b77c596741b5b7f1795ff792c54b68f8f\",\"dweb:/ipfs/QmQFEh5doRaJXLDjSr6SbNCXW8CB3MRKka2qaGYmyzUp1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IERC721Permit.sol": {
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x6ac9ef0ef2a0d45e9f00a82a3641a8155839ce9eb1695d517af590a2a77fbfaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096d4af6070fa18e3e1c61898d72ce3dbc0dfe32ba2cb2d9fb4235aef69e1226\",\"dweb:/ipfs/QmNukaEBdy4vj1GjTwgrFckWAAP78taPdrcUpxSTqvfTUR\"]},\"interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x6f1dbfe6e2ffe63e8019070cfc06e5a97ed657666ceb22df2764ded1d03be47b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d73f986d5cbe5f9445b7160aa276fb7c1e136339204c3e3a5f1c1d3495c73c29\",\"dweb:/ipfs/QmbTaB8ZbEFXdXNrAJZMEAPX8Aiy4SsYsppvRQ7UwKxS8g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				}
			},
			"interfaces/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xbebd2be6d6d821744eff4c5deae62fd25a71fb65bed5dee33a03615903ee3b1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463a6b36c622bb33c5c851d211cf44b70d3d78074c0a294be376fe99e083a6ac\",\"dweb:/ipfs/QmYc6Pdqj7u6dARiJDwGoGdHGMJah58vENY44ymsWUKhG5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC165.sol\":{\"keccak256\":\"0x06f348d7019b631fe09622de080abba6a2b5dea4488a461571ac9ede35cb3523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac9c9e6ba365c27dab93177a34b2f0e96722231ba7b4310aa0e0f248d3a93bb\",\"dweb:/ipfs/QmTdocvDxXJVxFh1sRGjaMf85s1FkmXDsw5XQikMKbghgL\"]},\"interfaces/IERC721.sol\":{\"keccak256\":\"0x6ac9ef0ef2a0d45e9f00a82a3641a8155839ce9eb1695d517af590a2a77fbfaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://096d4af6070fa18e3e1c61898d72ce3dbc0dfe32ba2cb2d9fb4235aef69e1226\",\"dweb:/ipfs/QmNukaEBdy4vj1GjTwgrFckWAAP78taPdrcUpxSTqvfTUR\"]},\"interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xddb622a2a3477ec05ebda998d826e983d380220d63751474bbe6980633a73b04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567c87f2c3bba3dc84b9afc29302243197a3603c9d390fe6b98ca84f0d92ced2\",\"dweb:/ipfs/QmPQtVyqJGuCdEQUynEDhVGpVr3Tjb24FFmtqStya1sKQu\"]},\"interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0x45afe24d08f682db601e0a3a275d821e5307e5623675f33ac3ed1734bde7e6e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c2905e23ead4990271e590fddab53b77c596741b5b7f1795ff792c54b68f8f\",\"dweb:/ipfs/QmQFEh5doRaJXLDjSr6SbNCXW8CB3MRKka2qaGYmyzUp1Y\"]},\"interfaces/IERC721Permit.sol\":{\"keccak256\":\"0x6f1dbfe6e2ffe63e8019070cfc06e5a97ed657666ceb22df2764ded1d03be47b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d73f986d5cbe5f9445b7160aa276fb7c1e136339204c3e3a5f1c1d3495c73c29\",\"dweb:/ipfs/QmbTaB8ZbEFXdXNrAJZMEAPX8Aiy4SsYsppvRQ7UwKxS8g\"]},\"interfaces/INonfungiblePositionManager.sol\":{\"keccak256\":\"0x0721f9a63e9f273cb46949ae3218f64c9a613c7406f7c1e579be141f1f673021\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3d34574a36aad0b7d95d0043f988104b87402fe78a5e5ed606dd9e40ada36bdd\",\"dweb:/ipfs/QmNvYQpcTYQL1BbEStB68Y1xM3dCazs8ZYMkffATJmQspU\"]},\"interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x86864d56ab9c90cd8b55b9fbbd649dac563a50ef5198216f4d64eee9ea214844\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00d88f12cb4f8ed2a878eec0fada480a119ef879a385bc114a9543585dca5053\",\"dweb:/ipfs/Qmcs7RkRZL9QjPpwZNe7ni4WWsc8ng4jAuVcXjo2RUAbDp\"]},\"interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x2d05cad9db03edb62e0294a2405461e94bafe0f7a8b4406818bfd25cc2778d83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f491725a4b43b999034c89bed6716903a5f08f8183d91c1ac4bf8d6596c5ed8\",\"dweb:/ipfs/QmcegGmqaAf7DVYYMcjmhYDNy5nqyYjeLpX6cDJycngx2a\"]},\"interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0xaf904ce3780579c240ac33e5f5aa81871cd3b9f5ee80062e56b22d0720778f6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://abc0470449ff8c6dd1387d084f2e4cc65acff3c580efbda65309f73664e7f1b1\",\"dweb:/ipfs/QmVoYieDdN16RevqXMC7hx7kYo3B3amZNsvykn5ixUcxDs\"]},\"libraries/PoolAddress.sol\":{\"keccak256\":\"0x686b0ba1413a18052a4cad2132e88866be07f87f6f832847fb90e5e00d4ef87b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8084aab135d4256605f184c1e72958574f58f64c98d0f8ca510817b5d9178f9d\",\"dweb:/ipfs/QmSwkL5EMWJyzpX4dij4DaHLdeMyYUCdXbomGPEyQZET29\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"interfaces/IPeripheryImmutableState.sol": {
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x86864d56ab9c90cd8b55b9fbbd649dac563a50ef5198216f4d64eee9ea214844\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://00d88f12cb4f8ed2a878eec0fada480a119ef879a385bc114a9543585dca5053\",\"dweb:/ipfs/Qmcs7RkRZL9QjPpwZNe7ni4WWsc8ng4jAuVcXjo2RUAbDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				}
			},
			"interfaces/IPeripheryPayments.sol": {
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0x2d05cad9db03edb62e0294a2405461e94bafe0f7a8b4406818bfd25cc2778d83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f491725a4b43b999034c89bed6716903a5f08f8183d91c1ac4bf8d6596c5ed8\",\"dweb:/ipfs/QmcegGmqaAf7DVYYMcjmhYDNy5nqyYjeLpX6cDJycngx2a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				}
			},
			"interfaces/IPoolInitializer.sol": {
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPoolInitializer.sol\":{\"keccak256\":\"0xaf904ce3780579c240ac33e5f5aa81871cd3b9f5ee80062e56b22d0720778f6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://abc0470449ff8c6dd1387d084f2e4cc65acff3c580efbda65309f73664e7f1b1\",\"dweb:/ipfs/QmVoYieDdN16RevqXMC7hx7kYo3B3amZNsvykn5ixUcxDs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				}
			},
			"interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x27762f5100350f2413440a12588ea06b01ff98ba2b114cd9fff2609b9decd726\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1379fee64912d089e8d0900d3b5ff325afb73ba442e4e39dc9268ec289bc1337\",\"dweb:/ipfs/Qmdbv7S4CbrdVkgHR4rAmc2mzkj6Ru8P4VcKKNRBZAoSfu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xa423f4498d2d6afe0ab41ff99348b1b67f9e2c2ef6e65f35336c9d3f306daf56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3dc3bd977f65c3197e83398966df249774b95c0e711415cdfaf110fa1bffe26c\",\"dweb:/ipfs/QmUrGRLYKhRhWJW6637YevkQGXYqT92JybkQTwCTAzvGv8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x33e31bebc692bce4bbe0d5575cad32c1473aebaebd8164733a023572471136ff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4130925a601ba87ed919f18563f9fbbc4099cfe9b51fec09a0623de25724a9b0\",\"dweb:/ipfs/Qmd5czyfkiRR2jZ2n8ZeKDCAH6HTyzcKkEM1rWLZ9Coozp\"]},\"interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9dcec803e1bb4d5a5adb72ab959c3957cbeff429f4b1c829374372c684990ee3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8348cea7c3d67526b5702bb3eceacba6652d0c7fcbaea6aa739a6d474d91bbfc\",\"dweb:/ipfs/QmYYhEHSnJSsNBPPjXTke4bpXW6YtK9akeDof8eDVCoGVj\"]},\"interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x89c305b25f4c8e0b486efd7babf8b7c0eeceb417cdef24371320167edac4f1af\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7db14aa035390900cc65bc120828a8072d0d77b02af0776a3037046acd17cede\",\"dweb:/ipfs/QmfEdAF5ooeppuhKT7CbKfABYHekUPQvMoxNQfzrxXHjFE\"]},\"interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xa2f030ae26fb12eb82947791994474da6bbf3065658008ef18c6a37ea8c4ee6c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8554f3d48ee3433417c38ed7f7a9ca2c313679a9aa97e583b1b01af7c53c931e\",\"dweb:/ipfs/QmQsLobFDQrsn8Vgup86FAKEgJqb9ZUyhrejcVjoNgsnxF\"]},\"interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xba3a5ffc88dcc4133e943e23313e41476e29b8478ee1ba1495e353a8ad9141a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://36ef120748ee4dc22b31272f82820b00451059e6026d2b595bf39a863faf7d16\",\"dweb:/ipfs/QmSDzybBz4fjRgdt9Hx4eaTufGUZT142bNkPaZTQq5jSxv\"]},\"interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x0d3a6c36b5cc653a4a5db9a87c80f8439ae1f9f6e90edd45731bc40f60302e55\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0dd270ee8c749c67a6ddebe83b8e85a0133af2005e1caed2d4f9f041bd9beeb1\",\"dweb:/ipfs/Qmcdc6pGKkfStihb57kUbVSEPxEW421rifyRyWRgWTLbGg\"]},\"interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xed929228e67a5fd94861fff56f0f3ed33a5673acce2366e52f99ad8cbab4d7e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a45daeb13dd33b2c668455f02de50a9d1ec68f0dc012ba6e16f043aaa8c68afc\",\"dweb:/ipfs/QmRUFbtyWRV1iGGApVyeXJhacE5hXj8wjjWGUsgFAXaPEm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"interfaces/IWETH9.sol": {
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84\",\"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja\"]},\"interfaces/IWETH9.sol\":{\"keccak256\":\"0x82959d397297efe564b916dc07bbf1659915140be0fc0061a7ebd049d2ed9c9a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d1de5a5dd39a0a8244b68e0d5413c8a83b40a2b931cbdec6ad880accbaac8f9\",\"dweb:/ipfs/QmTwgbh66BTNF2C1Yikv22Rs8e5qK65JDeAzY2EgxUtTmc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/callback/IUniswapV3MintCallback.sol": {
				"IUniswapV3MintCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Owed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Owed",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3MintCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
									"amount1Owed": "The amount of token1 due to the pool for the minted liquidity",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#mint call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#mint",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#mint call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/callback/IUniswapV3MintCallback.sol\":\"IUniswapV3MintCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0xaa9d30a71d4a9a1ddad57b3ef67f699ffe639a25b4a3004a7e872ca762fa222d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://20c5d9622646870c16313f0d2e3504b153509d64ae9dcabeafb339fee9133551\",\"dweb:/ipfs/QmbEh7vrR82dRBPCGVVoXoMkPgMLR9yzyPY6jCGXkgKyjY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#mint must implement this interface",
						"version": 1
					}
				}
			},
			"interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9dcec803e1bb4d5a5adb72ab959c3957cbeff429f4b1c829374372c684990ee3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8348cea7c3d67526b5702bb3eceacba6652d0c7fcbaea6aa739a6d474d91bbfc\",\"dweb:/ipfs/QmYYhEHSnJSsNBPPjXTke4bpXW6YtK9akeDof8eDVCoGVj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x89c305b25f4c8e0b486efd7babf8b7c0eeceb417cdef24371320167edac4f1af\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7db14aa035390900cc65bc120828a8072d0d77b02af0776a3037046acd17cede\",\"dweb:/ipfs/QmfEdAF5ooeppuhKT7CbKfABYHekUPQvMoxNQfzrxXHjFE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xa2f030ae26fb12eb82947791994474da6bbf3065658008ef18c6a37ea8c4ee6c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8554f3d48ee3433417c38ed7f7a9ca2c313679a9aa97e583b1b01af7c53c931e\",\"dweb:/ipfs/QmQsLobFDQrsn8Vgup86FAKEgJqb9ZUyhrejcVjoNgsnxF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xba3a5ffc88dcc4133e943e23313e41476e29b8478ee1ba1495e353a8ad9141a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://36ef120748ee4dc22b31272f82820b00451059e6026d2b595bf39a863faf7d16\",\"dweb:/ipfs/QmSDzybBz4fjRgdt9Hx4eaTufGUZT142bNkPaZTQq5jSxv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x0d3a6c36b5cc653a4a5db9a87c80f8439ae1f9f6e90edd45731bc40f60302e55\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0dd270ee8c749c67a6ddebe83b8e85a0133af2005e1caed2d4f9f041bd9beeb1\",\"dweb:/ipfs/Qmcdc6pGKkfStihb57kUbVSEPxEW421rifyRyWRgWTLbGg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xed929228e67a5fd94861fff56f0f3ed33a5673acce2366e52f99ad8cbab4d7e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a45daeb13dd33b2c668455f02de50a9d1ec68f0dc012ba6e16f043aaa8c68afc\",\"dweb:/ipfs/QmRUFbtyWRV1iGGApVyeXJhacE5hXj8wjjWGUsgFAXaPEm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"libraries/CallbackValidation.sol": {
				"CallbackValidation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/CallbackValidation.sol\":217:1481  library CallbackValidation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/CallbackValidation.sol\":217:1481  library CallbackValidation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a9dc7d91dca7e05ce30fc84241491c36e3bdcbda7ec4e16cf52546886aefb5064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a9dc7d91dca7e05ce30fc84241491c36e3bdcbda7ec4e16cf52546886aefb5064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE SWAP14 0xC7 0xD9 SAR 0xCA PUSH31 0x5CE30FC84241491C36E3BDCBDA7EC4E16CF52546886AEFB5064736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "217:1264:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a9dc7d91dca7e05ce30fc84241491c36e3bdcbda7ec4e16cf52546886aefb5064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE SWAP14 0xC7 0xD9 SAR 0xCA PUSH31 0x5CE30FC84241491C36E3BDCBDA7EC4E16CF52546886AEFB5064736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "217:1264:27:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"verifyCallback(address,address,address,uint24)": "infinite",
								"verifyCallback(address,struct PoolAddress.PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH [$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "B"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "CODECOPY",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "MLOAD",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "BYTE",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "73"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "EQ",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "JUMPI",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "4"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "24"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "REVERT",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "tag",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "ADDRESS",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "PUSH",
									"source": 27,
									"value": "73"
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "MSTORE8",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 217,
									"end": 1481,
									"name": "RETURN",
									"source": 27
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a9dc7d91dca7e05ce30fc84241491c36e3bdcbda7ec4e16cf52546886aefb5064736f6c63430008160033",
									".code": [
										{
											"begin": 217,
											"end": 1481,
											"name": "PUSHDEPLOYADDRESS",
											"source": 27
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "ADDRESS",
											"source": 27
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "PUSH",
											"source": 27,
											"value": "80"
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 217,
											"end": 1481,
											"name": "REVERT",
											"source": 27
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides validation for callbacks from Uniswap V3 Pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/CallbackValidation.sol\":\"CallbackValidation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x33e31bebc692bce4bbe0d5575cad32c1473aebaebd8164733a023572471136ff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4130925a601ba87ed919f18563f9fbbc4099cfe9b51fec09a0623de25724a9b0\",\"dweb:/ipfs/Qmd5czyfkiRR2jZ2n8ZeKDCAH6HTyzcKkEM1rWLZ9Coozp\"]},\"interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9dcec803e1bb4d5a5adb72ab959c3957cbeff429f4b1c829374372c684990ee3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8348cea7c3d67526b5702bb3eceacba6652d0c7fcbaea6aa739a6d474d91bbfc\",\"dweb:/ipfs/QmYYhEHSnJSsNBPPjXTke4bpXW6YtK9akeDof8eDVCoGVj\"]},\"interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x89c305b25f4c8e0b486efd7babf8b7c0eeceb417cdef24371320167edac4f1af\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7db14aa035390900cc65bc120828a8072d0d77b02af0776a3037046acd17cede\",\"dweb:/ipfs/QmfEdAF5ooeppuhKT7CbKfABYHekUPQvMoxNQfzrxXHjFE\"]},\"interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xa2f030ae26fb12eb82947791994474da6bbf3065658008ef18c6a37ea8c4ee6c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8554f3d48ee3433417c38ed7f7a9ca2c313679a9aa97e583b1b01af7c53c931e\",\"dweb:/ipfs/QmQsLobFDQrsn8Vgup86FAKEgJqb9ZUyhrejcVjoNgsnxF\"]},\"interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xba3a5ffc88dcc4133e943e23313e41476e29b8478ee1ba1495e353a8ad9141a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://36ef120748ee4dc22b31272f82820b00451059e6026d2b595bf39a863faf7d16\",\"dweb:/ipfs/QmSDzybBz4fjRgdt9Hx4eaTufGUZT142bNkPaZTQq5jSxv\"]},\"interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x0d3a6c36b5cc653a4a5db9a87c80f8439ae1f9f6e90edd45731bc40f60302e55\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0dd270ee8c749c67a6ddebe83b8e85a0133af2005e1caed2d4f9f041bd9beeb1\",\"dweb:/ipfs/Qmcdc6pGKkfStihb57kUbVSEPxEW421rifyRyWRgWTLbGg\"]},\"interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0xed929228e67a5fd94861fff56f0f3ed33a5673acce2366e52f99ad8cbab4d7e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a45daeb13dd33b2c668455f02de50a9d1ec68f0dc012ba6e16f043aaa8c68afc\",\"dweb:/ipfs/QmRUFbtyWRV1iGGApVyeXJhacE5hXj8wjjWGUsgFAXaPEm\"]},\"libraries/CallbackValidation.sol\":{\"keccak256\":\"0x8f05f4e5101af37056084067627ae1e4ce71145b9e4cdcbf722ad394ed651674\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9cd3691bb4c0d69b993258f772bb39d0728244431f9e95bc88a7a0377b356421\",\"dweb:/ipfs/QmPdgHPpivKFTLzRDfe1xQP3UCE6zBnFiDHRYW4chtUc9Q\"]},\"libraries/PoolAddress.sol\":{\"keccak256\":\"0x686b0ba1413a18052a4cad2132e88866be07f87f6f832847fb90e5e00d4ef87b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8084aab135d4256605f184c1e72958574f58f64c98d0f8ca510817b5d9178f9d\",\"dweb:/ipfs/QmSwkL5EMWJyzpX4dij4DaHLdeMyYUCdXbomGPEyQZET29\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides validation for callbacks from Uniswap V3 Pools",
						"version": 1
					}
				}
			},
			"libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/FixedPoint96.sol\":252:389  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/FixedPoint96.sol\":252:389  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb97720615a40ddfdaadf87f4ff4d7281941193c69408e86684070974e05be8c64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220eb97720615a40ddfdaadf87f4ff4d7281941193c69408e86684070974e05be8c64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SWAP8 PUSH19 0x615A40DDFDAADF87F4FF4D7281941193C6940 DUP15 DUP7 PUSH9 0x4070974E05BE8C6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "252:137:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220eb97720615a40ddfdaadf87f4ff4d7281941193c69408e86684070974e05be8c64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SWAP8 PUSH19 0x615A40DDFDAADF87F4FF4D7281941193C6940 DUP15 DUP7 PUSH9 0x4070974E05BE8C6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "252:137:28:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 28,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH [$]",
									"source": 28,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "B"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "CODECOPY",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP1",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "MLOAD",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "BYTE",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "EQ",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 28,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "JUMPI",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "24"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "REVERT",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "tag",
									"source": 28,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "JUMPDEST",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "ADDRESS",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "PUSH",
									"source": 28,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP2",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "MSTORE8",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "DUP2",
									"source": 28
								},
								{
									"begin": 252,
									"end": 389,
									"name": "RETURN",
									"source": 28
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb97720615a40ddfdaadf87f4ff4d7281941193c69408e86684070974e05be8c64736f6c63430008160033",
									".code": [
										{
											"begin": 252,
											"end": 389,
											"name": "PUSHDEPLOYADDRESS",
											"source": 28
										},
										{
											"begin": 252,
											"end": 389,
											"name": "ADDRESS",
											"source": 28
										},
										{
											"begin": 252,
											"end": 389,
											"name": "EQ",
											"source": 28
										},
										{
											"begin": 252,
											"end": 389,
											"name": "PUSH",
											"source": 28,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 389,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 389,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 252,
											"end": 389,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 389,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 252,
											"end": 389,
											"name": "REVERT",
											"source": 28
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/FixedPoint96.sol\":{\"keccak256\":\"0x130c24f1de1a1c0f1c9b041654c24ccd101fb8d2c4ba081605bd20e8bfd7599b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ecc0ed5e67dfbd94862a9955879dd58007473cd917a40e03aae841f75f693c34\",\"dweb:/ipfs/QmYZ57RNqmXPJMCSjeEg4GGWFv8pptfJq1dp479Zx2YurQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/FullMath.sol\":360:5245  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/FullMath.sol\":360:5245  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c07fe6671e404c1890307bd30c195f2ffe8dcd2d80326e23332182981e320ff964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c07fe6671e404c1890307bd30c195f2ffe8dcd2d80326e23332182981e320ff964736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH32 0xE6671E404C1890307BD30C195F2FFE8DCD2D80326E23332182981E320FF96473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "360:4885:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c07fe6671e404c1890307bd30c195f2ffe8dcd2d80326e23332182981e320ff964736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH32 0xE6671E404C1890307BD30C195F2FFE8DCD2D80326E23332182981E320FF96473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "360:4885:29:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH #[$]",
									"source": 29,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH [$]",
									"source": 29,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "B"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "CODECOPY",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "BYTE",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "73"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "EQ",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "4"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "24"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "REVERT",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "tag",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "ADDRESS",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "PUSH",
									"source": 29,
									"value": "73"
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "MSTORE8",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 360,
									"end": 5245,
									"name": "RETURN",
									"source": 29
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c07fe6671e404c1890307bd30c195f2ffe8dcd2d80326e23332182981e320ff964736f6c63430008160033",
									".code": [
										{
											"begin": 360,
											"end": 5245,
											"name": "PUSHDEPLOYADDRESS",
											"source": 29
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "ADDRESS",
											"source": 29
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "PUSH",
											"source": 29,
											"value": "80"
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 360,
											"end": 5245,
											"name": "REVERT",
											"source": 29
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/FullMath.sol\":{\"keccak256\":\"0x64b61af37111d6035419dcc4e476084e46244df78b9ca7843a338632cae90516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4ccff2535b4df812a02013d8932cb6935256bbedfc8f29f5dbac3711e8a11cd\",\"dweb:/ipfs/QmajCAiGoxtM6yV48CAi91aZVhzf3WnymuHTVLSVKWq5Q7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"libraries/LiquidityAmounts.sol": {
				"LiquidityAmounts": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Liquidity amount functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/LiquidityAmounts.sol\":264:6879  library LiquidityAmounts {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/LiquidityAmounts.sol\":264:6879  library LiquidityAmounts {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b0d369488aa080586757265f8fbdb240bd9bff46d3063286bf57ee40fba67c764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200b0d369488aa080586757265f8fbdb240bd9bff46d3063286bf57ee40fba67c764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xD CALLDATASIZE SWAP5 DUP9 0xAA ADDMOD SDIV DUP7 PUSH22 0x7265F8FBDB240BD9BFF46D3063286BF57EE40FBA67C7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "264:6615:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200b0d369488aa080586757265f8fbdb240bd9bff46d3063286bf57ee40fba67c764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xD CALLDATASIZE SWAP5 DUP9 0xAA ADDMOD SDIV DUP7 PUSH22 0x7265F8FBDB240BD9BFF46D3063286BF57EE40FBA67C7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "264:6615:30:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAmount0ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmount1ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmountsForLiquidity(uint160,uint160,uint160,uint128)": "infinite",
								"getLiquidityForAmount0(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmount1(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)": "infinite",
								"toUint128(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH #[$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH [$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "B"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "CODECOPY",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "BYTE",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "EQ",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "4"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "24"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "REVERT",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "tag",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "ADDRESS",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "PUSH",
									"source": 30,
									"value": "73"
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "MSTORE8",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 264,
									"end": 6879,
									"name": "RETURN",
									"source": 30
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b0d369488aa080586757265f8fbdb240bd9bff46d3063286bf57ee40fba67c764736f6c63430008160033",
									".code": [
										{
											"begin": 264,
											"end": 6879,
											"name": "PUSHDEPLOYADDRESS",
											"source": 30
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "ADDRESS",
											"source": 30
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "PUSH",
											"source": 30,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 264,
											"end": 6879,
											"name": "REVERT",
											"source": 30
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity amount functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for computing liquidity amounts from token amounts and prices\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/LiquidityAmounts.sol\":\"LiquidityAmounts\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/FixedPoint96.sol\":{\"keccak256\":\"0x130c24f1de1a1c0f1c9b041654c24ccd101fb8d2c4ba081605bd20e8bfd7599b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ecc0ed5e67dfbd94862a9955879dd58007473cd917a40e03aae841f75f693c34\",\"dweb:/ipfs/QmYZ57RNqmXPJMCSjeEg4GGWFv8pptfJq1dp479Zx2YurQ\"]},\"libraries/FullMath.sol\":{\"keccak256\":\"0x64b61af37111d6035419dcc4e476084e46244df78b9ca7843a338632cae90516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4ccff2535b4df812a02013d8932cb6935256bbedfc8f29f5dbac3711e8a11cd\",\"dweb:/ipfs/QmajCAiGoxtM6yV48CAi91aZVhzf3WnymuHTVLSVKWq5Q7\"]},\"libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x84b695fe8e8faa6286f61e77a60632b06bc22f322d1ad3c764243ec57c654b66\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fe276e990a565142aa41355929e3ce90ff590304292edd40524490f535433aac\",\"dweb:/ipfs/QmYQGZ2qCWYgqhFLyHcoDNaMPpUE5Eiux3KHsH3bSkmMhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions for computing liquidity amounts from token amounts and prices",
						"version": 1
					}
				}
			},
			"libraries/PoolAddress.sol": {
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/PoolAddress.sol\":170:2040  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/PoolAddress.sol\":170:2040  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b781d396e478246bf8b65c9aaa5cb349161f6b7c671edeb40d3dceb2d21e62f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208b781d396e478246bf8b65c9aaa5cb349161f6b7c671edeb40d3dceb2d21e62f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH25 0x1D396E478246BF8B65C9AAA5CB349161F6B7C671EDEB40D3DC 0xEB 0x2D 0x21 0xE6 0x2F PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "170:1870:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208b781d396e478246bf8b65c9aaa5cb349161f6b7c671edeb40d3dceb2d21e62f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH25 0x1D396E478246BF8B65C9AAA5CB349161F6B7C671EDEB40D3DC 0xEB 0x2D 0x21 0xE6 0x2F PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "170:1870:31:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH #[$]",
									"source": 31,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH [$]",
									"source": 31,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "B"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "CODECOPY",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "BYTE",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "73"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "EQ",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "4"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "24"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "REVERT",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "tag",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "ADDRESS",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "PUSH",
									"source": 31,
									"value": "73"
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "MSTORE8",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 170,
									"end": 2040,
									"name": "RETURN",
									"source": 31
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b781d396e478246bf8b65c9aaa5cb349161f6b7c671edeb40d3dceb2d21e62f64736f6c63430008160033",
									".code": [
										{
											"begin": 170,
											"end": 2040,
											"name": "PUSHDEPLOYADDRESS",
											"source": 31
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "ADDRESS",
											"source": 31
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 170,
											"end": 2040,
											"name": "REVERT",
											"source": 31
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/PoolAddress.sol\":{\"keccak256\":\"0x686b0ba1413a18052a4cad2132e88866be07f87f6f832847fb90e5e00d4ef87b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8084aab135d4256605f184c1e72958574f58f64c98d0f8ca510817b5d9178f9d\",\"dweb:/ipfs/QmSwkL5EMWJyzpX4dij4DaHLdeMyYUCdXbomGPEyQZET29\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/TickMath.sol\":311:8845  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/TickMath.sol\":311:8845  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e2b02650121987e21f9ed3744e55656cb869ae6cde1ecbcc8514cbdec2c914da64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e2b02650121987e21f9ed3744e55656cb869ae6cde1ecbcc8514cbdec2c914da64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xB0 0x26 POP SLT NOT DUP8 0xE2 0x1F SWAP15 0xD3 PUSH21 0x4E55656CB869AE6CDE1ECBCC8514CBDEC2C914DA64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "311:8534:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e2b02650121987e21f9ed3744e55656cb869ae6cde1ecbcc8514cbdec2c914da64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xB0 0x26 POP SLT NOT DUP8 0xE2 0x1F SWAP15 0xD3 PUSH21 0x4E55656CB869AE6CDE1ECBCC8514CBDEC2C914DA64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "311:8534:32:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH #[$]",
									"source": 32,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH [$]",
									"source": 32,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "B"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "CODECOPY",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP1",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "MLOAD",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "BYTE",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "73"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "EQ",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH [tag]",
									"source": 32,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "JUMPI",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "4"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "24"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "REVERT",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "tag",
									"source": 32,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "JUMPDEST",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "ADDRESS",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "PUSH",
									"source": 32,
									"value": "73"
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP2",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "MSTORE8",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "DUP2",
									"source": 32
								},
								{
									"begin": 311,
									"end": 8845,
									"name": "RETURN",
									"source": 32
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2b02650121987e21f9ed3744e55656cb869ae6cde1ecbcc8514cbdec2c914da64736f6c63430008160033",
									".code": [
										{
											"begin": 311,
											"end": 8845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 32
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "ADDRESS",
											"source": 32
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "EQ",
											"source": 32
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "PUSH",
											"source": 32,
											"value": "80"
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 311,
											"end": 8845,
											"name": "REVERT",
											"source": 32
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"libraries/TickMath.sol\":{\"keccak256\":\"0x0bc2419b67780f9ef41c80e685fd0613a94a9e16d738da259e181fbee8dc7ee2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://93d569d0044418e2730293efe4d0d10fd100f28fae137c05cdb92c684898a860\",\"dweb:/ipfs/QmYXRprqXE3uAGxXURQcuHs3QVZVwTmrv4924ShH6nMm3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"libraries/TransferHelper.sol\":111:2573  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"libraries/TransferHelper.sol\":111:2573  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208d70db0444f7830587f64ef688d9174a838f88748360ff382de0cada4d119c4364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208d70db0444f7830587f64ef688d9174a838f88748360ff382de0cada4d119c4364736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH17 0xDB0444F7830587F64EF688D9174A838F88 PUSH21 0x8360FF382DE0CADA4D119C4364736F6C6343000816 STOP CALLER ",
							"sourceMap": "111:2462:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208d70db0444f7830587f64ef688d9174a838f88748360ff382de0cada4d119c4364736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH17 0xDB0444F7830587F64EF688D9174A838F88 PUSH21 0x8360FF382DE0CADA4D119C4364736F6C6343000816 STOP CALLER ",
							"sourceMap": "111:2462:33:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH #[$]",
									"source": 33,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH [$]",
									"source": 33,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "B"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "CODECOPY",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "BYTE",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "73"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "24"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "tag",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "PUSH",
									"source": 33,
									"value": "73"
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "MSTORE8",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 111,
									"end": 2573,
									"name": "RETURN",
									"source": 33
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d70db0444f7830587f64ef688d9174a838f88748360ff382de0cada4d119c4364736f6c63430008160033",
									".code": [
										{
											"begin": 111,
											"end": 2573,
											"name": "PUSHDEPLOYADDRESS",
											"source": 33
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "PUSH",
											"source": 33,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 111,
											"end": 2573,
											"name": "REVERT",
											"source": 33
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"contracts/AddLiquidity.sol",
								"contracts/base/LiquidityManagement.sol",
								"contracts/base/PeripheryImmutableState.sol",
								"contracts/base/PeripheryPayments.sol",
								"interfaces/IERC165.sol",
								"interfaces/IERC20.sol",
								"interfaces/IERC721.sol",
								"interfaces/IERC721Enumerable.sol",
								"interfaces/IERC721Metadata.sol",
								"interfaces/IERC721Permit.sol",
								"interfaces/IERC721Receiver.sol",
								"interfaces/INonfungiblePositionManager.sol",
								"interfaces/IPeripheryImmutableState.sol",
								"interfaces/IPeripheryPayments.sol",
								"interfaces/IPoolInitializer.sol",
								"interfaces/ISwapRouter.sol",
								"interfaces/IUniswapV3Factory.sol",
								"interfaces/IUniswapV3Pool.sol",
								"interfaces/IWETH9.sol",
								"interfaces/callback/IUniswapV3MintCallback.sol",
								"interfaces/pool/IUniswapV3PoolActions.sol",
								"interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"interfaces/pool/IUniswapV3PoolEvents.sol",
								"interfaces/pool/IUniswapV3PoolImmutables.sol",
								"interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"interfaces/pool/IUniswapV3PoolState.sol",
								"libraries/CallbackValidation.sol",
								"libraries/FixedPoint96.sol",
								"libraries/FullMath.sol",
								"libraries/LiquidityAmounts.sol",
								"libraries/PoolAddress.sol",
								"libraries/TickMath.sol",
								"libraries/TransferHelper.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC20.sol\":{\"keccak256\":\"0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84\",\"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja\"]},\"libraries/TransferHelper.sol\":{\"keccak256\":\"0xf391b1d26025bf5d50ac10d4e84a1d1353f67c7109c2bb32f034cefab132a7a5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e45f9b60388a9d3280ff0595c0f799f76935f0caa13de1999a4b99cdd43f9563\",\"dweb:/ipfs/QmSNMTPHowQhV9ShLcMi86qjvhmqhBiAaEfxc4Bx1qAEP4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/AddLiquidity.sol:134:9:\n    |\n134 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4898,
					"file": "contracts/AddLiquidity.sol",
					"start": 4882
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/AddLiquidity.sol:136:9:\n    |\n136 |         uint256 tokenId,\n    |         ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4942,
					"file": "contracts/AddLiquidity.sol",
					"start": 4927
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/AddLiquidity.sol:133:5:\n    |\n133 |     function onERC721Received(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 5103,
					"file": "contracts/AddLiquidity.sol",
					"start": 4846
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 14,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1197:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1226:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1255:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:0"
									},
									"scope": 13,
									"src": "1157:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "215:1077:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:0"
				},
				"id": 0
			},
			"contracts/AddLiquidity.sol": {
				"ast": {
					"absolutePath": "contracts/AddLiquidity.sol",
					"exportedSymbols": {
						"AddLiquidity": [
							295
						],
						"CallbackValidation": [
							2051
						],
						"FixedPoint96": [
							2061
						],
						"FullMath": [
							2237
						],
						"IERC165": [
							767
						],
						"IERC20": [
							845
						],
						"IERC721": [
							961
						],
						"IERC721Enumerable": [
							992
						],
						"IERC721Metadata": [
							1019
						],
						"IERC721Permit": [
							1054
						],
						"IERC721Receiver": [
							1072
						],
						"INonfungiblePositionManager": [
							1270
						],
						"IPeripheryImmutableState": [
							1286
						],
						"IPeripheryPayments": [
							1312
						],
						"IPoolInitializer": [
							1330
						],
						"ISwapRouter": [
							1430
						],
						"IUniswapV3Factory": [
							1513
						],
						"IUniswapV3MintCallback": [
							1566
						],
						"IUniswapV3Pool": [
							1535
						],
						"IUniswapV3PoolActions": [
							1662
						],
						"IUniswapV3PoolDerivedState": [
							1693
						],
						"IUniswapV3PoolEvents": [
							1812
						],
						"IUniswapV3PoolImmutables": [
							1852
						],
						"IUniswapV3PoolOwnerActions": [
							1878
						],
						"IUniswapV3PoolState": [
							1986
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"IWETH9": [
							1552
						],
						"LiquidityAmounts": [
							2577
						],
						"LiquidityManagement": [
							514
						],
						"PeripheryImmutableState": [
							545
						],
						"PeripheryPayments": [
							755
						],
						"PoolAddress": [
							2675
						],
						"TickMath": [
							3214
						],
						"TransferHelper": [
							3385
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:1"
						},
						{
							"absolutePath": "interfaces/IUniswapV3Pool.sol",
							"file": "../interfaces/IUniswapV3Pool.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1536,
							"src": "111:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/TickMath.sol",
							"file": "../libraries/TickMath.sol",
							"id": 17,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 3215,
							"src": "155:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Receiver.sol",
							"file": "../interfaces/IERC721Receiver.sol",
							"id": 18,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1073,
							"src": "192:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ISwapRouter.sol",
							"file": "../interfaces/ISwapRouter.sol",
							"id": 19,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1431,
							"src": "237:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/INonfungiblePositionManager.sol",
							"file": "../interfaces/INonfungiblePositionManager.sol",
							"id": 20,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1271,
							"src": "278:55:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/TransferHelper.sol",
							"file": "../libraries/TransferHelper.sol",
							"id": 21,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 3386,
							"src": "335:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/LiquidityManagement.sol",
							"file": "./base/LiquidityManagement.sol",
							"id": 22,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 515,
							"src": "378:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "IERC721Receiver",
										"nameLocations": [
											"447:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1072,
										"src": "447:15:1"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "447:15:1"
								}
							],
							"canonicalName": "AddLiquidity",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1072
							],
							"name": "AddLiquidity",
							"nameLocation": "431:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b44a2722",
									"id": 27,
									"mutability": "immutable",
									"name": "nonfungiblePositionManager",
									"nameLocation": "514:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "469:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
										"typeString": "contract INonfungiblePositionManager"
									},
									"typeName": {
										"id": 26,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 25,
											"name": "INonfungiblePositionManager",
											"nameLocations": [
												"469:27:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1270,
											"src": "469:27:1"
										},
										"referencedDeclaration": 1270,
										"src": "469:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
											"typeString": "contract INonfungiblePositionManager"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AddLiquidity.Deposit",
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "549:44:1",
										"text": "@notice Represents the deposit of an NFT"
									},
									"id": 33,
									"members": [
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "633:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "625:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 29,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "625:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "657:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "649:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 31,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "649:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "606:7:1",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "599:75:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "682:37:1",
										"text": "@dev deposits[tokenId] => Deposit"
									},
									"functionSelector": "b02c43d0",
									"id": 39,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "760:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "725:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$33_storage_$",
										"typeString": "mapping(uint256 => struct AddLiquidity.Deposit)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "733:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "725:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$33_storage_$",
											"typeString": "mapping(uint256 => struct AddLiquidity.Deposit)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 36,
												"name": "Deposit",
												"nameLocations": [
													"744:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 33,
												"src": "744:7:1"
											},
											"referencedDeclaration": 33,
											"src": "744:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deposit_$33_storage_ptr",
												"typeString": "struct AddLiquidity.Deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "846:75:1",
										"statements": [
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "nonfungiblePositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "857:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
															"typeString": "contract INonfungiblePositionManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "_nonfungiblePositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "886:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
															"typeString": "contract INonfungiblePositionManager"
														}
													},
													"src": "857:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "857:56:1"
											}
										]
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_nonfungiblePositionManager",
												"nameLocation": "817:27:1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "789:55:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
													"typeString": "contract INonfungiblePositionManager"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "INonfungiblePositionManager",
														"nameLocations": [
															"789:27:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1270,
														"src": "789:27:1"
													},
													"referencedDeclaration": 1270,
													"src": "789:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:57:1"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:1"
									},
									"scope": 295,
									"src": "777:144:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "AddLiquidity.MintNewPositionParams",
									"id": 61,
									"members": [
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "976:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "968:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 51,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "968:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "1001:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "993:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 53,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "993:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "poolFee",
											"nameLocation": "1025:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "1018:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 55,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1018:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "token0Amount",
											"nameLocation": "1051:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "1043:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 57,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1043:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 60,
											"mutability": "mutable",
											"name": "token1Amount",
											"nameLocation": "1082:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "1074:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 59,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1074:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintNewPositionParams",
									"nameLocation": "936:21:1",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "929:173:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1752:2377:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 81,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1805:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1809:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1805:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 85,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1825:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AddLiquidity_$295",
																		"typeString": "contract AddLiquidity"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AddLiquidity_$295",
																		"typeString": "contract AddLiquidity"
																	}
																],
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1817:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 83,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1817:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1817:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 87,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1832:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1843:12:1",
															"memberName": "token0Amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "1832:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 77,
																		"name": "mintParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "1773:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																			"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																		}
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1784:6:1",
																	"memberName": "token0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 52,
																	"src": "1773:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 76,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "1766:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$845_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1766:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$845",
																"typeString": "contract IERC20"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1792:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 826,
														"src": "1766:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1766:90:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 96,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1906:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1910:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1906:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 100,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1926:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AddLiquidity_$295",
																		"typeString": "contract AddLiquidity"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AddLiquidity_$295",
																		"typeString": "contract AddLiquidity"
																	}
																],
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1918:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 98,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1918:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1918:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 102,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1933:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1944:12:1",
															"memberName": "token0Amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "1933:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 92,
																		"name": "mintParams",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "1874:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																			"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1885:6:1",
																	"memberName": "token1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 54,
																	"src": "1874:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 91,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "1867:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$845_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1867:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$845",
																"typeString": "contract IERC20"
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1893:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 826,
														"src": "1867:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1867:90:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 109,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2052:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2063:6:1",
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "2052:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 113,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2092:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2084:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 111,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2084:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2084:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 115,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2134:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2145:12:1",
															"memberName": "token0Amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "2134:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 106,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3385,
															"src": "2011:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2026:11:1",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3358,
														"src": "2011:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:157:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2011:157:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 122,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2220:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2231:6:1",
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2220:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 126,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2260:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																		"typeString": "contract INonfungiblePositionManager"
																	}
																],
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2252:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2252:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2252:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 128,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2302:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2313:12:1",
															"memberName": "token1Amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "2302:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 119,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3385,
															"src": "2179:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2194:11:1",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3358,
														"src": "2179:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:157:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2179:157:1"
											},
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2408:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 236,
														"src": "2349:65:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.MintParams"
														},
														"typeName": {
															"id": 135,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 134,
																"name": "INonfungiblePositionManager.MintParams",
																"nameLocations": [
																	"2349:27:1",
																	"2377:10:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1180,
																"src": "2349:38:1"
															},
															"referencedDeclaration": 1180,
															"src": "2349:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1180_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 139,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2483:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2494:6:1",
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "2483:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 141,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2527:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2538:6:1",
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2527:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 143,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2568:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2579:7:1",
															"memberName": "poolFee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "2568:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 145,
																"name": "TickMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3214,
																"src": "2616:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TickMath_$3214_$",
																	"typeString": "type(library TickMath)"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2625:8:1",
															"memberName": "MIN_TICK",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2683,
															"src": "2616:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"expression": {
																"id": 147,
																"name": "TickMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3214,
																"src": "2663:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TickMath_$3214_$",
																	"typeString": "type(library TickMath)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2672:8:1",
															"memberName": "MAX_TICK",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2688,
															"src": "2663:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"expression": {
																"id": 149,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2715:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2726:12:1",
															"memberName": "token0Amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "2715:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 151,
																"name": "mintParams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2773:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																	"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2784:12:1",
															"memberName": "token1Amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "2773:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2827:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2890:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2894:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2890:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 157,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2929:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2935:9:1",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2929:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3330",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2947:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "2929:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 137,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "2417:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1270_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2445:10:1",
														"memberName": "MintParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "2417:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MintParams_$1180_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2475:6:1",
														"2519:6:1",
														"2563:3:1",
														"2605:9:1",
														"2652:9:1",
														"2699:14:1",
														"2757:14:1",
														"2815:10:1",
														"2847:10:1",
														"2879:9:1",
														"2919:8:1"
													],
													"names": [
														"token0",
														"token1",
														"fee",
														"tickLower",
														"tickUpper",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"recipient",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "2417:548:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2349:616:1"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 163,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "3110:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 164,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "3119:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 165,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3130:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 166,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "3139:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 167,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3109:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 170,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "3182:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.MintParams memory"
																}
															],
															"expression": {
																"id": 168,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "3150:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3177:4:1",
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1195,
															"src": "3150:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$1180_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3150:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint128,uint256,uint256)"
														}
													},
													"src": "3109:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "3109:80:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "3342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 175,
															"name": "mintParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "3352:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3363:12:1",
														"memberName": "token0Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "3352:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3342:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "IfStatement",
												"src": "3338:386:1",
												"trueBody": {
													"id": 203,
													"nodeType": "Block",
													"src": "3377:347:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 181,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 136,
																			"src": "3437:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
																				"typeString": "struct INonfungiblePositionManager.MintParams memory"
																			}
																		},
																		"id": 182,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3444:6:1",
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "3437:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 185,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "3477:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3469:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 183,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3469:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3469:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3523:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 178,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "3392:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3407:11:1",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3358,
																	"src": "3392:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3392:147:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "3392:147:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 193,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 136,
																			"src": "3651:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
																				"typeString": "struct INonfungiblePositionManager.MintParams memory"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3658:6:1",
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "3651:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 195,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3666:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3670:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3666:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 197,
																				"name": "mintParams",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "3678:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																					"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																				}
																			},
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3689:12:1",
																			"memberName": "token0Amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 58,
																			"src": "3678:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 199,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 72,
																			"src": "3704:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3678:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 190,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "3623:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3638:12:1",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3312,
																	"src": "3623:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3623:89:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 202,
															"nodeType": "ExpressionStatement",
															"src": "3623:89:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "3740:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 206,
															"name": "mintParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "3750:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3761:12:1",
														"memberName": "token1Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 60,
														"src": "3750:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3740:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"nodeType": "IfStatement",
												"src": "3736:386:1",
												"trueBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "3775:347:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 212,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 136,
																			"src": "3835:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
																				"typeString": "struct INonfungiblePositionManager.MintParams memory"
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3842:6:1",
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1161,
																		"src": "3835:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 216,
																				"name": "nonfungiblePositionManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "3875:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																					"typeString": "contract INonfungiblePositionManager"
																				}
																			],
																			"id": 215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3867:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 214,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3867:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3867:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3921:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 209,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "3790:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3805:11:1",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3358,
																	"src": "3790:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3790:147:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 220,
															"nodeType": "ExpressionStatement",
															"src": "3790:147:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 224,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 136,
																			"src": "4049:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MintParams_$1180_memory_ptr",
																				"typeString": "struct INonfungiblePositionManager.MintParams memory"
																			}
																		},
																		"id": 225,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4056:6:1",
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1161,
																		"src": "4049:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 226,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4064:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4068:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4064:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 228,
																				"name": "mintParams",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "4076:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
																					"typeString": "struct AddLiquidity.MintNewPositionParams calldata"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4087:12:1",
																			"memberName": "token1Amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 60,
																			"src": "4076:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 230,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 74,
																			"src": "4102:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4076:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 221,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "4021:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4036:12:1",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3312,
																	"src": "4021:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4021:89:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 233,
															"nodeType": "ExpressionStatement",
															"src": "4021:89:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1110:388:1",
										"text": "@notice Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 token0 and 1000 token1 in liquidity\n @return tokenId The id of the newly minted ERC721\n @return liquidity The amount of liquidity for the position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "591c7191",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNewPosition",
									"nameLocation": "1513:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "mintParams",
												"nameLocation": "1570:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1539:41:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintNewPositionParams_$61_calldata_ptr",
													"typeString": "struct AddLiquidity.MintNewPositionParams"
												},
												"typeName": {
													"id": 64,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 63,
														"name": "MintNewPositionParams",
														"nameLocations": [
															"1539:21:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 61,
														"src": "1539:21:1"
													},
													"referencedDeclaration": 61,
													"src": "1539:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintNewPositionParams_$61_storage_ptr",
														"typeString": "struct AddLiquidity.MintNewPositionParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:59:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1666:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1658:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 69,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1698:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1690:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1728:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1720:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:133:1"
									},
									"scope": 295,
									"src": "1504:2625:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "4351:487:1",
										"statements": [
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4421:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 274,
														"src": "4362:65:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_memory_ptr",
															"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
														},
														"typeName": {
															"id": 251,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 250,
																"name": "INonfungiblePositionManager.IncreaseLiquidityParams",
																"nameLocations": [
																	"4362:27:1",
																	"4390:23:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1208,
																"src": "4362:51:1"
															},
															"referencedDeclaration": 1208,
															"src": "4362:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_storage_ptr",
																"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"arguments": [
														{
															"id": 255,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4523:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 256,
															"name": "amountAdd0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4565:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 257,
															"name": "amountAdd1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4610:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4651:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4683:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 260,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4713:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4719:9:1",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4713:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3330",
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4731:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4713:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 253,
															"name": "INonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "4443:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1270_$",
																"typeString": "type(contract INonfungiblePositionManager)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4471:23:1",
														"memberName": "IncreaseLiquidityParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1208,
														"src": "4443:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$1208_storage_ptr_$",
															"typeString": "type(struct INonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4514:7:1",
														"4549:14:1",
														"4594:14:1",
														"4639:10:1",
														"4671:10:1",
														"4703:8:1"
													],
													"names": [
														"tokenId",
														"amount0Desired",
														"amount1Desired",
														"amount0Min",
														"amount1Min",
														"deadline"
													],
													"nodeType": "FunctionCall",
													"src": "4443:306:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_memory_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4362:387:1"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 266,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "4763:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															null,
															null
														],
														"id": 267,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4762:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$__$__$",
															"typeString": "tuple(uint128,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 270,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "4823:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_memory_ptr",
																	"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams memory"
																}
															],
															"expression": {
																"id": 268,
																"name": "nonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4778:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1270",
																	"typeString": "contract INonfungiblePositionManager"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4805:17:1",
															"memberName": "increaseLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1221,
															"src": "4778:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$1208_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
																"typeString": "function (struct INonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4778:52:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint128,uint256,uint256)"
														}
													},
													"src": "4762:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "4762:68:1"
											}
										]
									},
									"functionSelector": "617d6d6e",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidityCurrentRange",
									"nameLocation": "4146:29:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "amountAdd0",
												"nameLocation": "4220:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4212:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "amountAdd1",
												"nameLocation": "4249:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4241:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:91:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4325:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4317:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 245,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4317:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:43:1"
									},
									"scope": 295,
									"src": "4137:701:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1071
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "5010:93:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 289,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "5065:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AddLiquidity_$295",
																"typeString": "contract AddLiquidity"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5070:16:1",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "5065:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5087:8:1",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "5065:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 288,
												"id": 292,
												"nodeType": "Return",
												"src": "5058:37:1"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "4855:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4984:8:1"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4890:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4882:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4882:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4909:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4935:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4927:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4953:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4953:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4871:103:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5002:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 286,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5002:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:8:1"
									},
									"scope": 295,
									"src": "4846:257:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "422:5332:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "83:5673:1"
				},
				"id": 1
			},
			"contracts/base/LiquidityManagement.sol": {
				"ast": {
					"absolutePath": "contracts/base/LiquidityManagement.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							2051
						],
						"FixedPoint96": [
							2061
						],
						"FullMath": [
							2237
						],
						"IERC20": [
							845
						],
						"IPeripheryImmutableState": [
							1286
						],
						"IPeripheryPayments": [
							1312
						],
						"IUniswapV3Factory": [
							1513
						],
						"IUniswapV3MintCallback": [
							1566
						],
						"IUniswapV3Pool": [
							1535
						],
						"IUniswapV3PoolActions": [
							1662
						],
						"IUniswapV3PoolDerivedState": [
							1693
						],
						"IUniswapV3PoolEvents": [
							1812
						],
						"IUniswapV3PoolImmutables": [
							1852
						],
						"IUniswapV3PoolOwnerActions": [
							1878
						],
						"IUniswapV3PoolState": [
							1986
						],
						"IWETH9": [
							1552
						],
						"LiquidityAmounts": [
							2577
						],
						"LiquidityManagement": [
							514
						],
						"PeripheryImmutableState": [
							545
						],
						"PeripheryPayments": [
							755
						],
						"PoolAddress": [
							2675
						],
						"TickMath": [
							3214
						],
						"TransferHelper": [
							3385
						]
					},
					"id": 515,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:2"
						},
						{
							"absolutePath": "interfaces/IUniswapV3Factory.sol",
							"file": "../../interfaces/IUniswapV3Factory.sol",
							"id": 298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 1514,
							"src": "73:48:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/callback/IUniswapV3MintCallback.sol",
							"file": "../../interfaces/callback/IUniswapV3MintCallback.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 1567,
							"src": "123:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/TickMath.sol",
							"file": "../../libraries/TickMath.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 3215,
							"src": "187:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/PoolAddress.sol",
							"file": "../../libraries/PoolAddress.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 2676,
							"src": "229:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/CallbackValidation.sol",
							"file": "../../libraries/CallbackValidation.sol",
							"id": 302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 2052,
							"src": "272:48:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/LiquidityAmounts.sol",
							"file": "../../libraries/LiquidityAmounts.sol",
							"id": 303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 2578,
							"src": "322:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/PeripheryPayments.sol",
							"file": "./PeripheryPayments.sol",
							"id": 304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 756,
							"src": "372:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/PeripheryImmutableState.sol",
							"file": "./PeripheryImmutableState.sol",
							"id": 305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 546,
							"src": "407:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 307,
										"name": "IUniswapV3MintCallback",
										"nameLocations": [
											"610:22:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1566,
										"src": "610:22:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "610:22:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "PeripheryImmutableState",
										"nameLocations": [
											"634:23:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 545,
										"src": "634:23:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "634:23:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "PeripheryPayments",
										"nameLocations": [
											"659:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "659:17:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "659:17:2"
								}
							],
							"canonicalName": "LiquidityManagement",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 306,
								"nodeType": "StructuredDocumentation",
								"src": "450:119:2",
								"text": "@title Liquidity management functions\n @notice Internal functions for safely managing liquidity in Uniswap V3"
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								755,
								545,
								1286,
								1312,
								1566
							],
							"name": "LiquidityManagement",
							"nameLocation": "587:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "LiquidityManagement.MintCallbackData",
									"id": 318,
									"members": [
										{
											"constant": false,
											"id": 315,
											"mutability": "mutable",
											"name": "poolKey",
											"nameLocation": "739:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 318,
											"src": "719:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolKey_$2591_storage_ptr",
												"typeString": "struct PoolAddress.PoolKey"
											},
											"typeName": {
												"id": 314,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 313,
													"name": "PoolAddress.PoolKey",
													"nameLocations": [
														"719:11:2",
														"731:7:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2591,
													"src": "719:19:2"
												},
												"referencedDeclaration": 2591,
												"src": "719:19:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2591_storage_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 317,
											"mutability": "mutable",
											"name": "payer",
											"nameLocation": "765:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 318,
											"src": "757:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 316,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "757:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintCallbackData",
									"nameLocation": "691:16:2",
									"nodeType": "StructDefinition",
									"scope": 514,
									"src": "684:94:2",
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1565
									],
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "976:359:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "decoded",
														"nameLocation": "1011:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 377,
														"src": "987:31:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
															"typeString": "struct LiquidityManagement.MintCallbackData"
														},
														"typeName": {
															"id": 330,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 329,
																"name": "MintCallbackData",
																"nameLocations": [
																	"987:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 318,
																"src": "987:16:2"
															},
															"referencedDeclaration": 318,
															"src": "987:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintCallbackData_$318_storage_ptr",
																"typeString": "struct LiquidityManagement.MintCallbackData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 334,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "1032:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 335,
																	"name": "MintCallbackData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "1039:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_MintCallbackData_$318_storage_ptr_$",
																		"typeString": "type(struct LiquidityManagement.MintCallbackData storage pointer)"
																	}
																}
															],
															"id": 336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1038:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MintCallbackData_$318_storage_ptr_$",
																"typeString": "type(struct LiquidityManagement.MintCallbackData storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_MintCallbackData_$318_storage_ptr_$",
																"typeString": "type(struct LiquidityManagement.MintCallbackData storage pointer)"
															}
														],
														"expression": {
															"id": 332,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1021:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1025:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1021:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1021:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
														"typeString": "struct LiquidityManagement.MintCallbackData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "987:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "1102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 343,
																"name": "decoded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "1111:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																	"typeString": "struct LiquidityManagement.MintCallbackData memory"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1119:7:2",
															"memberName": "poolKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 315,
															"src": "1111:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"expression": {
															"id": 339,
															"name": "CallbackValidation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "1068:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CallbackValidation_$2051_$",
																"typeString": "type(library CallbackValidation)"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1087:14:2",
														"memberName": "verifyCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2050,
														"src": "1068:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$2591_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$1535_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1068:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 347,
														"name": "amount0Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "1144:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1158:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 361,
												"nodeType": "IfStatement",
												"src": "1140:88:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "1165:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																			"typeString": "struct LiquidityManagement.MintCallbackData memory"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1173:7:2",
																	"memberName": "poolKey",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 315,
																	"src": "1165:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1181:6:2",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2586,
																"src": "1165:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 354,
																	"name": "decoded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1189:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																		"typeString": "struct LiquidityManagement.MintCallbackData memory"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1197:5:2",
																"memberName": "payer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 317,
																"src": "1189:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 356,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1204:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1208:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1204:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 358,
																"name": "amount0Owed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "1216:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 350,
															"name": "pay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "1161:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1161:67:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 360,
													"nodeType": "ExpressionStatement",
													"src": "1161:67:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "amount1Owed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1243:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1257:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1243:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "1239:88:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"expression": {
																		"id": 366,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "1264:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																			"typeString": "struct LiquidityManagement.MintCallbackData memory"
																		}
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1272:7:2",
																	"memberName": "poolKey",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 315,
																	"src": "1264:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1280:6:2",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2588,
																"src": "1264:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 369,
																	"name": "decoded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1288:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																		"typeString": "struct LiquidityManagement.MintCallbackData memory"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1296:5:2",
																"memberName": "payer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 317,
																"src": "1288:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 371,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1303:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1307:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1303:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 373,
																"name": "amount1Owed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "1315:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 365,
															"name": "pay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "1260:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1260:67:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 375,
													"nodeType": "ExpressionStatement",
													"src": "1260:67:2"
												}
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "786:38:2",
										"text": "@inheritdoc IUniswapV3MintCallback"
									},
									"functionSelector": "d3487997",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3MintCallback",
									"nameLocation": "839:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "967:8:2"
									},
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount0Owed",
												"nameLocation": "879:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "871:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount1Owed",
												"nameLocation": "909:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "901:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "946:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "931:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "931:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:97:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "976:0:2"
									},
									"scope": 514,
									"src": "830:505:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "LiquidityManagement.AddLiquidityParams",
									"id": 399,
									"members": [
										{
											"constant": false,
											"id": 380,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "1388:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1380:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 379,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1380:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 382,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "1413:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1405:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 381,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1405:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 384,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1437:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1430:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 383,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1430:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 386,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1459:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1451:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1451:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 388,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "1485:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1479:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 387,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1479:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 390,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "1511:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1505:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 389,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1505:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 392,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "1539:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1531:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 391,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1531:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "1572:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1564:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1564:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "1605:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1597:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1597:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "1634:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 399,
											"src": "1626:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1626:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddLiquidityParams",
									"nameLocation": "1350:18:2",
									"nodeType": "StructDefinition",
									"scope": 514,
									"src": "1343:309:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1948:1147:2",
										"statements": [
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "poolKey",
														"nameLocation": "1986:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "1959:34:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
															"typeString": "struct PoolAddress.PoolKey"
														},
														"typeName": {
															"id": 418,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 417,
																"name": "PoolAddress.PoolKey",
																"nameLocations": [
																	"1959:11:2",
																	"1971:7:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2591,
																"src": "1959:19:2"
															},
															"referencedDeclaration": 2591,
															"src": "1959:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$2591_storage_ptr",
																"typeString": "struct PoolAddress.PoolKey"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 422,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2038:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																	"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2045:6:2",
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 380,
															"src": "2038:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 424,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2061:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																	"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2068:6:2",
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 382,
															"src": "2061:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 426,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2081:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																	"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2088:3:2",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 384,
															"src": "2081:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 420,
															"name": "PoolAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "2009:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PoolAddress_$2675_$",
																"typeString": "type(library PoolAddress)"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2021:7:2",
														"memberName": "PoolKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2591,
														"src": "2009:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$2591_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2030:6:2",
														"2053:6:2",
														"2076:3:2"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "2009:84:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1959:134:2"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "2106:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 434,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "2155:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "2164:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 432,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2675,
																		"src": "2128:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$2675_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2140:14:2",
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2674,
																	"src": "2128:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$2591_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2128:44:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 431,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "2113:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$1535_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2113:60:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "2106:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "2106:67:2"
											},
											{
												"id": 475,
												"nodeType": "Block",
												"src": "2227:502:2",
												"statements": [
													{
														"assignments": [
															441,
															null,
															null,
															null,
															null,
															null,
															null
														],
														"declarations": [
															{
																"constant": false,
																"id": 441,
																"mutability": "mutable",
																"name": "sqrtPriceX96",
																"nameLocation": "2251:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 475,
																"src": "2243:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"typeName": {
																	"id": 440,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "2243:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"visibility": "internal"
															},
															null,
															null,
															null,
															null,
															null,
															null
														],
														"id": 445,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 442,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "2279:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
																		"typeString": "contract IUniswapV3Pool"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2284:5:2",
																"memberName": "slot0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1899,
																"src": "2279:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																	"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2279:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2242:49:2"
													},
													{
														"assignments": [
															447
														],
														"declarations": [
															{
																"constant": false,
																"id": 447,
																"mutability": "mutable",
																"name": "sqrtRatioAX96",
																"nameLocation": "2314:13:2",
																"nodeType": "VariableDeclaration",
																"scope": 475,
																"src": "2306:21:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "2306:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 453,
														"initialValue": {
															"arguments": [
																{
																	"expression": {
																		"id": 450,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "2358:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																			"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2365:9:2",
																	"memberName": "tickLower",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 388,
																	"src": "2358:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"expression": {
																	"id": 448,
																	"name": "TickMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3214,
																	"src": "2330:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_TickMath_$3214_$",
																		"typeString": "type(library TickMath)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2339:18:2",
																"memberName": "getSqrtRatioAtTick",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3074,
																"src": "2330:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																	"typeString": "function (int24) pure returns (uint160)"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2330:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2306:69:2"
													},
													{
														"assignments": [
															455
														],
														"declarations": [
															{
																"constant": false,
																"id": 455,
																"mutability": "mutable",
																"name": "sqrtRatioBX96",
																"nameLocation": "2398:13:2",
																"nodeType": "VariableDeclaration",
																"scope": 475,
																"src": "2390:21:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"typeName": {
																	"id": 454,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "2390:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 461,
														"initialValue": {
															"arguments": [
																{
																	"expression": {
																		"id": 458,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "2442:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																			"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2449:9:2",
																	"memberName": "tickUpper",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 390,
																	"src": "2442:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"expression": {
																	"id": 456,
																	"name": "TickMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3214,
																	"src": "2414:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_TickMath_$3214_$",
																		"typeString": "type(library TickMath)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2423:18:2",
																"memberName": "getSqrtRatioAtTick",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3074,
																"src": "2414:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																	"typeString": "function (int24) pure returns (uint160)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2414:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2390:69:2"
													},
													{
														"expression": {
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 462,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2476:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 465,
																		"name": "sqrtPriceX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "2546:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 466,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2577:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 467,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "2609:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"expression": {
																			"id": 468,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "2641:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																				"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2648:14:2",
																		"memberName": "amount0Desired",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "2641:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 470,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "2681:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																				"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2688:14:2",
																		"memberName": "amount1Desired",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 394,
																		"src": "2681:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 463,
																		"name": "LiquidityAmounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "2488:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$2577_$",
																			"typeString": "type(library LiquidityAmounts)"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2505:22:2",
																	"memberName": "getLiquidityForAmounts",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2427,
																	"src": "2488:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
																		"typeString": "function (uint160,uint160,uint160,uint256,uint256) pure returns (uint128)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2488:229:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "2476:241:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 474,
														"nodeType": "ExpressionStatement",
														"src": "2476:241:2"
													}
												]
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 476,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2742:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 477,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "2751:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 478,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 481,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "2786:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																		"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2793:9:2",
																"memberName": "recipient",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 386,
																"src": "2786:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 483,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "2817:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																		"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2824:9:2",
																"memberName": "tickLower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 388,
																"src": "2817:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 485,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "2848:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																		"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2855:9:2",
																"memberName": "tickUpper",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 390,
																"src": "2848:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 487,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2879:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 491,
																				"name": "poolKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 419,
																				"src": "2941:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																					"typeString": "struct PoolAddress.PoolKey memory"
																				}
																			},
																			{
																				"expression": {
																					"id": 492,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2957:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2961:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2957:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																					"typeString": "struct PoolAddress.PoolKey memory"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 490,
																			"name": "MintCallbackData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "2914:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_MintCallbackData_$318_storage_ptr_$",
																				"typeString": "type(struct LiquidityManagement.MintCallbackData storage pointer)"
																			}
																		},
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"2932:7:2",
																			"2950:5:2"
																		],
																		"names": [
																			"poolKey",
																			"payer"
																		],
																		"nodeType": "FunctionCall",
																		"src": "2914:55:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																			"typeString": "struct LiquidityManagement.MintCallbackData memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_MintCallbackData_$318_memory_ptr",
																			"typeString": "struct LiquidityManagement.MintCallbackData memory"
																		}
																	],
																	"expression": {
																		"id": 488,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2903:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2907:6:2",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "2903:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2903:67:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 479,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "2762:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2767:4:2",
															"memberName": "mint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1593,
															"src": "2762:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,int24,int24,uint128,bytes memory) external returns (uint256,uint256)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2762:219:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2741:240:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "2741:240:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 500,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "3002:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 501,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "3013:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																			"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																		}
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3020:10:2",
																	"memberName": "amount0Min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 396,
																	"src": "3013:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3002:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 504,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "3034:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 505,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "3045:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
																			"typeString": "struct LiquidityManagement.AddLiquidityParams memory"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3052:10:2",
																	"memberName": "amount1Min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 398,
																	"src": "3045:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3034:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3002:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269636520736c69707061676520636865636b",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3064:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3c36da41fc4c1f9bee348a3f96d2cd392cf705e6518e56365210c90cbd48f34",
																"typeString": "literal_string \"Price slippage check\""
															},
															"value": "Price slippage check"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3c36da41fc4c1f9bee348a3f96d2cd392cf705e6518e56365210c90cbd48f34",
																"typeString": "literal_string \"Price slippage check\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2994:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2994:93:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1660:48:2",
										"text": "@notice Add liquidity to an initialized pool"
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1723:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1762:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1736:32:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddLiquidityParams_$399_memory_ptr",
													"typeString": "struct LiquidityManagement.AddLiquidityParams"
												},
												"typeName": {
													"id": 402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 401,
														"name": "AddLiquidityParams",
														"nameLocations": [
															"1736:18:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 399,
														"src": "1736:18:2"
													},
													"referencedDeclaration": 399,
													"src": "1736:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddLiquidityParams_$399_storage_ptr",
														"typeString": "struct LiquidityManagement.AddLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:34:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1828:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1820:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 405,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1860:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1852:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1890:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1882:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1927:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1912:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 411,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"1912:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1535,
														"src": "1912:14:2"
													},
													"referencedDeclaration": 1535,
													"src": "1912:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:137:2"
									},
									"scope": 514,
									"src": "1714:1381:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 515,
							"src": "569:2529:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:3054:2"
				},
				"id": 2
			},
			"contracts/base/PeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "contracts/base/PeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1286
						],
						"PeripheryImmutableState": [
							545
						]
					},
					"id": 546,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:3"
						},
						{
							"absolutePath": "interfaces/IPeripheryImmutableState.sol",
							"file": "../../interfaces/IPeripheryImmutableState.sol",
							"id": 517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 1287,
							"src": "73:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 519,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"262:24:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1286,
										"src": "262:24:3"
									},
									"id": 520,
									"nodeType": "InheritanceSpecifier",
									"src": "262:24:3"
								}
							],
							"canonicalName": "PeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "132:85:3",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545,
								1286
							],
							"name": "PeripheryImmutableState",
							"nameLocation": "235:23:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1279
									],
									"constant": false,
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "294:40:3",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 524,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "374:7:3",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 523,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "365:8:3"
									},
									"scope": 545,
									"src": "340:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 522,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1285
									],
									"constant": false,
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "388:40:3",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 528,
									"mutability": "immutable",
									"name": "WETH9",
									"nameLocation": "468:5:3",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 527,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "459:8:3"
									},
									"scope": 545,
									"src": "434:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 526,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "434:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "528:62:3",
										"statements": [
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "539:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 536,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "549:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "539:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "539:18:3"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 539,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "568:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 540,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "576:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "568:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "568:14:3"
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "502:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "494:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "_WETH9",
												"nameLocation": "520:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "512:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:34:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "528:0:3"
									},
									"scope": 545,
									"src": "482:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 546,
							"src": "217:376:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:549:3"
				},
				"id": 3
			},
			"contracts/base/PeripheryPayments.sol": {
				"ast": {
					"absolutePath": "contracts/base/PeripheryPayments.sol",
					"exportedSymbols": {
						"IERC20": [
							845
						],
						"IPeripheryImmutableState": [
							1286
						],
						"IPeripheryPayments": [
							1312
						],
						"IWETH9": [
							1552
						],
						"PeripheryImmutableState": [
							545
						],
						"PeripheryPayments": [
							755
						],
						"TransferHelper": [
							3385
						]
					},
					"id": 756,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 547,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:4"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../../interfaces/IERC20.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 846,
							"src": "73:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPeripheryPayments.sol",
							"file": "../../interfaces/IPeripheryPayments.sol",
							"id": 549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 1313,
							"src": "114:49:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IWETH9.sol",
							"file": "../../interfaces/IWETH9.sol",
							"id": 550,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 1553,
							"src": "165:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/TransferHelper.sol",
							"file": "../../libraries/TransferHelper.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 3386,
							"src": "206:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/base/PeripheryImmutableState.sol",
							"file": "./PeripheryImmutableState.sol",
							"id": 552,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 546,
							"src": "254:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 553,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"336:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "336:18:4"
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "336:18:4"
								},
								{
									"baseName": {
										"id": 555,
										"name": "PeripheryImmutableState",
										"nameLocations": [
											"356:23:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 545,
										"src": "356:23:4"
									},
									"id": 556,
									"nodeType": "InheritanceSpecifier",
									"src": "356:23:4"
								}
							],
							"canonicalName": "PeripheryPayments",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								545,
								1286,
								1312
							],
							"name": "PeripheryPayments",
							"nameLocation": "315:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "414:60:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 560,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "433:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "437:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "433:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 562,
																"name": "WETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "447:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "433:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74205745544839",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "454:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																"typeString": "literal_string \"Not WETH9\""
															},
															"value": "Not WETH9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																"typeString": "literal_string \"Not WETH9\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "425:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "425:41:4"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:4"
									},
									"scope": 755,
									"src": "387:87:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "609:318:4",
										"statements": [
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "balanceWETH9",
														"nameLocation": "628:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "620:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "620:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 585,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "675:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "667:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "667:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 580,
																	"name": "WETH9",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "650:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 579,
																"name": "IWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "643:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH9_$1552_$",
																	"typeString": "type(contract IWETH9)"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "643:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH9_$1552",
																"typeString": "contract IWETH9"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "657:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 784,
														"src": "643:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "620:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "balanceWETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "700:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 591,
																"name": "amountMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "716:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "700:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74205745544839",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "731:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																"typeString": "literal_string \"Insufficient WETH9\""
															},
															"value": "Insufficient WETH9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01e23337f78f001c03af3011e04e4dea54f4997ff97d41da263c1606bf0f9f73",
																"typeString": "literal_string \"Insufficient WETH9\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "692:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "692:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "692:60:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 596,
														"name": "balanceWETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "769:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "784:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "769:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "765:155:4",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "787:133:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 603,
																		"name": "balanceWETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "825:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 600,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "809:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 599,
																			"name": "IWETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1552,
																			"src": "802:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH9_$1552_$",
																				"typeString": "type(contract IWETH9)"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "802:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH9_$1552",
																			"typeString": "contract IWETH9"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "816:8:4",
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1551,
																	"src": "802:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "802:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "802:36:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "884:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 610,
																		"name": "balanceWETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "895:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 606,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "853:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "868:15:4",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3384,
																	"src": "853:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "853:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "ExpressionStatement",
															"src": "853:55:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "482:34:4",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "49404b7c",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "531:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 575,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "600:8:4"
									},
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "551:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "543:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "574:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "566:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:42:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:4"
									},
									"scope": 755,
									"src": "522:405:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1311
									],
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "1110:271:4",
										"statements": [
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "balanceToken",
														"nameLocation": "1129:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "1121:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 635,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1176:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1168:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1168:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1168:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "1151:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 629,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "1144:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$845_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1144:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$845",
																"typeString": "contract IERC20"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1158:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 784,
														"src": "1144:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1144:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1121:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 640,
																"name": "balanceToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "1201:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 641,
																"name": "amountMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "1217:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1201:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1232:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																"typeString": "literal_string \"Insufficient token\""
															},
															"value": "Insufficient token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cf3b53843c7738cfb0b95230b455802cee89f2ea29be4a30eee707228c97571",
																"typeString": "literal_string \"Insufficient token\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1193:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1193:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1193:60:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 646,
														"name": "balanceToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "1270:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1285:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1270:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "1266:108:4",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "1288:86:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "1331:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 653,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "1338:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 654,
																		"name": "balanceToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "1349:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 649,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "1303:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1318:12:4",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3312,
																	"src": "1303:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1303:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "1303:59:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "935:34:4",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "df2ab5bb",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "984:10:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 625,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1101:8:4"
									},
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1013:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1005:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1037:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1029:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1069:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1061:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:91:4"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:4"
									},
									"scope": 755,
									"src": "975:406:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1301
									],
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "1476:115:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 667,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1499:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1491:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 665,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1491:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1491:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1505:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1491:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1491:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "1487:96:4",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 675,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1549:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1553:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1549:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 679,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1569:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																				"typeString": "contract PeripheryPayments"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																				"typeString": "contract PeripheryPayments"
																			}
																		],
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1561:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 677,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1561:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1561:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1575:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1561:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 672,
																"name": "TransferHelper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3385,
																"src": "1518:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																	"typeString": "type(library TransferHelper)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1533:15:4",
															"memberName": "safeTransferETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3384,
															"src": "1518:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1518:65:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 683,
													"nodeType": "ExpressionStatement",
													"src": "1518:65:4"
												}
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "1389:34:4",
										"text": "@inheritdoc IPeripheryPayments"
									},
									"functionSelector": "12210e8a",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "1438:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 663,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1467:8:4"
									},
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:2:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:0:4"
									},
									"scope": 755,
									"src": "1429:162:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "1917:587:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1932:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 699,
															"name": "WETH9",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "1941:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1932:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 703,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1958:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																			"typeString": "contract PeripheryPayments"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																			"typeString": "contract PeripheryPayments"
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1950:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 701,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1950:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1950:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1964:7:4",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1950:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 706,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "1975:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1950:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1932:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "payer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 729,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2194:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PeripheryPayments_$755",
																		"typeString": "contract PeripheryPayments"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2186:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2186:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2177:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 750,
														"nodeType": "Block",
														"src": "2378:119:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 744,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "2454:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 745,
																			"name": "payer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "2461:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 746,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "2468:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "2479:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 741,
																			"name": "TransferHelper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3385,
																			"src": "2422:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																				"typeString": "type(library TransferHelper)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2437:16:4",
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3266,
																		"src": "2422:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,address,uint256)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2422:63:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 749,
																"nodeType": "ExpressionStatement",
																"src": "2422:63:4"
															}
														]
													},
													"id": 751,
													"nodeType": "IfStatement",
													"src": "2173:324:4",
													"trueBody": {
														"id": 740,
														"nodeType": "Block",
														"src": "2201:171:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 735,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "2336:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 736,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "2343:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 737,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "2354:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 732,
																			"name": "TransferHelper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3385,
																			"src": "2308:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3385_$",
																				"typeString": "type(library TransferHelper)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2323:12:4",
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3312,
																		"src": "2308:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2308:52:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 739,
																"nodeType": "ExpressionStatement",
																"src": "2308:52:4"
															}
														]
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "1928:569:4",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "1982:185:4",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 710,
																					"name": "WETH9",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 528,
																					"src": "2035:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 709,
																				"name": "IWETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1552,
																				"src": "2028:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IWETH9_$1552_$",
																					"typeString": "type(contract IWETH9)"
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2028:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWETH9_$1552",
																				"typeString": "contract IWETH9"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2042:7:4",
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1545,
																		"src": "2028:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "2057:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "2028:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2028:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 716,
															"nodeType": "ExpressionStatement",
															"src": "2028:37:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 721,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "2138:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 722,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "2149:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 718,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "2122:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 717,
																			"name": "IWETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1552,
																			"src": "2115:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH9_$1552_$",
																				"typeString": "type(contract IWETH9)"
																			}
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2115:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH9_$1552",
																			"typeString": "contract IWETH9"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2129:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "2115:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2115:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 724,
															"nodeType": "ExpressionStatement",
															"src": "2115:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1599:183:4",
										"text": "@param token The token to pay\n @param payer The entity that must pay\n @param recipient The entity that will receive payment\n @param value The amount to pay"
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pay",
									"nameLocation": "1797:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1811:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "1843:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1835:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1867:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1859:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1895:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1887:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:107:4"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1917:0:4"
									},
									"scope": 755,
									"src": "1788:716:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 756,
							"src": "297:2210:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2463:4"
				},
				"id": 4
			},
			"interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "64:287:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "IERC165",
							"nameLocation": "363:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "378:347:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "740:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "765:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "758:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 760,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "758:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:20:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "801:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "801:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:6:5"
									},
									"scope": 767,
									"src": "731:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 768,
							"src": "353:457:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:775:5"
				},
				"id": 5
			},
			"interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							845
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 770,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 845,
							"linearizedBaseContracts": [
								845
							],
							"name": "IERC20",
							"nameLocation": "146:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "160:68:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "243:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "280:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:9:6"
									},
									"scope": 845,
									"src": "234:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "297:74:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "386:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "404:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "396:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:17:6"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "436:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:9:6"
									},
									"scope": 845,
									"src": "377:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "453:215:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "683:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "700:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "692:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "719:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "711:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:35:6"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "745:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:6:6"
									},
									"scope": 845,
									"src": "674:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "759:270:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1044:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1062:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1054:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1077:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1069:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:32:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1109:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:6"
									},
									"scope": 845,
									"src": "1035:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "1126:655:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1796:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1812:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1804:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1829:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1821:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:33:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1855:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:6:6"
									},
									"scope": 845,
									"src": "1787:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "1869:304:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2188:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2209:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2201:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2225:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2217:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2244:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2236:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:51:6"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2270:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2270:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:6:6"
									},
									"scope": 845,
									"src": "2179:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "2284:163:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 835,
									"name": "Transfer",
									"nameLocation": "2459:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2484:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2468:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2506:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2490:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2518:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2510:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2467:57:6"
									},
									"src": "2453:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2533:151:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 844,
									"name": "Approval",
									"nameLocation": "2696:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2705:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2744:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2728:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2728:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2761:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2753:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:63:6"
									},
									"src": "2690:78:6"
								}
							],
							"scope": 846,
							"src": "136:2635:6",
							"usedErrors": [],
							"usedEvents": [
								835,
								844
							]
						}
					],
					"src": "35:2736:6"
				},
				"id": 6
			},
			"interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						],
						"IERC721": [
							961
						]
					},
					"id": 962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:7"
						},
						{
							"absolutePath": "interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 768,
							"src": "64:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 850,
										"name": "IERC165",
										"nameLocations": [
											"183:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "183:7:7"
									},
									"id": 851,
									"nodeType": "InheritanceSpecifier",
									"src": "183:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 849,
								"nodeType": "StructuredDocumentation",
								"src": "91:69:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 961,
							"linearizedBaseContracts": [
								961,
								767
							],
							"name": "IERC721",
							"nameLocation": "172:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "198:90:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 860,
									"name": "Transfer",
									"nameLocation": "300:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "325:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "309:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "347:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "331:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "367:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "351:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:67:7"
									},
									"src": "294:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "384:96:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 869,
									"name": "Approval",
									"nameLocation": "492:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "517:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "501:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "540:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "524:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "566:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "550:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:74:7"
									},
									"src": "486:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "583:119:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 878,
									"name": "ApprovalForAll",
									"nameLocation": "714:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "745:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "729:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "752:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "783:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "778:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:64:7"
									},
									"src": "708:85:7"
								},
								{
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "801:78:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "894:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "912:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "904:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:15:7"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "950:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "942:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:7"
									},
									"scope": 961,
									"src": "885:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "967:137:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1119:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1135:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1127:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:17:7"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1175:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1167:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:15:7"
									},
									"scope": 961,
									"src": "1110:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "1190:703:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1908:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1933:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "1925:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1947:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "1939:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1959:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "1951:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:43:7"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:7"
									},
									"scope": 961,
									"src": "1899:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "1985:517:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2517:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2538:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2530:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2552:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2544:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2564:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2556:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:43:7"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2581:0:7"
									},
									"scope": 961,
									"src": "2508:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "2590:464:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3069:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3085:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3077:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3097:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3089:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:29:7"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3114:0:7"
									},
									"scope": 961,
									"src": "3060:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "3123:145:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3283:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3303:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3295:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3294:17:7"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3343:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3335:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:18:7"
									},
									"scope": 961,
									"src": "3274:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3361:318:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3694:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3720:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3712:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3735:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3730:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3730:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3711:34:7"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3754:0:7"
									},
									"scope": 961,
									"src": "3685:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "3763:142:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3920:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3945:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "3937:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3937:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3960:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "3952:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:33:7"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "3993:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3993:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:6:7"
									},
									"scope": 961,
									"src": "3911:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "4007:580:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4602:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4627:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4619:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4641:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4633:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4653:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4645:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4677:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4662:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4662:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:64:7"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4691:0:7"
									},
									"scope": 961,
									"src": "4593:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 962,
							"src": "162:4533:7",
							"usedErrors": [],
							"usedEvents": [
								860,
								869,
								878
							]
						}
					],
					"src": "35:4660:7"
				},
				"id": 7
			},
			"interfaces/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						],
						"IERC721": [
							961
						],
						"IERC721Enumerable": [
							992
						]
					},
					"id": 993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 993,
							"sourceUnit": 962,
							"src": "62:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 966,
										"name": "IERC721",
										"nameLocations": [
											"261:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 961,
										"src": "261:7:8"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "261:7:8"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 965,
								"nodeType": "StructuredDocumentation",
								"src": "89:139:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 992,
							"linearizedBaseContracts": [
								992,
								961,
								767
							],
							"name": "IERC721Enumerable",
							"nameLocation": "240:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "278:84:8",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "377:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:8"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "414:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:9:8"
									},
									"scope": 992,
									"src": "368:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "431:174:8",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "620:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "648:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "640:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:30:8"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "701:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "693:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:17:8"
									},
									"scope": 992,
									"src": "611:99:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "718:167:8",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "900:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "921:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "913:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:15:8"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "951:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:9:8"
									},
									"scope": 992,
									"src": "891:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 993,
							"src": "230:733:8",
							"usedErrors": [],
							"usedEvents": [
								860,
								869,
								878
							]
						}
					],
					"src": "33:930:8"
				},
				"id": 8
			},
			"interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						],
						"IERC721": [
							961
						],
						"IERC721Metadata": [
							1019
						]
					},
					"id": 1020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 994,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 995,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1020,
							"sourceUnit": 962,
							"src": "62:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 997,
										"name": "IERC721",
										"nameLocations": [
											"256:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 961,
										"src": "256:7:9"
									},
									"id": 998,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 996,
								"nodeType": "StructuredDocumentation",
								"src": "89:136:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1019,
							"linearizedBaseContracts": [
								1019,
								961,
								767
							],
							"name": "IERC721Metadata",
							"nameLocation": "237:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "273:60:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "348:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:9"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "378:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:15:9"
									},
									"scope": 1019,
									"src": "339:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "401:62:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "478:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:2:9"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "510:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:15:9"
									},
									"scope": 1019,
									"src": "469:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "533:92:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "640:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "657:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "649:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:17:9"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "689:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "689:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:15:9"
									},
									"scope": 1019,
									"src": "631:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1020,
							"src": "227:480:9",
							"usedErrors": [],
							"usedEvents": [
								860,
								869,
								878
							]
						}
					],
					"src": "33:674:9"
				},
				"id": 9
			},
			"interfaces/IERC721Permit.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Permit.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						],
						"IERC721": [
							961
						],
						"IERC721Permit": [
							1054
						]
					},
					"id": 1055,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:10"
						},
						{
							"absolutePath": "interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1022,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1055,
							"sourceUnit": 962,
							"src": "75:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1024,
										"name": "IERC721",
										"nameLocations": [
											"255:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 961,
										"src": "255:7:10"
									},
									"id": 1025,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:10"
								}
							],
							"canonicalName": "IERC721Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1023,
								"nodeType": "StructuredDocumentation",
								"src": "102:126:10",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1054,
							"linearizedBaseContracts": [
								1054,
								961,
								767
							],
							"name": "IERC721Permit",
							"nameLocation": "238:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "270:105:10",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "390:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:10"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "431:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:9:10"
									},
									"scope": 1054,
									"src": "381:59:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "448:136:10",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "599:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:10"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "641:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:9:10"
									},
									"scope": 1054,
									"src": "590:60:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "658:611:10",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1284:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1309:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1301:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1335:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1327:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1361:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1353:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1386:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1380:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1045,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1380:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1406:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1398:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1426:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1418:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:144:10"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:10"
									},
									"scope": 1054,
									"src": "1275:177:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1055,
							"src": "228:1227:10",
							"usedErrors": [],
							"usedEvents": [
								860,
								869,
								878
							]
						}
					],
					"src": "46:1409:10"
				},
				"id": 10
			},
			"interfaces/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "interfaces/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1072
						]
					},
					"id": 1073,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1057,
								"nodeType": "StructuredDocumentation",
								"src": "64:156:11",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1072,
							"linearizedBaseContracts": [
								1072
							],
							"name": "IERC721Receiver",
							"nameLocation": "232:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "255:493:11",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "763:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "788:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "780:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "806:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "798:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "820:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "812:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "844:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "829:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:70:11"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "868:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "868:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:8:11"
									},
									"scope": 1072,
									"src": "754:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1073,
							"src": "222:657:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:844:11"
				},
				"id": 11
			},
			"interfaces/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "interfaces/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"IERC165": [
							767
						],
						"IERC721": [
							961
						],
						"IERC721Enumerable": [
							992
						],
						"IERC721Metadata": [
							1019
						],
						"IERC721Permit": [
							1054
						],
						"INonfungiblePositionManager": [
							1270
						],
						"IPeripheryImmutableState": [
							1286
						],
						"IPeripheryPayments": [
							1312
						],
						"IPoolInitializer": [
							1330
						],
						"PoolAddress": [
							2675
						]
					},
					"id": 1271,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1074,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:12"
						},
						{
							"absolutePath": "interfaces/IERC721Metadata.sol",
							"file": "./IERC721Metadata.sol",
							"id": 1075,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 1020,
							"src": "75:31:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1076,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 993,
							"src": "108:33:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPoolInitializer.sol",
							"file": "./IPoolInitializer.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 1331,
							"src": "145:32:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IERC721Permit.sol",
							"file": "./IERC721Permit.sol",
							"id": 1078,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 1055,
							"src": "179:29:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPeripheryPayments.sol",
							"file": "./IPeripheryPayments.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 1313,
							"src": "210:34:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPeripheryImmutableState.sol",
							"file": "./IPeripheryImmutableState.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 1287,
							"src": "246:40:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/PoolAddress.sol",
							"file": "../libraries/PoolAddress.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1271,
							"sourceUnit": 2676,
							"src": "288:38:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1083,
										"name": "IPoolInitializer",
										"nameLocations": [
											"556:16:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1330,
										"src": "556:16:12"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "556:16:12"
								},
								{
									"baseName": {
										"id": 1085,
										"name": "IPeripheryPayments",
										"nameLocations": [
											"579:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "579:18:12"
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "579:18:12"
								},
								{
									"baseName": {
										"id": 1087,
										"name": "IPeripheryImmutableState",
										"nameLocations": [
											"604:24:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1286,
										"src": "604:24:12"
									},
									"id": 1088,
									"nodeType": "InheritanceSpecifier",
									"src": "604:24:12"
								},
								{
									"baseName": {
										"id": 1089,
										"name": "IERC721Metadata",
										"nameLocations": [
											"635:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1019,
										"src": "635:15:12"
									},
									"id": 1090,
									"nodeType": "InheritanceSpecifier",
									"src": "635:15:12"
								},
								{
									"baseName": {
										"id": 1091,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"657:17:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 992,
										"src": "657:17:12"
									},
									"id": 1092,
									"nodeType": "InheritanceSpecifier",
									"src": "657:17:12"
								},
								{
									"baseName": {
										"id": 1093,
										"name": "IERC721Permit",
										"nameLocations": [
											"681:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1054,
										"src": "681:13:12"
									},
									"id": 1094,
									"nodeType": "InheritanceSpecifier",
									"src": "681:13:12"
								}
							],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "330:180:12",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1270,
							"linearizedBaseContracts": [
								1270,
								1054,
								992,
								1019,
								961,
								767,
								1286,
								1312,
								1330
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "520:27:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "703:463:12",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"eventSelector": "3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f",
									"id": 1105,
									"name": "IncreaseLiquidity",
									"nameLocation": "1178:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1196:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1229:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1221:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1098,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1248:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1240:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1265:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "1257:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:78:12"
									},
									"src": "1172:102:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "1280:423:12",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"eventSelector": "26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b4",
									"id": 1116,
									"name": "DecreaseLiquidity",
									"nameLocation": "1715:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1749:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1733:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1766:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1758:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1109,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1785:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1777:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1802:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1794:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:78:12"
									},
									"src": "1709:102:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "1817:527:12",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"eventSelector": "40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f01",
									"id": 1127,
									"name": "Collect",
									"nameLocation": "2356:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2380:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2364:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2397:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2389:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2416:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2408:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2433:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "2425:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:78:12"
									},
									"src": "2350:92:12"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "2450:1171:12",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "3636:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3654:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3646:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:17:12"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3734:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3727:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1132,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3727:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3762:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3754:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3793:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3785:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3822:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3814:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3850:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3843:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1140,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3843:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3874:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3868:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1142,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3868:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3904:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3898:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1144,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3898:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3936:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3928:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1146,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3928:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "3968:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3960:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4015:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "4007:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "4062:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "4054:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1152,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "4096:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "4088:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1154,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4088:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3712:406:12"
									},
									"scope": 1270,
									"src": "3627:492:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1180,
									"members": [
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "4164:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4156:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1158,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4156:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "4189:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4181:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1160,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4181:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "4213:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4206:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1162,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4206:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "4233:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4227:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1164,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4227:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "4259:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4253:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1166,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4253:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1169,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "4287:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4279:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1168,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4279:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1171,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "4320:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4312:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4312:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1173,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "4353:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4345:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4345:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1175,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "4382:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4374:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4374:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1177,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "4411:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4403:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1176,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4403:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1179,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "4439:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1180,
											"src": "4431:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1178,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4431:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nameLocation": "4134:10:12",
									"nodeType": "StructDefinition",
									"scope": 1270,
									"src": "4127:328:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "4463:593:12",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5071:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "5096:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5076:26:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1180_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1182,
														"name": "MintParams",
														"nameLocations": [
															"5076:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1180,
														"src": "5076:10:12"
													},
													"referencedDeclaration": 1180,
													"src": "5076:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1180_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5075:28:12"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5179:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5171:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5209:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5201:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1188,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5241:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5233:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5271:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5263:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5156:133:12"
									},
									"scope": 1270,
									"src": "5062:228:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1208,
									"members": [
										{
											"constant": false,
											"id": 1197,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "5348:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "5340:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5340:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1199,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nameLocation": "5374:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "5366:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1198,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5366:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1201,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nameLocation": "5407:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "5399:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5399:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1203,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "5440:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "5432:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5432:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1205,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "5469:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "5461:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5461:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1207,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "5498:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1208,
											"src": "5490:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5490:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nameLocation": "5305:23:12",
									"nodeType": "StructDefinition",
									"scope": 1270,
									"src": "5298:216:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "5522:830:12",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nameLocation": "6367:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "6418:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "6385:39:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1211,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1210,
														"name": "IncreaseLiquidityParams",
														"nameLocations": [
															"6385:23:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1208,
														"src": "6385:23:12"
													},
													"referencedDeclaration": 1208,
													"src": "6385:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1208_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6384:41:12"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6501:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "6493:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1214,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6493:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6533:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "6525:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6525:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6563:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "6555:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:103:12"
									},
									"scope": 1270,
									"src": "6358:224:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1232,
									"members": [
										{
											"constant": false,
											"id": 1223,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6640:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1232,
											"src": "6632:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6632:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1225,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "6666:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1232,
											"src": "6658:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1224,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6658:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1227,
											"mutability": "mutable",
											"name": "amount0Min",
											"nameLocation": "6694:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1232,
											"src": "6686:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6686:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1229,
											"mutability": "mutable",
											"name": "amount1Min",
											"nameLocation": "6723:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1232,
											"src": "6715:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6715:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1231,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "6752:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1232,
											"src": "6744:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1230,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6744:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nameLocation": "6597:23:12",
									"nodeType": "StructDefinition",
									"scope": 1270,
									"src": "6590:178:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "6776:709:12",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nameLocation": "7500:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "7551:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "7518:39:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1232_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1235,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1234,
														"name": "DecreaseLiquidityParams",
														"nameLocations": [
															"7518:23:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1232,
														"src": "7518:23:12"
													},
													"referencedDeclaration": 1232,
													"src": "7518:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1232_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7517:41:12"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "7620:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "7612:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "7637:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "7629:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7629:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7611:34:12"
									},
									"scope": 1270,
									"src": "7491:155:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1252,
									"members": [
										{
											"constant": false,
											"id": 1245,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "7694:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1252,
											"src": "7686:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1244,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7686:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1247,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "7720:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1252,
											"src": "7712:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1246,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7712:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1249,
											"mutability": "mutable",
											"name": "amount0Max",
											"nameLocation": "7748:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1252,
											"src": "7740:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1248,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7740:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1251,
											"mutability": "mutable",
											"name": "amount1Max",
											"nameLocation": "7777:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1252,
											"src": "7769:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1250,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "7769:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nameLocation": "7661:13:12",
									"nodeType": "StructDefinition",
									"scope": 1270,
									"src": "7654:141:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "7803:495:12",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "8313:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "8344:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "8321:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1252_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "CollectParams",
														"nameLocations": [
															"8321:13:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "8321:13:12"
													},
													"referencedDeclaration": 1252,
													"src": "8321:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1252_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8320:31:12"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "8386:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "8378:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8378:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "8403:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "8395:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8377:34:12"
									},
									"scope": 1270,
									"src": "8304:108:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "8420:215:12",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "8650:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8663:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "8655:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8654:17:12"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8688:0:12"
									},
									"scope": 1270,
									"src": "8641:48:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1271,
							"src": "510:8182:12",
							"usedErrors": [],
							"usedEvents": [
								860,
								869,
								878,
								1105,
								1116,
								1127
							]
						}
					],
					"src": "46:8646:12"
				},
				"id": 12
			},
			"interfaces/IPeripheryImmutableState.sol": {
				"ast": {
					"absolutePath": "interfaces/IPeripheryImmutableState.sol",
					"exportedSymbols": {
						"IPeripheryImmutableState": [
							1286
						]
					},
					"id": 1287,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryImmutableState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1273,
								"nodeType": "StructuredDocumentation",
								"src": "75:93:13",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1286,
							"linearizedBaseContracts": [
								1286
							],
							"name": "IPeripheryImmutableState",
							"nameLocation": "178:24:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "210:57:13",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "282:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:13"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "315:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:9:13"
									},
									"scope": 1286,
									"src": "273:51:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "332:40:13",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nameLocation": "387:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:13"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "418:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:9:13"
									},
									"scope": 1286,
									"src": "378:49:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1287,
							"src": "168:262:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:386:13"
				},
				"id": 13
			},
			"interfaces/IPeripheryPayments.sol": {
				"ast": {
					"absolutePath": "interfaces/IPeripheryPayments.sol",
					"exportedSymbols": {
						"IPeripheryPayments": [
							1312
						]
					},
					"id": 1313,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPeripheryPayments",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1289,
								"nodeType": "StructuredDocumentation",
								"src": "75:94:14",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "IPeripheryPayments",
							"nameLocation": "179:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "205:305:14",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nameLocation": "525:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "545:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "537:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "568:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "560:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:42:14"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:14"
									},
									"scope": 1312,
									"src": "516:80:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "604:227:14",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nameLocation": "846:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:14"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:14"
									},
									"scope": 1312,
									"src": "837:38:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "883:431:14",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nameLocation": "1329:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1358:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1350:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nameLocation": "1382:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1374:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1414:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1406:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:91:14"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:0:14"
									},
									"scope": 1312,
									"src": "1320:128:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1313,
							"src": "169:1282:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1407:14"
				},
				"id": 14
			},
			"interfaces/IPoolInitializer.sol": {
				"ast": {
					"absolutePath": "interfaces/IPoolInitializer.sol",
					"exportedSymbols": {
						"IPoolInitializer": [
							1330
						]
					},
					"id": 1331,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolInitializer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "75:197:15",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 1330,
							"linearizedBaseContracts": [
								1330
							],
							"name": "IPoolInitializer",
							"nameLocation": "282:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "306:654:15",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 1329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nameLocation": "975:34:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1028:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1020:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1053:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1045:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1077:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1070:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1321,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1070:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1099:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1091:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1323,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:109:15"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1153:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "1145:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:14:15"
									},
									"scope": 1330,
									"src": "966:193:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1331,
							"src": "272:890:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1118:15"
				},
				"id": 15
			},
			"interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1430
						],
						"IUniswapV3SwapCallback": [
							13
						]
					},
					"id": 1431,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1332,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:16"
						},
						{
							"id": 1333,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "72:19:16"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 1334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1431,
							"sourceUnit": 14,
							"src": "95:83:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1336,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"313:22:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "313:22:16"
									},
									"id": 1337,
									"nodeType": "InheritanceSpecifier",
									"src": "313:22:16"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "182:106:16",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "298:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 1354,
									"members": [
										{
											"constant": false,
											"id": 1339,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "392:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "384:15:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1338,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "384:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1341,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "418:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "410:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1340,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1343,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "444:3:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "437:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1342,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "437:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1345,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "466:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "458:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1344,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "458:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1347,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "494:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "486:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1346,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1349,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "521:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "513:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1348,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "513:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1351,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "548:16:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "540:24:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1350,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1353,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "583:17:16",
											"nodeType": "VariableDeclaration",
											"scope": 1354,
											"src": "575:25:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1352,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "575:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "350:22:16",
									"nodeType": "StructDefinition",
									"scope": 1430,
									"src": "343:265:16",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "616:252:16",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "883:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "932:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "900:38:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$1354_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 1357,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1356,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"900:22:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1354,
														"src": "900:22:16"
													},
													"referencedDeclaration": 1354,
													"src": "900:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$1354_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:40:16"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "974:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "966:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:19:16"
									},
									"scope": 1430,
									"src": "874:111:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 1374,
									"members": [
										{
											"constant": false,
											"id": 1365,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1034:4:16",
											"nodeType": "VariableDeclaration",
											"scope": 1374,
											"src": "1028:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1364,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1028:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1367,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1057:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 1374,
											"src": "1049:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1366,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1369,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1085:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1374,
											"src": "1077:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1368,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1077:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1371,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1112:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1374,
											"src": "1104:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1370,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1104:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1373,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1139:16:16",
											"nodeType": "VariableDeclaration",
											"scope": 1374,
											"src": "1131:24:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1372,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1131:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1000:16:16",
									"nodeType": "StructDefinition",
									"scope": 1430,
									"src": "993:170:16",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "1171:275:16",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1461:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1498:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "1472:32:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$1374_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 1377,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1376,
														"name": "ExactInputParams",
														"nameLocations": [
															"1472:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1374,
														"src": "1472:16:16"
													},
													"referencedDeclaration": 1374,
													"src": "1472:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$1374_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:34:16"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1540:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "1532:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:19:16"
									},
									"scope": 1430,
									"src": "1452:99:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1400,
									"members": [
										{
											"constant": false,
											"id": 1385,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1609:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1601:15:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1384,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1601:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1387,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1635:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1627:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1627:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1661:3:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1654:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1388,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1654:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1683:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1675:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1390,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1675:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1711:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1703:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1392,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1703:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1395,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1738:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1730:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1394,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1730:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1397,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1766:15:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1758:23:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1758:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1399,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1800:17:16",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1792:25:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1398,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1792:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1566:23:16",
									"nodeType": "StructDefinition",
									"scope": 1430,
									"src": "1559:266:16",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "1833:252:16",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2100:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2151:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2118:39:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1400_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2118:23:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "2118:23:16"
													},
													"referencedDeclaration": 1400,
													"src": "2118:23:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1400_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:41:16"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2193:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2185:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2185:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:18:16"
									},
									"scope": 1430,
									"src": "2091:112:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1420,
									"members": [
										{
											"constant": false,
											"id": 1411,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2253:4:16",
											"nodeType": "VariableDeclaration",
											"scope": 1420,
											"src": "2247:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1410,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2247:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1413,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2276:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 1420,
											"src": "2268:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1412,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2268:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1415,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2304:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 1420,
											"src": "2296:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1414,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2296:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1417,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2331:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 1420,
											"src": "2323:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2323:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1419,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2359:15:16",
											"nodeType": "VariableDeclaration",
											"scope": 1420,
											"src": "2351:23:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2351:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2218:17:16",
									"nodeType": "StructDefinition",
									"scope": 1430,
									"src": "2211:171:16",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "2390:286:16",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2691:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2730:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2703:33:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1420_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2703:17:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1420,
														"src": "2703:17:16"
													},
													"referencedDeclaration": 1420,
													"src": "2703:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1420_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:35:16"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2772:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2764:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2763:18:16"
									},
									"scope": 1430,
									"src": "2682:100:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1431,
							"src": "288:2497:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2741:16"
				},
				"id": 16
			},
			"interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							1513
						]
					},
					"id": 1514,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "75:165:17",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 1513,
							"linearizedBaseContracts": [
								1513
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "250:17:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "275:187:17",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 1440,
									"name": "OwnerChanged",
									"nameLocation": "474:12:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "503:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "487:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "529:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "513:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:52:17"
									},
									"src": "468:71:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "547:426:17",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
									"id": 1453,
									"name": "PoolCreated",
									"nameLocation": "985:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1023:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1007:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1056:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1040:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1088:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1073:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1446,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1073:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1108:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1102:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1448,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1102:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1138:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1130:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:153:17"
									},
									"src": "979:171:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "1158:277:17",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
									"id": 1460,
									"name": "FeeAmountEnabled",
									"nameLocation": "1447:16:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1479:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1464:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1455,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1464:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1498:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1484:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1457,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1484:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:47:17"
									},
									"src": "1441:70:17"
								},
								{
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "1519:165:17",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 1466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1699:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:2:17"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "1730:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:9:17"
									},
									"scope": 1513,
									"src": "1690:49:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "1747:351:17",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nameLocation": "2113:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2141:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2134:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1468,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2134:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:12:17"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2169:5:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1471,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2169:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:7:17"
									},
									"scope": 1513,
									"src": "2104:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "2184:476:17",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "2675:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2701:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2693:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2726:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2718:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2750:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2743:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1480,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2743:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:78:17"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2792:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2784:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:14:17"
									},
									"scope": 1513,
									"src": "2666:132:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "2806:561:17",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3382:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3411:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3403:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3436:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3428:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3460:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3453:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1492,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3453:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:78:17"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3497:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3489:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:14:17"
									},
									"scope": 1513,
									"src": "3373:130:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "3511:146:17",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 1504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "3672:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3689:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3681:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3680:16:17"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3705:0:17"
									},
									"scope": 1513,
									"src": "3663:43:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "3714:329:17",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nameLocation": "4058:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4081:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "4074:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1506,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4074:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "4092:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "4086:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1508,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4086:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4073:31:17"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4113:0:17"
									},
									"scope": 1513,
									"src": "4049:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1514,
							"src": "240:3877:17",
							"usedErrors": [],
							"usedEvents": [
								1440,
								1453,
								1460
							]
						}
					],
					"src": "46:4071:17"
				},
				"id": 17
			},
			"interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							1535
						],
						"IUniswapV3PoolActions": [
							1662
						],
						"IUniswapV3PoolDerivedState": [
							1693
						],
						"IUniswapV3PoolEvents": [
							1812
						],
						"IUniswapV3PoolImmutables": [
							1852
						],
						"IUniswapV3PoolOwnerActions": [
							1878
						],
						"IUniswapV3PoolState": [
							1986
						]
					},
					"id": 1536,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:18"
						},
						{
							"absolutePath": "interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1853,
							"src": "75:45:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1987,
							"src": "122:40:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1694,
							"src": "164:47:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 1519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1663,
							"src": "213:42:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1879,
							"src": "257:47:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 1521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 1813,
							"src": "306:41:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1523,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"653:24:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1852,
										"src": "653:24:18"
									},
									"id": 1524,
									"nodeType": "InheritanceSpecifier",
									"src": "653:24:18"
								},
								{
									"baseName": {
										"id": 1525,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"684:19:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1986,
										"src": "684:19:18"
									},
									"id": 1526,
									"nodeType": "InheritanceSpecifier",
									"src": "684:19:18"
								},
								{
									"baseName": {
										"id": 1527,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"710:26:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1693,
										"src": "710:26:18"
									},
									"id": 1528,
									"nodeType": "InheritanceSpecifier",
									"src": "710:26:18"
								},
								{
									"baseName": {
										"id": 1529,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"743:21:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1662,
										"src": "743:21:18"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "743:21:18"
								},
								{
									"baseName": {
										"id": 1531,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"771:26:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1878,
										"src": "771:26:18"
									},
									"id": 1532,
									"nodeType": "InheritanceSpecifier",
									"src": "771:26:18"
								},
								{
									"baseName": {
										"id": 1533,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"804:20:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1812,
										"src": "804:20:18"
									},
									"id": 1534,
									"nodeType": "InheritanceSpecifier",
									"src": "804:20:18"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1522,
								"nodeType": "StructuredDocumentation",
								"src": "351:269:18",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1535,
							"linearizedBaseContracts": [
								1535,
								1812,
								1878,
								1662,
								1693,
								1986,
								1852
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "630:14:18",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1536,
							"src": "620:212:18",
							"usedErrors": [],
							"usedEvents": [
								1703,
								1720,
								1735,
								1750,
								1767,
								1782,
								1789,
								1800,
								1811
							]
						}
					],
					"src": "46:786:18"
				},
				"id": 18
			},
			"interfaces/IWETH9.sol": {
				"ast": {
					"absolutePath": "interfaces/IWETH9.sol",
					"exportedSymbols": {
						"IERC20": [
							845
						],
						"IWETH9": [
							1552
						]
					},
					"id": 1553,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1537,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:19"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1538,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1553,
							"sourceUnit": 846,
							"src": "75:22:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1540,
										"name": "IERC20",
										"nameLocations": [
											"153:6:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "153:6:19"
									},
									"id": 1541,
									"nodeType": "InheritanceSpecifier",
									"src": "153:6:19"
								}
							],
							"canonicalName": "IWETH9",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1539,
								"nodeType": "StructuredDocumentation",
								"src": "101:32:19",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 1552,
							"linearizedBaseContracts": [
								1552,
								845
							],
							"name": "IWETH9",
							"nameLocation": "143:6:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "167:46:19",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "228:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:2:19"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:0:19"
									},
									"scope": 1552,
									"src": "219:36:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "263:47:19",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "325:8:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "334:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:19"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:0:19"
									},
									"scope": 1552,
									"src": "316:36:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1553,
							"src": "133:222:19",
							"usedErrors": [],
							"usedEvents": [
								835,
								844
							]
						}
					],
					"src": "46:311:19"
				},
				"id": 19
			},
			"interfaces/callback/IUniswapV3MintCallback.sol": {
				"ast": {
					"absolutePath": "interfaces/callback/IUniswapV3MintCallback.sol",
					"exportedSymbols": {
						"IUniswapV3MintCallback": [
							1566
						]
					},
					"id": 1567,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3MintCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1555,
								"nodeType": "StructuredDocumentation",
								"src": "75:146:20",
								"text": "@title Callback for IUniswapV3PoolActions#mint\n @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1566,
							"linearizedBaseContracts": [
								1566
							],
							"name": "IUniswapV3MintCallback",
							"nameLocation": "231:22:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "261:590:20",
										"text": "@notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call"
									},
									"functionSelector": "d3487997",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3MintCallback",
									"nameLocation": "866:21:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "amount0Owed",
												"nameLocation": "906:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "898:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "amount1Owed",
												"nameLocation": "936:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "928:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "973:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "958:19:20",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "958:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:97:20"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:20"
									},
									"scope": 1566,
									"src": "857:137:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1567,
							"src": "221:776:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:951:20"
				},
				"id": 20
			},
			"interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1662
						]
					},
					"id": 1663,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1569,
								"nodeType": "StructuredDocumentation",
								"src": "75:104:21",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1662,
							"linearizedBaseContracts": [
								1662
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "189:21:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "248:208:21",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "471:10:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "490:12:21",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "482:20:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1571,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:22:21"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:21"
									},
									"scope": 1662,
									"src": "462:51:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "521:1039:21",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1575:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1598:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1590:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1624:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1618:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1579,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1618:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1650:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1644:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1581,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1644:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1678:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1670:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1583,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1710:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1695:19:21",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:142:21"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1748:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1740:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1765:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1757:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:34:21"
									},
									"scope": 1662,
									"src": "1566:208:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "1782:1064:21",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2861:7:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2887:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2879:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2913:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2907:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1597,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2907:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2939:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2933:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1599,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2933:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2967:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2959:24:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1601,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "3002:16:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2994:24:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1603,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2868:157:21"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3052:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3044:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1606,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3069:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3061:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1608,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:34:21"
									},
									"scope": 1662,
									"src": "2852:226:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "3086:638:21",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3739:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3760:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3754:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1613,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3754:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3786:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3780:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1615,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3780:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3814:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3806:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1617,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3806:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:84:21"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3854:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3846:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3871:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "3863:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3845:34:21"
									},
									"scope": 1662,
									"src": "3730:150:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "3888:1024:21",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4927:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4950:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "4942:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4942:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4975:10:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "4970:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4970:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "5003:15:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "4996:22:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1631,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4996:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "5037:17:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "5029:25:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1633,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5080:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "5065:19:21",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5065:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4931:160:21"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5117:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "5110:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1638,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5110:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5133:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "5126:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1640,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:32:21"
									},
									"scope": 1662,
									"src": "4918:224:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "5150:664:21",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5829:5:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5853:9:21",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5845:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5845:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5881:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5873:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5907:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5899:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5899:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5940:4:21",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5925:19:21",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5925:5:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5834:117:21"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5960:0:21"
									},
									"scope": 1662,
									"src": "5820:141:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "6021:370:21",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6406:34:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6448:26:21",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "6441:33:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1657,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6441:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6440:35:21"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6484:0:21"
									},
									"scope": 1662,
									"src": "6397:88:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1663,
							"src": "179:6309:21",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:6444:21"
				},
				"id": 21
			},
			"interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1693
						]
					},
					"id": 1694,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:22"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1665,
								"nodeType": "StructuredDocumentation",
								"src": "75:225:22",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1693,
							"linearizedBaseContracts": [
								1693
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "310:26:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "344:1054:22",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1413:7:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1439:11:22",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "1421:29:22",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1667,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1421:6:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1668,
													"nodeType": "ArrayTypeName",
													"src": "1421:8:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:31:22"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1517:15:22",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "1502:30:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1671,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1502:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1672,
													"nodeType": "ArrayTypeName",
													"src": "1502:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1551:34:22",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "1534:51:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1674,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1534:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1675,
													"nodeType": "ArrayTypeName",
													"src": "1534:9:22",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:85:22"
									},
									"scope": 1693,
									"src": "1404:183:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "1595:779:22",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1692,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2389:25:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2421:9:22",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "2415:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1680,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2415:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2438:9:22",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "2432:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1682,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2432:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:34:22"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2519:20:22",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "2513:26:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1685,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2513:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2562:29:22",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "2554:37:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1687,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2613:13:22",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "2606:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1689,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2606:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:139:22"
									},
									"scope": 1693,
									"src": "2380:258:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1694,
							"src": "300:2341:22",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2595:22"
				},
				"id": 22
			},
			"interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1812
						]
					},
					"id": 1813,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1695,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1696,
								"nodeType": "StructuredDocumentation",
								"src": "75:90:23",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1812,
							"linearizedBaseContracts": [
								1812
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "175:20:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "203:347:23",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 1703,
									"name": "Initialize",
									"nameLocation": "562:10:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "581:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "573:20:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1698,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "601:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "595:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1700,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "595:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:34:23"
									},
									"src": "556:51:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "615:558:23",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 1720,
									"name": "Mint",
									"nameLocation": "1185:4:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1208:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1200:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1241:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1225:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1271:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1257:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1709,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1257:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1305:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1291:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1711,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1291:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1333:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1325:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1713,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1358:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1350:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1384:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1376:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:209:23"
									},
									"src": "1179:220:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "1407:499:23",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 1735,
									"name": "Collect",
									"nameLocation": "1918:7:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1952:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1936:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1976:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1968:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2010:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1996:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1726,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1996:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2044:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "2030:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1728,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2030:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2072:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "2064:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1730,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2098:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "2090:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1732,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:187:23"
									},
									"src": "1912:201:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "2121:530:23",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 1750,
									"name": "Burn",
									"nameLocation": "2663:4:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2694:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2678:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2724:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2710:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1739,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2710:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2758:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2744:23:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1741,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2744:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2786:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2778:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1743,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2778:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2811:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2803:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2837:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2829:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:184:23"
									},
									"src": "2657:195:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "2860:607:23",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 1767,
									"name": "Swap",
									"nameLocation": "3479:4:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3510:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3494:22:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3543:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3527:25:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3570:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3563:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1756,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3563:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3595:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3588:14:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1758,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3588:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3621:12:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3613:20:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1760,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3613:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3652:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3644:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1762,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3644:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3678:4:23",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3672:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1764,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3672:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:206:23"
									},
									"src": "3473:217:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "3698:568:23",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1782,
									"name": "Flash",
									"nameLocation": "4278:5:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4310:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4294:22:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4294:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4343:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4327:25:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4371:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4363:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4397:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4389:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4423:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4415:13:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4447:5:23",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4439:13:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4283:176:23"
									},
									"src": "4272:188:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "4468:455:23",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1789,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4935:34:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4987:29:23",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "4980:36:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1784,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4980:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "5034:29:23",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "5027:36:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1786,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5027:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4969:101:23"
									},
									"src": "4929:142:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "5079:374:23",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1800,
									"name": "SetFeeProtocol",
									"nameLocation": "5465:14:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5486:15:23",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "5480:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1791,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5480:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5509:15:23",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "5503:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1793,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5503:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5532:15:23",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "5526:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1795,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5526:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5555:15:23",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "5549:21:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5549:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:92:23"
									},
									"src": "5459:113:23"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "5580:388:23",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1811,
									"name": "CollectProtocol",
									"nameLocation": "5980:15:23",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6012:6:23",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "5996:22:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5996:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6036:9:23",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6020:25:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:23",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6055:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6047:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1806,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6072:7:23",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6064:15:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1808,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6064:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:85:23"
									},
									"src": "5974:107:23"
								}
							],
							"scope": 1813,
							"src": "165:5919:23",
							"usedErrors": [],
							"usedEvents": [
								1703,
								1720,
								1735,
								1750,
								1767,
								1782,
								1789,
								1800,
								1811
							]
						}
					],
					"src": "46:6038:23"
				},
				"id": 23
			},
			"interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1852
						]
					},
					"id": 1853,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:24"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1815,
								"nodeType": "StructuredDocumentation",
								"src": "75:155:24",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1852,
							"linearizedBaseContracts": [
								1852
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "240:24:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "272:139:24",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "426:7:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:24"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "459:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:9:24"
									},
									"scope": 1852,
									"src": "417:51:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "476:114:24",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "605:6:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:2:24"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "637:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:9:24"
									},
									"scope": 1852,
									"src": "596:50:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "654:115:24",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "784:6:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:2:24"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "816:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:9:24"
									},
									"scope": 1852,
									"src": "775:50:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "833:85:24",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "933:3:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:24"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "962:6:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1836,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "962:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:8:24"
									},
									"scope": 1852,
									"src": "924:46:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "978:362:24",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1355:11:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1366:2:24"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "1392:5:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1842,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1392:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:7:24"
									},
									"scope": 1852,
									"src": "1346:53:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "1407:366:24",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1788:19:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1807:2:24"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1833:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1848,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:24"
									},
									"scope": 1852,
									"src": "1779:63:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1853,
							"src": "230:1615:24",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1799:24"
				},
				"id": 24
			},
			"interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1878
						]
					},
					"id": 1879,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1854,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:25"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1855,
								"nodeType": "StructuredDocumentation",
								"src": "75:118:25",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1878,
							"linearizedBaseContracts": [
								1878
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "203:26:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "237:207:25",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "459:14:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "480:12:25",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "474:18:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1857,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "474:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "500:12:25",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "494:18:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1859,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "494:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:40:25"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:25"
									},
									"scope": 1878,
									"src": "450:73:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "531:488:25",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1034:15:25",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1068:9:25",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1060:17:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1096:16:25",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1088:24:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1867,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1131:16:25",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1123:24:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1869,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:105:25"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1181:7:25",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1173:15:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1872,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1198:7:25",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "1190:15:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1874,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:34:25"
									},
									"scope": 1878,
									"src": "1025:182:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1879,
							"src": "193:1017:25",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1164:25"
				},
				"id": 25
			},
			"interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1986
						]
					},
					"id": 1987,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1880,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:26"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1881,
								"nodeType": "StructuredDocumentation",
								"src": "75:172:26",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1986,
							"linearizedBaseContracts": [
								1986
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "257:19:26",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "284:1152:26",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1451:5:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:2:26"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1531:12:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1523:20:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1884,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1564:4:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1558:10:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1886,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1558:5:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1590:16:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1583:23:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1888,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1583:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1628:22:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1621:29:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1890,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1621:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1672:26:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1665:33:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1892,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1665:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1719:11:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1713:17:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1894,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1713:5:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1750:8:26",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1745:13:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1745:4:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:261:26"
									},
									"scope": 1986,
									"src": "1442:328:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "1778:169:26",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1962:20:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:2:26"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "2008:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:9:26"
									},
									"scope": 1986,
									"src": "1953:64:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "2025:169:26",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2209:20:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:2:26"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2255:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:9:26"
									},
									"scope": 1986,
									"src": "2200:64:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "2272:148:26",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2435:12:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2447:2:26"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2481:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "2473:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1914,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2497:6:26",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "2489:14:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1916,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:32:26"
									},
									"scope": 1986,
									"src": "2426:79:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "2513:151:26",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2679:9:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:2:26"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "2714:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1922,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:9:26"
									},
									"scope": 1986,
									"src": "2670:53:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "2731:1257:26",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "4003:5:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4015:4:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4009:10:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1927,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:12:26"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4093:14:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4085:22:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1930,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4129:12:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4122:19:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1932,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4122:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4164:21:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4156:29:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4208:21:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4200:29:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4250:21:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4244:27:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1938,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4244:5:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4294:30:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4286:38:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1940,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4346:14:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4339:21:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1942,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4380:11:26",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4375:16:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4375:4:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:332:26"
									},
									"scope": 1986,
									"src": "3994:409:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "4411:99:26",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4525:10:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4542:12:26",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "4536:18:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1949,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4536:5:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:20:26"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "4579:7:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:9:26"
									},
									"scope": 1986,
									"src": "4516:72:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "4596:706:26",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5317:9:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5335:3:26",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5327:11:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1957,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5326:13:26"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5412:10:26",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5404:18:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1960,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5445:24:26",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5437:32:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5437:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5492:24:26",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5484:32:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5484:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5539:11:26",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5531:19:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1966,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5531:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5573:11:26",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5565:19:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1968,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:206:26"
									},
									"scope": 1986,
									"src": "5308:288:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "5604:756:26",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6375:12:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6396:5:26",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "6388:13:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6388:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6387:15:26"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6474:14:26",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "6467:21:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1976,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6467:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6509:14:26",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "6503:20:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1978,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6503:5:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6546:33:26",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "6538:41:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1980,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6538:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6599:11:26",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "6594:16:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6594:4:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6452:169:26"
									},
									"scope": 1986,
									"src": "6366:256:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1987,
							"src": "247:6378:26",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:6579:26"
				},
				"id": 26
			},
			"libraries/CallbackValidation.sol": {
				"ast": {
					"absolutePath": "libraries/CallbackValidation.sol",
					"exportedSymbols": {
						"CallbackValidation": [
							2051
						],
						"IUniswapV3Pool": [
							1535
						],
						"IUniswapV3PoolActions": [
							1662
						],
						"IUniswapV3PoolDerivedState": [
							1693
						],
						"IUniswapV3PoolEvents": [
							1812
						],
						"IUniswapV3PoolImmutables": [
							1852
						],
						"IUniswapV3PoolOwnerActions": [
							1878
						],
						"IUniswapV3PoolState": [
							1986
						],
						"PoolAddress": [
							2675
						]
					},
					"id": 2052,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1988,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:27"
						},
						{
							"absolutePath": "interfaces/IUniswapV3Pool.sol",
							"file": "../interfaces/IUniswapV3Pool.sol",
							"id": 1989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 1536,
							"src": "73:42:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/PoolAddress.sol",
							"file": "./PoolAddress.sol",
							"id": 1990,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 2676,
							"src": "117:27:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CallbackValidation",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1991,
								"nodeType": "StructuredDocumentation",
								"src": "148:69:27",
								"text": "@notice Provides validation for callbacks from Uniswap V3 Pools"
							},
							"fullyImplemented": true,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "CallbackValidation",
							"nameLocation": "225:18:27",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "845:94:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2007,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "878:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2010,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "910:6:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2011,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "918:6:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2012,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "926:3:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 2008,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2675,
																	"src": "887:11:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$2675_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "899:10:27",
																"memberName": "getPoolKey",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2623,
																"src": "887:22:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$2591_memory_ptr_$",
																	"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "887:43:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"id": 2006,
														"name": "verifyCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2017,
															2050
														],
														"referencedDeclaration": 2050,
														"src": "863:14:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$2591_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$1535_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:68:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 2005,
												"id": 2015,
												"nodeType": "Return",
												"src": "856:75:27"
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "251:416:27",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The V3 pool contract address"
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nameLocation": "682:14:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "715:7:27",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "707:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "741:6:27",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "733:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "766:6:27",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "758:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "790:3:27",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "783:10:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1999,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:104:27"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "839:4:27",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "824:19:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 2003,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2002,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"824:14:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1535,
														"src": "824:14:27"
													},
													"referencedDeclaration": 1535,
													"src": "824:14:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:21:27"
									},
									"scope": 2051,
									"src": "673:266:27",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "1345:133:27",
										"statements": [
											{
												"expression": {
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2029,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "1356:4:27",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2033,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "1405:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2034,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "1414:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 2031,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2675,
																		"src": "1378:11:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$2675_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1390:14:27",
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2674,
																	"src": "1378:26:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$2591_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:44:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2030,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "1363:14:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$1535_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1363:60:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "1356:67:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "1356:67:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2040,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1442:3:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1446:6:27",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1442:10:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2044,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2027,
																		"src": "1464:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	],
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1456:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1456:7:27",
																		"typeDescriptions": {}
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1456:13:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1442:27:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1434:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:36:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "1434:36:27"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "947:239:27",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param poolKey The identifying key of the V3 pool\n @return pool The V3 pool contract address"
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nameLocation": "1201:14:27",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1224:7:27",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "1216:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "poolKey",
												"nameLocation": "1260:7:27",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "1233:34:27",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 2022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2021,
														"name": "PoolAddress.PoolKey",
														"nameLocations": [
															"1233:11:27",
															"1245:7:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2591,
														"src": "1233:19:27"
													},
													"referencedDeclaration": 2591,
													"src": "1233:19:27",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2591_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:53:27"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1334:4:27",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "1319:19:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "IUniswapV3Pool",
														"nameLocations": [
															"1319:14:27"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1535,
														"src": "1319:14:27"
													},
													"referencedDeclaration": 1535,
													"src": "1319:14:27",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1535",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:21:27"
									},
									"scope": 2051,
									"src": "1192:286:27",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2052,
							"src": "217:1264:27",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1435:27"
				},
				"id": 27
			},
			"libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							2061
						]
					},
					"id": 2062,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:28"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPoint96",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2054,
								"nodeType": "StructuredDocumentation",
								"src": "75:177:28",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 2061,
							"linearizedBaseContracts": [
								2061
							],
							"name": "FixedPoint96",
							"nameLocation": "260:12:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2057,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nameLocation": "304:10:28",
									"nodeType": "VariableDeclaration",
									"scope": 2061,
									"src": "280:39:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2055,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "280:5:28",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 2056,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "317:2:28",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2060,
									"mutability": "constant",
									"name": "Q96",
									"nameLocation": "352:3:28",
									"nodeType": "VariableDeclaration",
									"scope": 2061,
									"src": "326:59:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2058,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:28",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 2059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "358:27:28",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 2062,
							"src": "252:137:28",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:343:28"
				},
				"id": 28
			},
			"libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							2237
						]
					},
					"id": 2238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2063,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:29"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FullMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2064,
								"nodeType": "StructuredDocumentation",
								"src": "60:300:29",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 2237,
							"linearizedBaseContracts": [
								2237
							],
							"name": "FullMath",
							"nameLocation": "368:8:29",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "886:3742:29",
										"statements": [
											{
												"assignments": [
													2077
												],
												"declarations": [
													{
														"constant": false,
														"id": 2077,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "1213:5:29",
														"nodeType": "VariableDeclaration",
														"scope": 2192,
														"src": "1205:13:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1205:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"nodeType": "VariableDeclarationStatement",
												"src": "1205:13:29"
											},
											{
												"assignments": [
													2080
												],
												"declarations": [
													{
														"constant": false,
														"id": 2080,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "1282:5:29",
														"nodeType": "VariableDeclaration",
														"scope": 2192,
														"src": "1274:13:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1274:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2081,
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:13:29"
											},
											{
												"AST": {
													"nativeSrc": "1351:145:29",
													"nodeType": "YulBlock",
													"src": "1351:145:29",
													"statements": [
														{
															"nativeSrc": "1366:30:29",
															"nodeType": "YulVariableDeclaration",
															"src": "1366:30:29",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1383:1:29",
																		"nodeType": "YulIdentifier",
																		"src": "1383:1:29"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1386:1:29",
																		"nodeType": "YulIdentifier",
																		"src": "1386:1:29"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1393:1:29",
																				"nodeType": "YulLiteral",
																				"src": "1393:1:29",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1389:3:29",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:29"
																		},
																		"nativeSrc": "1389:6:29",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:6:29"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "1376:6:29",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:29"
																},
																"nativeSrc": "1376:20:29",
																"nodeType": "YulFunctionCall",
																"src": "1376:20:29"
															},
															"variables": [
																{
																	"name": "mm",
																	"nativeSrc": "1370:2:29",
																	"nodeType": "YulTypedName",
																	"src": "1370:2:29",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1410:18:29",
															"nodeType": "YulAssignment",
															"src": "1410:18:29",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1423:1:29",
																		"nodeType": "YulIdentifier",
																		"src": "1423:1:29"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1426:1:29",
																		"nodeType": "YulIdentifier",
																		"src": "1426:1:29"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1419:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "1419:3:29"
																},
																"nativeSrc": "1419:9:29",
																"nodeType": "YulFunctionCall",
																"src": "1419:9:29"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nativeSrc": "1410:5:29",
																	"nodeType": "YulIdentifier",
																	"src": "1410:5:29"
																}
															]
														},
														{
															"nativeSrc": "1442:43:29",
															"nodeType": "YulAssignment",
															"src": "1442:43:29",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1459:2:29",
																				"nodeType": "YulIdentifier",
																				"src": "1459:2:29"
																			},
																			{
																				"name": "prod0",
																				"nativeSrc": "1463:5:29",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:29"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1455:3:29",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:29"
																		},
																		"nativeSrc": "1455:14:29",
																		"nodeType": "YulFunctionCall",
																		"src": "1455:14:29"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1474:2:29",
																				"nodeType": "YulIdentifier",
																				"src": "1474:2:29"
																			},
																			{
																				"name": "prod0",
																				"nativeSrc": "1478:5:29",
																				"nodeType": "YulIdentifier",
																				"src": "1478:5:29"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1471:2:29",
																			"nodeType": "YulIdentifier",
																			"src": "1471:2:29"
																		},
																		"nativeSrc": "1471:13:29",
																		"nodeType": "YulFunctionCall",
																		"src": "1471:13:29"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1451:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:29"
																},
																"nativeSrc": "1451:34:29",
																"nodeType": "YulFunctionCall",
																"src": "1451:34:29"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nativeSrc": "1442:5:29",
																	"nodeType": "YulIdentifier",
																	"src": "1442:5:29"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "1383:1:29",
														"valueSize": 1
													},
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "1423:1:29",
														"valueSize": 1
													},
													{
														"declaration": 2069,
														"isOffset": false,
														"isSlot": false,
														"src": "1386:1:29",
														"valueSize": 1
													},
													{
														"declaration": 2069,
														"isOffset": false,
														"isSlot": false,
														"src": "1426:1:29",
														"valueSize": 1
													},
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "1410:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "1478:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2080,
														"isOffset": false,
														"isSlot": false,
														"src": "1442:5:29",
														"valueSize": 1
													}
												],
												"id": 2082,
												"nodeType": "InlineAssembly",
												"src": "1342:154:29"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2083,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "1571:5:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1580:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1571:10:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"nodeType": "IfStatement",
												"src": "1567:185:29",
												"trueBody": {
													"id": 2095,
													"nodeType": "Block",
													"src": "1583:169:29",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2087,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2071,
																			"src": "1606:11:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1620:1:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1606:15:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2086,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1598:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1598:24:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2091,
															"nodeType": "ExpressionStatement",
															"src": "1598:24:29"
														},
														{
															"AST": {
																"nativeSrc": "1646:67:29",
																"nodeType": "YulBlock",
																"src": "1646:67:29",
																"statements": [
																	{
																		"nativeSrc": "1665:33:29",
																		"nodeType": "YulAssignment",
																		"src": "1665:33:29",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nativeSrc": "1679:5:29",
																					"nodeType": "YulIdentifier",
																					"src": "1679:5:29"
																				},
																				{
																					"name": "denominator",
																					"nativeSrc": "1686:11:29",
																					"nodeType": "YulIdentifier",
																					"src": "1686:11:29"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "1675:3:29",
																				"nodeType": "YulIdentifier",
																				"src": "1675:3:29"
																			},
																			"nativeSrc": "1675:23:29",
																			"nodeType": "YulFunctionCall",
																			"src": "1675:23:29"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nativeSrc": "1665:6:29",
																				"nodeType": "YulIdentifier",
																				"src": "1665:6:29"
																			}
																		]
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2071,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1686:11:29",
																	"valueSize": 1
																},
																{
																	"declaration": 2077,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1679:5:29",
																	"valueSize": 1
																},
																{
																	"declaration": 2074,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1665:6:29",
																	"valueSize": 1
																}
															],
															"id": 2092,
															"nodeType": "InlineAssembly",
															"src": "1637:76:29"
														},
														{
															"expression": {
																"id": 2093,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "1734:6:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2075,
															"id": 2094,
															"nodeType": "Return",
															"src": "1727:13:29"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2098,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "1869:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2099,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "1883:5:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1869:19:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1861:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:28:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "1861:28:29"
											},
											{
												"assignments": [
													2104
												],
												"declarations": [
													{
														"constant": false,
														"id": 2104,
														"mutability": "mutable",
														"name": "remainder",
														"nameLocation": "2182:9:29",
														"nodeType": "VariableDeclaration",
														"scope": 2192,
														"src": "2174:17:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2174:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2105,
												"nodeType": "VariableDeclarationStatement",
												"src": "2174:17:29"
											},
											{
												"AST": {
													"nativeSrc": "2211:64:29",
													"nodeType": "YulBlock",
													"src": "2211:64:29",
													"statements": [
														{
															"nativeSrc": "2226:38:29",
															"nodeType": "YulAssignment",
															"src": "2226:38:29",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "2246:1:29",
																		"nodeType": "YulIdentifier",
																		"src": "2246:1:29"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "2249:1:29",
																		"nodeType": "YulIdentifier",
																		"src": "2249:1:29"
																	},
																	{
																		"name": "denominator",
																		"nativeSrc": "2252:11:29",
																		"nodeType": "YulIdentifier",
																		"src": "2252:11:29"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "2239:6:29",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:29"
																},
																"nativeSrc": "2239:25:29",
																"nodeType": "YulFunctionCall",
																"src": "2239:25:29"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nativeSrc": "2226:9:29",
																	"nodeType": "YulIdentifier",
																	"src": "2226:9:29"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "2246:1:29",
														"valueSize": 1
													},
													{
														"declaration": 2069,
														"isOffset": false,
														"isSlot": false,
														"src": "2249:1:29",
														"valueSize": 1
													},
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": false,
														"src": "2252:11:29",
														"valueSize": 1
													},
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": false,
														"src": "2226:9:29",
														"valueSize": 1
													}
												],
												"id": 2106,
												"nodeType": "InlineAssembly",
												"src": "2202:73:29"
											},
											{
												"AST": {
													"nativeSrc": "2350:111:29",
													"nodeType": "YulBlock",
													"src": "2350:111:29",
													"statements": [
														{
															"nativeSrc": "2365:41:29",
															"nodeType": "YulAssignment",
															"src": "2365:41:29",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nativeSrc": "2378:5:29",
																		"nodeType": "YulIdentifier",
																		"src": "2378:5:29"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nativeSrc": "2388:9:29",
																				"nodeType": "YulIdentifier",
																				"src": "2388:9:29"
																			},
																			{
																				"name": "prod0",
																				"nativeSrc": "2399:5:29",
																				"nodeType": "YulIdentifier",
																				"src": "2399:5:29"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2385:2:29",
																			"nodeType": "YulIdentifier",
																			"src": "2385:2:29"
																		},
																		"nativeSrc": "2385:20:29",
																		"nodeType": "YulFunctionCall",
																		"src": "2385:20:29"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2374:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:29"
																},
																"nativeSrc": "2374:32:29",
																"nodeType": "YulFunctionCall",
																"src": "2374:32:29"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nativeSrc": "2365:5:29",
																	"nodeType": "YulIdentifier",
																	"src": "2365:5:29"
																}
															]
														},
														{
															"nativeSrc": "2420:30:29",
															"nodeType": "YulAssignment",
															"src": "2420:30:29",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nativeSrc": "2433:5:29",
																		"nodeType": "YulIdentifier",
																		"src": "2433:5:29"
																	},
																	{
																		"name": "remainder",
																		"nativeSrc": "2440:9:29",
																		"nodeType": "YulIdentifier",
																		"src": "2440:9:29"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2429:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:29"
																},
																"nativeSrc": "2429:21:29",
																"nodeType": "YulFunctionCall",
																"src": "2429:21:29"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nativeSrc": "2420:5:29",
																	"nodeType": "YulIdentifier",
																	"src": "2420:5:29"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "2399:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "2420:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "2433:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2080,
														"isOffset": false,
														"isSlot": false,
														"src": "2365:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2080,
														"isOffset": false,
														"isSlot": false,
														"src": "2378:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": false,
														"src": "2388:9:29",
														"valueSize": 1
													},
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": false,
														"src": "2440:9:29",
														"valueSize": 1
													}
												],
												"id": 2107,
												"nodeType": "InlineAssembly",
												"src": "2341:120:29"
											},
											{
												"assignments": [
													2109
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"mutability": "mutable",
														"name": "twos",
														"nameLocation": "2623:4:29",
														"nodeType": "VariableDeclaration",
														"scope": 2192,
														"src": "2615:12:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2615:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2117,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2110,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "2630:11:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "~",
																	"prefix": true,
																	"src": "2645:12:29",
																	"subExpression": {
																		"id": 2111,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "2646:11:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2660:1:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2645:16:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2115,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2644:18:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2630:32:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2615:47:29"
											},
											{
												"AST": {
													"nativeSrc": "2729:63:29",
													"nodeType": "YulBlock",
													"src": "2729:63:29",
													"statements": [
														{
															"nativeSrc": "2744:37:29",
															"nodeType": "YulAssignment",
															"src": "2744:37:29",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nativeSrc": "2763:11:29",
																		"nodeType": "YulIdentifier",
																		"src": "2763:11:29"
																	},
																	{
																		"name": "twos",
																		"nativeSrc": "2776:4:29",
																		"nodeType": "YulIdentifier",
																		"src": "2776:4:29"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2759:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "2759:3:29"
																},
																"nativeSrc": "2759:22:29",
																"nodeType": "YulFunctionCall",
																"src": "2759:22:29"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nativeSrc": "2744:11:29",
																	"nodeType": "YulIdentifier",
																	"src": "2744:11:29"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": false,
														"src": "2744:11:29",
														"valueSize": 1
													},
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": false,
														"src": "2763:11:29",
														"valueSize": 1
													},
													{
														"declaration": 2109,
														"isOffset": false,
														"isSlot": false,
														"src": "2776:4:29",
														"valueSize": 1
													}
												],
												"id": 2118,
												"nodeType": "InlineAssembly",
												"src": "2720:72:29"
											},
											{
												"AST": {
													"nativeSrc": "2868:51:29",
													"nodeType": "YulBlock",
													"src": "2868:51:29",
													"statements": [
														{
															"nativeSrc": "2883:25:29",
															"nodeType": "YulAssignment",
															"src": "2883:25:29",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nativeSrc": "2896:5:29",
																		"nodeType": "YulIdentifier",
																		"src": "2896:5:29"
																	},
																	{
																		"name": "twos",
																		"nativeSrc": "2903:4:29",
																		"nodeType": "YulIdentifier",
																		"src": "2903:4:29"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2892:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "2892:3:29"
																},
																"nativeSrc": "2892:16:29",
																"nodeType": "YulFunctionCall",
																"src": "2892:16:29"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nativeSrc": "2883:5:29",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:29"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "2883:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2077,
														"isOffset": false,
														"isSlot": false,
														"src": "2896:5:29",
														"valueSize": 1
													},
													{
														"declaration": 2109,
														"isOffset": false,
														"isSlot": false,
														"src": "2903:4:29",
														"valueSize": 1
													}
												],
												"id": 2119,
												"nodeType": "InlineAssembly",
												"src": "2859:60:29"
											},
											{
												"AST": {
													"nativeSrc": "3111:65:29",
													"nodeType": "YulBlock",
													"src": "3111:65:29",
													"statements": [
														{
															"nativeSrc": "3126:39:29",
															"nodeType": "YulAssignment",
															"src": "3126:39:29",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3146:1:29",
																						"nodeType": "YulLiteral",
																						"src": "3146:1:29",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "3149:4:29",
																						"nodeType": "YulIdentifier",
																						"src": "3149:4:29"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3142:3:29",
																					"nodeType": "YulIdentifier",
																					"src": "3142:3:29"
																				},
																				"nativeSrc": "3142:12:29",
																				"nodeType": "YulFunctionCall",
																				"src": "3142:12:29"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3156:4:29",
																				"nodeType": "YulIdentifier",
																				"src": "3156:4:29"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3138:3:29",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:29"
																		},
																		"nativeSrc": "3138:23:29",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:23:29"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3163:1:29",
																		"nodeType": "YulLiteral",
																		"src": "3163:1:29",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3134:3:29",
																	"nodeType": "YulIdentifier",
																	"src": "3134:3:29"
																},
																"nativeSrc": "3134:31:29",
																"nodeType": "YulFunctionCall",
																"src": "3134:31:29"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nativeSrc": "3126:4:29",
																	"nodeType": "YulIdentifier",
																	"src": "3126:4:29"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2109,
														"isOffset": false,
														"isSlot": false,
														"src": "3126:4:29",
														"valueSize": 1
													},
													{
														"declaration": 2109,
														"isOffset": false,
														"isSlot": false,
														"src": "3149:4:29",
														"valueSize": 1
													},
													{
														"declaration": 2109,
														"isOffset": false,
														"isSlot": false,
														"src": "3156:4:29",
														"valueSize": 1
													}
												],
												"id": 2120,
												"nodeType": "InlineAssembly",
												"src": "3102:74:29"
											},
											{
												"expression": {
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2121,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2077,
														"src": "3186:5:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2122,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "3195:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2123,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "3203:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3195:12:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3186:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "3186:21:29"
											},
											{
												"assignments": [
													2128
												],
												"declarations": [
													{
														"constant": false,
														"id": 2128,
														"mutability": "mutable",
														"name": "inv",
														"nameLocation": "3556:3:29",
														"nodeType": "VariableDeclaration",
														"scope": 2192,
														"src": "3548:11:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2135,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3563:1:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2130,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "3567:11:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3563:15:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2132,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3562:17:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3582:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3562:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:35:29"
											},
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2136,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "3802:3:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3809:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2138,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "3813:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2139,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "3827:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3813:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3809:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3802:28:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "3802:28:29"
											},
											{
												"expression": {
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2144,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "3861:3:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3868:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "3872:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2147,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "3886:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3872:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3868:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3861:28:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "3861:28:29"
											},
											{
												"expression": {
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2152,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "3921:3:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3928:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2154,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "3932:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2155,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "3946:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3932:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3928:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3921:28:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "3921:28:29"
											},
											{
												"expression": {
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2160,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "3981:3:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3988:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2162,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "3992:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2163,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "4006:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3992:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3988:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3981:28:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2167,
												"nodeType": "ExpressionStatement",
												"src": "3981:28:29"
											},
											{
												"expression": {
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2168,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "4041:3:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4048:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "4052:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2171,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "4066:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4052:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4048:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4041:28:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "4041:28:29"
											},
											{
												"expression": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2176,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "4102:3:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2178,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "4113:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2179,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "4127:3:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4113:17:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4109:21:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:28:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "4102:28:29"
											},
											{
												"expression": {
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2184,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "4576:6:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2185,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "4585:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2186,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "4593:3:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4585:11:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4576:20:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "4576:20:29"
											},
											{
												"expression": {
													"id": 2190,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2074,
													"src": "4614:6:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2075,
												"id": 2191,
												"nodeType": "Return",
												"src": "4607:13:29"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "384:364:29",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "763:6:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "788:1:29",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "780:9:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "808:1:29",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "800:9:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "828:11:29",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "820:19:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:77:29"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "878:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "870:14:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:16:29"
									},
									"scope": 2237,
									"src": "754:3874:29",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "5059:183:29",
										"statements": [
											{
												"expression": {
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2205,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "5070:6:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2207,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "5086:1:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "5089:1:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2209,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "5092:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2206,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2193,
															"src": "5079:6:29",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5079:25:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5070:34:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "5070:34:29"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2214,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "5126:1:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2215,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "5129:1:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2216,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "5132:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2213,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "5119:6:29",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5119:25:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5147:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5119:29:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2234,
												"nodeType": "IfStatement",
												"src": "5115:120:29",
												"trueBody": {
													"id": 2233,
													"nodeType": "Block",
													"src": "5150:85:29",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2221,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "5173:6:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 2224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5187:7:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2223,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5187:7:29",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 2222,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5182:4:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5182:13:29",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5196:3:29",
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5182:17:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5173:26:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2220,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5165:7:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5165:35:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "5165:35:29"
														},
														{
															"expression": {
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5215:8:29",
																"subExpression": {
																	"id": 2230,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "5215:6:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2232,
															"nodeType": "ExpressionStatement",
															"src": "5215:8:29"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "4636:275:29",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "4926:16:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4961:1:29",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "4953:9:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4981:1:29",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "4973:9:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5001:11:29",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "4993:19:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:77:29"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5051:6:29",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "5043:14:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5043:7:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5042:16:29"
									},
									"scope": 2237,
									"src": "4917:325:29",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2238,
							"src": "360:4885:29",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5214:29"
				},
				"id": 29
			},
			"libraries/LiquidityAmounts.sol": {
				"ast": {
					"absolutePath": "libraries/LiquidityAmounts.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							2061
						],
						"FullMath": [
							2237
						],
						"LiquidityAmounts": [
							2577
						]
					},
					"id": 2578,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:30"
						},
						{
							"absolutePath": "libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 2240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2578,
							"sourceUnit": 2238,
							"src": "73:24:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "libraries/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 2241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2578,
							"sourceUnit": 2062,
							"src": "99:28:30",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityAmounts",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2242,
								"nodeType": "StructuredDocumentation",
								"src": "131:133:30",
								"text": "@title Liquidity amount functions\n @notice Provides functions for computing liquidity amounts from token amounts and prices"
							},
							"fullyImplemented": true,
							"id": 2577,
							"linearizedBaseContracts": [
								2577
							],
							"name": "LiquidityAmounts",
							"nameLocation": "272:16:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "511:49:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2251,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "531:1:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2254,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2245,
																					"src": "543:1:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "535:7:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 2252,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "535:7:30",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "535:10:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "531:14:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 2257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "530:16:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2258,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "550:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "530:21:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "522:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "522:30:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "522:30:30"
											}
										]
									},
									"documentation": {
										"id": 2243,
										"nodeType": "StructuredDocumentation",
										"src": "296:146:30",
										"text": "@notice Downcasts uint256 to uint128\n @param x The uint258 to be downcasted\n @return y The passed value, downcasted to uint128"
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "457:9:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "475:1:30",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "467:9:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:11:30"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "508:1:30",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "500:9:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2247,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:11:30"
									},
									"scope": 2577,
									"src": "448:112:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "1207:312:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2275,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "1222:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2276,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2268,
														"src": "1238:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1222:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2286,
												"nodeType": "IfStatement",
												"src": "1218:98:30",
												"trueBody": {
													"expression": {
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2278,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "1254:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2279,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "1269:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2280,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1253:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2281,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "1287:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2282,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "1302:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1286:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1253:63:30",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2285,
													"nodeType": "ExpressionStatement",
													"src": "1253:63:30"
												}
											},
											{
												"assignments": [
													2288
												],
												"declarations": [
													{
														"constant": false,
														"id": 2288,
														"mutability": "mutable",
														"name": "intermediate",
														"nameLocation": "1335:12:30",
														"nodeType": "VariableDeclaration",
														"scope": 2308,
														"src": "1327:20:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1327:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2296,
												"initialValue": {
													"arguments": [
														{
															"id": 2291,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "1366:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 2292,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "1381:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2293,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "1396:12:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2061_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1409:3:30",
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "1396:16:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2289,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "1350:8:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$2237_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1359:6:30",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2193,
														"src": "1350:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:63:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1327:86:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2300,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "1457:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2301,
																	"name": "intermediate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2288,
																	"src": "1466:12:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2302,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "1480:13:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2303,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2266,
																		"src": "1496:13:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "1480:29:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 2298,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "1441:8:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$2237_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1450:6:30",
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2193,
																"src": "1441:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1441:69:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2297,
														"name": "toUint128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "1431:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1431:80:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2274,
												"id": 2307,
												"nodeType": "Return",
												"src": "1424:87:30"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "568:462:30",
										"text": "@notice Computes the amount of liquidity received for a given amount of token0 and price range\n @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount0 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount0",
									"nameLocation": "1045:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "1086:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "1078:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2265,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "1118:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "1110:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2267,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1150:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "1142:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:97:30"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1196:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "1188:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2272,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:19:30"
									},
									"scope": 2577,
									"src": "1036:483:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "2137:219:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2321,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "2152:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2322,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "2168:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2152:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "2148:98:30",
												"trueBody": {
													"expression": {
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2324,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "2184:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2325,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "2199:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2326,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "2183:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2327,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "2217:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2328,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "2232:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2329,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2216:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "2183:63:30",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2331,
													"nodeType": "ExpressionStatement",
													"src": "2183:63:30"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2336,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "2290:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2337,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "2299:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2061_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 2338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2312:3:30",
																	"memberName": "Q96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2060,
																	"src": "2299:16:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 2341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2339,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "2317:13:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2340,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "2333:13:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "2317:29:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 2334,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "2274:8:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$2237_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2283:6:30",
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2193,
																"src": "2274:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2274:73:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2333,
														"name": "toUint128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "2264:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:84:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2320,
												"id": 2344,
												"nodeType": "Return",
												"src": "2257:91:30"
											}
										]
									},
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "1527:433:30",
										"text": "@notice Computes the amount of liquidity received for a given amount of token1 and price range\n @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount1 The amount1 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount1",
									"nameLocation": "1975:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "2016:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2008:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2311,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "2048:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2040:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2313,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2080:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2072:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:97:30"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2126:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2118:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2318,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:19:30"
									},
									"scope": 2577,
									"src": "1966:390:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "3194:692:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2362,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "3209:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2363,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "3225:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3209:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2373,
												"nodeType": "IfStatement",
												"src": "3205:98:30",
												"trueBody": {
													"expression": {
														"id": 2371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2365,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "3241:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2366,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "3256:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "3240:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2368,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2353,
																	"src": "3274:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2369,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "3289:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2370,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3273:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "3240:63:30",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2372,
													"nodeType": "ExpressionStatement",
													"src": "3240:63:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2374,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2349,
														"src": "3320:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2375,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "3336:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3320:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2386,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "3461:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2387,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "3476:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "3461:28:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2423,
														"nodeType": "Block",
														"src": "3779:100:30",
														"statements": [
															{
																"expression": {
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2415,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2360,
																		"src": "3794:9:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2417,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "3829:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2418,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2353,
																				"src": "3844:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2419,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2357,
																				"src": "3859:7:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2416,
																			"name": "getLiquidityForAmount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "3806:22:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																				"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																			}
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3806:61:30",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3794:73:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2422,
																"nodeType": "ExpressionStatement",
																"src": "3794:73:30"
															}
														]
													},
													"id": 2424,
													"nodeType": "IfStatement",
													"src": "3457:422:30",
													"trueBody": {
														"id": 2414,
														"nodeType": "Block",
														"src": "3491:282:30",
														"statements": [
															{
																"assignments": [
																	2390
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2390,
																		"mutability": "mutable",
																		"name": "liquidity0",
																		"nameLocation": "3514:10:30",
																		"nodeType": "VariableDeclaration",
																		"scope": 2414,
																		"src": "3506:18:30",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2389,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3506:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2396,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2392,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "3550:12:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2393,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "3564:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2394,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "3579:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2391,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "3527:22:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3527:60:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3506:81:30"
															},
															{
																"assignments": [
																	2398
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2398,
																		"mutability": "mutable",
																		"name": "liquidity1",
																		"nameLocation": "3610:10:30",
																		"nodeType": "VariableDeclaration",
																		"scope": 2414,
																		"src": "3602:18:30",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2397,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3602:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2404,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2400,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2351,
																			"src": "3646:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2401,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "3661:12:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2402,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2357,
																			"src": "3675:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2399,
																		"name": "getLiquidityForAmount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "3623:22:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3623:60:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3602:81:30"
															},
															{
																"expression": {
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2405,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2360,
																		"src": "3700:9:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2406,
																				"name": "liquidity0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2390,
																				"src": "3712:10:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2407,
																				"name": "liquidity1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2398,
																				"src": "3725:10:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3712:23:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 2410,
																			"name": "liquidity1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2398,
																			"src": "3751:10:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 2411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3712:49:30",
																		"trueExpression": {
																			"id": 2409,
																			"name": "liquidity0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "3738:10:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3700:61:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2413,
																"nodeType": "ExpressionStatement",
																"src": "3700:61:30"
															}
														]
													}
												},
												"id": 2425,
												"nodeType": "IfStatement",
												"src": "3316:563:30",
												"trueBody": {
													"id": 2385,
													"nodeType": "Block",
													"src": "3351:100:30",
													"statements": [
														{
															"expression": {
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2377,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "3366:9:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2379,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2351,
																			"src": "3401:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2380,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "3416:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2381,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "3431:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2378,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "3378:22:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3378:61:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3366:73:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 2384,
															"nodeType": "ExpressionStatement",
															"src": "3366:73:30"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "2364:596:30",
										"text": "@notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount of token0 being sent in\n @param amount1 The amount of token1 being sent in\n @return liquidity The maximum amount of liquidity received"
									},
									"id": 2427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmounts",
									"nameLocation": "2975:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nameLocation": "3016:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "3008:20:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2348,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3008:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "3047:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "3039:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2350,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "3079:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "3071:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2352,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3071:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3111:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "3103:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3137:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "3129:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:154:30"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3183:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "3175:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2359,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:19:30"
									},
									"scope": 2577,
									"src": "2966:920:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "4422:340:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2439,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "4437:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2440,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2432,
														"src": "4453:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4437:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2450,
												"nodeType": "IfStatement",
												"src": "4433:98:30",
												"trueBody": {
													"expression": {
														"id": 2448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2442,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "4469:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2443,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "4484:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2444,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "4468:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2445,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "4502:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2446,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "4517:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2447,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4501:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "4468:63:30",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2449,
													"nodeType": "ExpressionStatement",
													"src": "4468:63:30"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2455,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2434,
																			"src": "4606:9:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4598:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2453,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4598:7:30",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4598:18:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"expression": {
																		"id": 2457,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "4620:12:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2061_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4633:10:30",
																	"memberName": "RESOLUTION",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2057,
																	"src": "4620:23:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4598:45:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2460,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "4662:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2461,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "4678:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4662:29:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2463,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "4710:13:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"expression": {
																"id": 2451,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "4564:8:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$2237_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4573:6:30",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2193,
															"src": "4564:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4564:174:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2465,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "4741:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4564:190:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2438,
												"id": 2467,
												"nodeType": "Return",
												"src": "4544:210:30"
											}
										]
									},
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "3894:351:30",
										"text": "@notice Computes the amount of token0 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0"
									},
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0ForLiquidity",
									"nameLocation": "4260:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "4301:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "4293:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2429,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "4333:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "4325:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2431,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4325:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4365:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "4357:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2433,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4357:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:99:30"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4413:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "4405:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:17:30"
									},
									"scope": 2577,
									"src": "4251:511:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "5298:212:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2481,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2472,
														"src": "5313:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2482,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2474,
														"src": "5329:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "5313:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2492,
												"nodeType": "IfStatement",
												"src": "5309:98:30",
												"trueBody": {
													"expression": {
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2484,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2472,
																	"src": "5345:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2485,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "5360:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2486,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "5344:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2487,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "5378:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2488,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2472,
																	"src": "5393:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2489,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5377:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "5344:63:30",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2491,
													"nodeType": "ExpressionStatement",
													"src": "5344:63:30"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2495,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "5443:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2496,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "5454:13:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2497,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "5470:13:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "5454:29:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2499,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "5485:12:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2061_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5498:3:30",
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "5485:16:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2493,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "5427:8:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$2237_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5436:6:30",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2193,
														"src": "5427:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5427:75:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2480,
												"id": 2502,
												"nodeType": "Return",
												"src": "5420:82:30"
											}
										]
									},
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "4770:351:30",
										"text": "@notice Computes the amount of token1 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount1 The amount of token1"
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1ForLiquidity",
									"nameLocation": "5136:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "5177:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "5169:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2471,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "5209:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "5201:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2473,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5241:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "5233:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2475,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5158:99:30"
									},
									"returnParameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5289:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "5281:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5280:17:30"
									},
									"scope": 2577,
									"src": "5127:383:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "6280:596:30",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2520,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "6295:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2521,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "6311:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6295:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2531,
												"nodeType": "IfStatement",
												"src": "6291:98:30",
												"trueBody": {
													"expression": {
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2523,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "6327:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2524,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "6342:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2525,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "6326:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2526,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "6360:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2527,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "6375:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2528,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6359:30:30",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "6326:63:30",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2530,
													"nodeType": "ExpressionStatement",
													"src": "6326:63:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2532,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "6406:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2533,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "6422:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6406:29:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2544,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "6547:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2545,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "6562:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "6547:28:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2572,
														"nodeType": "Block",
														"src": "6769:100:30",
														"statements": [
															{
																"expression": {
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2564,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2518,
																		"src": "6784:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2566,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "6817:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2567,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2511,
																				"src": "6832:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2568,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2513,
																				"src": "6847:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2565,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "6794:22:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6794:63:30",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6784:73:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2571,
																"nodeType": "ExpressionStatement",
																"src": "6784:73:30"
															}
														]
													},
													"id": 2573,
													"nodeType": "IfStatement",
													"src": "6543:326:30",
													"trueBody": {
														"id": 2563,
														"nodeType": "Block",
														"src": "6577:186:30",
														"statements": [
															{
																"expression": {
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2547,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2516,
																		"src": "6592:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2549,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2507,
																				"src": "6625:12:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2550,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2511,
																				"src": "6639:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2551,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2513,
																				"src": "6654:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2548,
																			"name": "getAmount0ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2469,
																			"src": "6602:22:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6602:62:30",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6592:72:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2554,
																"nodeType": "ExpressionStatement",
																"src": "6592:72:30"
															},
															{
																"expression": {
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2555,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2518,
																		"src": "6679:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2557,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "6712:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2558,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2507,
																				"src": "6727:12:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2559,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2513,
																				"src": "6741:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2556,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "6689:22:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6689:62:30",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6679:72:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2562,
																"nodeType": "ExpressionStatement",
																"src": "6679:72:30"
															}
														]
													}
												},
												"id": 2574,
												"nodeType": "IfStatement",
												"src": "6402:467:30",
												"trueBody": {
													"id": 2543,
													"nodeType": "Block",
													"src": "6437:100:30",
													"statements": [
														{
															"expression": {
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2535,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "6452:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2537,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2509,
																			"src": "6485:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2538,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2511,
																			"src": "6500:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2539,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "6515:9:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2536,
																		"name": "getAmount0ForLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2469,
																		"src": "6462:22:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																		}
																	},
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6462:63:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6452:73:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2542,
															"nodeType": "ExpressionStatement",
															"src": "6452:73:30"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "5518:537:30",
										"text": "@notice Computes the token0 and token1 value for a given amount of liquidity, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsForLiquidity",
									"nameLocation": "6070:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nameLocation": "6111:12:30",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "6103:20:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2506,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "6142:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "6134:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2508,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6134:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "6174:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "6166:21:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2510,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6206:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "6198:17:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2512,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6198:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6092:130:30"
									},
									"returnParameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6254:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "6246:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6246:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6271:7:30",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "6263:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6263:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6245:34:30"
									},
									"scope": 2577,
									"src": "6061:815:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2578,
							"src": "264:6615:30",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:6833:30"
				},
				"id": 30
			},
			"libraries/PoolAddress.sol": {
				"ast": {
					"absolutePath": "libraries/PoolAddress.sol",
					"exportedSymbols": {
						"PoolAddress": [
							2675
						]
					},
					"id": 2676,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:31"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PoolAddress",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2580,
								"nodeType": "StructuredDocumentation",
								"src": "73:97:31",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 2675,
							"linearizedBaseContracts": [
								2675
							],
							"name": "PoolAddress",
							"nameLocation": "178:11:31",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2583,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nameLocation": "223:19:31",
									"nodeType": "VariableDeclaration",
									"scope": 2675,
									"src": "197:123:31",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2581,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:31",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 2582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "254:66:31",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "329:43:31",
										"text": "@notice The identifying key of the pool"
									},
									"id": 2591,
									"members": [
										{
											"constant": false,
											"id": 2586,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "412:6:31",
											"nodeType": "VariableDeclaration",
											"scope": 2591,
											"src": "404:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2585,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "404:7:31",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2588,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "437:6:31",
											"nodeType": "VariableDeclaration",
											"scope": 2591,
											"src": "429:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2587,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "429:7:31",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2590,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "461:3:31",
											"nodeType": "VariableDeclaration",
											"scope": 2591,
											"src": "454:10:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2589,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "454:6:31",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nameLocation": "385:7:31",
									"nodeType": "StructDefinition",
									"scope": 2675,
									"src": "378:94:31",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "948:144:31",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2604,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2594,
														"src": "963:6:31",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2605,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "972:6:31",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "963:15:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2615,
												"nodeType": "IfStatement",
												"src": "959:56:31",
												"trueBody": {
													"expression": {
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2607,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2594,
																	"src": "981:6:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2608,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "989:6:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2609,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "980:16:31",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2610,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "1000:6:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2611,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2594,
																	"src": "1008:6:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 2612,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "999:16:31",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "980:35:31",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2614,
													"nodeType": "ExpressionStatement",
													"src": "980:35:31"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2617,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "1050:6:31",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2618,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "1066:6:31",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2619,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "1079:3:31",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 2616,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2591,
														"src": "1033:7:31",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$2591_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1042:6:31",
														"1058:6:31",
														"1074:3:31"
													],
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1033:51:31",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 2603,
												"id": 2621,
												"nodeType": "Return",
												"src": "1026:58:31"
											}
										]
									},
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "480:325:31",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nameLocation": "820:10:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "849:6:31",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "841:14:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "874:6:31",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "866:14:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "898:3:31",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "891:10:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2597,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "891:6:31",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:78:31"
									},
									"returnParameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "932:14:31",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 2601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2600,
														"name": "PoolKey",
														"nameLocations": [
															"932:7:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2591,
														"src": "932:7:31"
													},
													"referencedDeclaration": 2591,
													"src": "932:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2591_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:16:31"
									},
									"scope": 2675,
									"src": "811:281:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "1468:569:31",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2635,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2629,
																	"src": "1487:3:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1491:6:31",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2586,
																"src": "1487:10:31",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2637,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2629,
																	"src": "1500:3:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1504:6:31",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2588,
																"src": "1500:10:31",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1487:23:31",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:31",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:32:31",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "1479:32:31"
											},
											{
												"expression": {
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2642,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2632,
														"src": "1522:4:31",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "ff",
																								"id": 2652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "hexString",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1690:7:31",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																									"typeString": "literal_string hex\"ff\""
																								}
																							},
																							{
																								"id": 2653,
																								"name": "factory",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2626,
																								"src": "1728:7:31",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"expression": {
																													"id": 2657,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2629,
																													"src": "1821:3:31",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 2658,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1825:6:31",
																												"memberName": "token0",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2586,
																												"src": "1821:10:31",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 2659,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2629,
																													"src": "1833:3:31",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 2660,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1837:6:31",
																												"memberName": "token1",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2588,
																												"src": "1833:10:31",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 2661,
																													"name": "key",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2629,
																													"src": "1845:3:31",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
																														"typeString": "struct PoolAddress.PoolKey memory"
																													}
																												},
																												"id": 2662,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "1849:3:31",
																												"memberName": "fee",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 2590,
																												"src": "1845:7:31",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint24",
																													"typeString": "uint24"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint24",
																													"typeString": "uint24"
																												}
																											],
																											"expression": {
																												"id": 2655,
																												"name": "abi",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967295,
																												"src": "1810:3:31",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_abi",
																													"typeString": "abi"
																												}
																											},
																											"id": 2656,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"memberLocation": "1814:6:31",
																											"memberName": "encode",
																											"nodeType": "MemberAccess",
																											"src": "1810:10:31",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																												"typeString": "function () pure returns (bytes memory)"
																											}
																										},
																										"id": 2663,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "1810:43:31",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 2654,
																									"name": "keccak256",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967288,
																									"src": "1766:9:31",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																										"typeString": "function (bytes memory) pure returns (bytes32)"
																									}
																								},
																								"id": 2664,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1766:118:31",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 2665,
																								"name": "POOL_INIT_CODE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2583,
																								"src": "1915:19:31",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																									"typeString": "literal_string hex\"ff\""
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 2650,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1643:3:31",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 2651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1647:12:31",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "1643:16:31",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 2666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1643:318:31",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2649,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1607:9:31",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 2667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1607:377:31",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1577:7:31",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2647,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1577:7:31",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1577:426:31",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1551:7:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2645,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "1551:7:31",
																		"typeDescriptions": {}
																	}
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1551:467:31",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1529:7:31",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2643,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1529:7:31",
																"typeDescriptions": {}
															}
														},
														"id": 2670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1529:500:31",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1522:507:31",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "1522:507:31"
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "1100:239:31",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "1354:14:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1387:7:31",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "1379:15:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1420:3:31",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "1405:18:31",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$2591_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 2628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2627,
														"name": "PoolKey",
														"nameLocations": [
															"1405:7:31"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2591,
														"src": "1405:7:31"
													},
													"referencedDeclaration": 2591,
													"src": "1405:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$2591_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:62:31"
									},
									"returnParameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1462:4:31",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "1454:12:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:14:31"
									},
									"scope": 2675,
									"src": "1345:692:31",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2676,
							"src": "170:1870:31",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1996:31"
				},
				"id": 31
			},
			"libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							3214
						]
					},
					"id": 3215,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2677,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:32"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2678,
								"nodeType": "StructuredDocumentation",
								"src": "73:238:32",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 3214,
							"linearizedBaseContracts": [
								3214
							],
							"name": "TickMath",
							"nameLocation": "319:8:32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "335:108:32",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 2683,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "473:8:32",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "449:42:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2680,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:32",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:32",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 2681,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:32",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "498:107:32",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 2688,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "635:8:32",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "611:44:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2685,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "611:5:32",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2687,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "646:9:32",
										"subExpression": {
											"id": 2686,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2683,
											"src": "647:8:32",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "664:116:32",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 2692,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "812:14:32",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "786:53:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2690,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:32",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 2691,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "829:10:32",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "846:116:32",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 2696,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "994:14:32",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "968:92:32",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2694,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:32",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 2695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1011:49:32",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3073,
										"nodeType": "Block",
										"src": "1461:2531:32",
										"statements": [
											{
												"assignments": [
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1480:7:32",
														"nodeType": "VariableDeclaration",
														"scope": 3073,
														"src": "1472:15:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1472:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2725,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2706,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "1490:4:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1497:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1490:8:32",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2721,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2699,
																		"src": "1541:4:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1534:6:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2719,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1534:6:32",
																		"typeDescriptions": {}
																	}
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1534:12:32",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1526:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2717,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1526:7:32",
																"typeDescriptions": {}
															}
														},
														"id": 2723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1526:21:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1490:57:32",
													"trueExpression": {
														"arguments": [
															{
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1509:13:32",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2713,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "1517:4:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1510:6:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2711,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1510:6:32",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1510:12:32",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1501:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2709,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1501:7:32",
																"typeDescriptions": {}
															}
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1501:22:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1472:75:32"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2727,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "1566:7:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1585:13:32",
																		"subExpression": {
																			"arguments": [
																				{
																					"id": 2732,
																					"name": "tick",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2699,
																					"src": "1593:4:32",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				],
																				"id": 2731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1586:6:32",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 2730,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1586:6:32",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1586:12:32",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1577:7:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2728,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1577:7:32",
																		"typeDescriptions": {}
																	}
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1577:22:32",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1566:33:32",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1601:3:32",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 2726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1558:7:32",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:47:32",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2739,
												"nodeType": "ExpressionStatement",
												"src": "1558:47:32"
											},
											{
												"assignments": [
													2741
												],
												"declarations": [
													{
														"constant": false,
														"id": 2741,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1626:5:32",
														"nodeType": "VariableDeclaration",
														"scope": 3073,
														"src": "1618:13:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2740,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1618:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2750,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2742,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "1634:7:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1644:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1634:13:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1651:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1634:18:32",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 2748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1692:35:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1634:93:32",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 2747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1655:34:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1618:109:32"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2751,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "1742:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:3:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1742:13:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1759:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1742:18:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2765,
												"nodeType": "IfStatement",
												"src": "1738:83:32",
												"trueBody": {
													"expression": {
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2756,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "1762:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2757,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "1771:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1779:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1771:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2760,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1770:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1818:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1770:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1762:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2764,
													"nodeType": "ExpressionStatement",
													"src": "1762:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2766,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "1836:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1846:3:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1836:13:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1853:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1836:18:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2780,
												"nodeType": "IfStatement",
												"src": "1832:83:32",
												"trueBody": {
													"expression": {
														"id": 2778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2771,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "1856:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2772,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "1865:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1873:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1865:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1864:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1912:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1864:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1856:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2779,
													"nodeType": "ExpressionStatement",
													"src": "1856:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2781,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "1930:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:3:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1930:13:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1947:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1930:18:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2795,
												"nodeType": "IfStatement",
												"src": "1926:83:32",
												"trueBody": {
													"expression": {
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2786,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "1950:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2787,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "1959:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1967:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1959:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2790,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1958:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2006:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1958:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1950:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2794,
													"nodeType": "ExpressionStatement",
													"src": "1950:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2796,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2024:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 2797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2034:4:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "2024:14:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2042:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2024:19:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2810,
												"nodeType": "IfStatement",
												"src": "2020:84:32",
												"trueBody": {
													"expression": {
														"id": 2808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2801,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2045:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2802,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2054:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2062:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2054:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2805,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2053:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2101:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2053:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2045:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2809,
													"nodeType": "ExpressionStatement",
													"src": "2045:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2811,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2119:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2129:4:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2119:14:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2137:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2119:19:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2825,
												"nodeType": "IfStatement",
												"src": "2115:84:32",
												"trueBody": {
													"expression": {
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2816,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2140:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2817,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2149:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2157:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2149:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2820,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2148:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2196:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2148:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2140:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2824,
													"nodeType": "ExpressionStatement",
													"src": "2140:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2826,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2214:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:4:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2214:14:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2232:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2214:19:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2840,
												"nodeType": "IfStatement",
												"src": "2210:84:32",
												"trueBody": {
													"expression": {
														"id": 2838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2831,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2235:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2832,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2244:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2252:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2244:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2243:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2291:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2243:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2235:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2839,
													"nodeType": "ExpressionStatement",
													"src": "2235:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2841,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2309:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2319:4:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2309:14:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2327:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2309:19:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2855,
												"nodeType": "IfStatement",
												"src": "2305:84:32",
												"trueBody": {
													"expression": {
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2846,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2330:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2847,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2339:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2347:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2339:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2338:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2386:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2338:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2330:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2854,
													"nodeType": "ExpressionStatement",
													"src": "2330:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2856,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2404:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2414:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2404:15:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2423:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2404:20:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2870,
												"nodeType": "IfStatement",
												"src": "2400:85:32",
												"trueBody": {
													"expression": {
														"id": 2868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2861,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2426:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2862,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2435:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2443:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2435:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2434:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2482:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2434:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2426:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2869,
													"nodeType": "ExpressionStatement",
													"src": "2426:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2871,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2500:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2510:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2500:15:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2500:20:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2885,
												"nodeType": "IfStatement",
												"src": "2496:85:32",
												"trueBody": {
													"expression": {
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2876,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2522:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2877,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2531:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2539:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2531:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2880,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2530:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2578:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2530:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2522:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2884,
													"nodeType": "ExpressionStatement",
													"src": "2522:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2886,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2596:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2606:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2596:15:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2615:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2596:20:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2900,
												"nodeType": "IfStatement",
												"src": "2592:85:32",
												"trueBody": {
													"expression": {
														"id": 2898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2891,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2618:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2892,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2627:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2635:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2627:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2626:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2674:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2626:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2618:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2899,
													"nodeType": "ExpressionStatement",
													"src": "2618:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2901,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2692:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2702:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2692:15:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2711:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2692:20:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2915,
												"nodeType": "IfStatement",
												"src": "2688:85:32",
												"trueBody": {
													"expression": {
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2906,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2714:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2907,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2723:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2731:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2723:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2910,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2722:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2770:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2722:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2714:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2914,
													"nodeType": "ExpressionStatement",
													"src": "2714:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2916,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2788:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2798:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2788:16:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2808:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2788:21:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2930,
												"nodeType": "IfStatement",
												"src": "2784:86:32",
												"trueBody": {
													"expression": {
														"id": 2928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2921,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2811:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2922,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2820:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2828:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2820:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2819:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2867:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2819:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2811:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2929,
													"nodeType": "ExpressionStatement",
													"src": "2811:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2931,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2885:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2895:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2885:16:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2905:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2885:21:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2945,
												"nodeType": "IfStatement",
												"src": "2881:86:32",
												"trueBody": {
													"expression": {
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2936,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "2908:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2937,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "2917:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2925:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2917:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2916:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2916:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2908:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2944,
													"nodeType": "ExpressionStatement",
													"src": "2908:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2946,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "2982:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2992:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2982:16:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3002:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2982:21:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2960,
												"nodeType": "IfStatement",
												"src": "2978:86:32",
												"trueBody": {
													"expression": {
														"id": 2958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2951,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3005:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2952,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "3014:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3022:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "3014:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3013:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3061:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3013:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3005:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2959,
													"nodeType": "ExpressionStatement",
													"src": "3005:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2961,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3079:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3089:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3079:16:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3099:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3079:21:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2975,
												"nodeType": "IfStatement",
												"src": "3075:86:32",
												"trueBody": {
													"expression": {
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2966,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3102:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2967,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "3111:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3119:34:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3111:42:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2970,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3110:44:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3158:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3110:51:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3102:59:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2974,
													"nodeType": "ExpressionStatement",
													"src": "3102:59:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2976,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3176:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3186:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3176:17:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3197:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3176:22:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2990,
												"nodeType": "IfStatement",
												"src": "3172:86:32",
												"trueBody": {
													"expression": {
														"id": 2988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2981,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3200:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2982,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "3209:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3217:33:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3209:41:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3208:43:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3255:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3208:50:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3200:58:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2989,
													"nodeType": "ExpressionStatement",
													"src": "3200:58:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2991,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3273:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3283:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3273:17:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3294:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3273:22:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3005,
												"nodeType": "IfStatement",
												"src": "3269:85:32",
												"trueBody": {
													"expression": {
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2996,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3297:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2997,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "3306:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3314:32:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3306:40:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3000,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3305:42:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3351:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3305:49:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3297:57:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3004,
													"nodeType": "ExpressionStatement",
													"src": "3297:57:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3006,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3369:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3379:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3369:17:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3390:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3369:22:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3020,
												"nodeType": "IfStatement",
												"src": "3365:83:32",
												"trueBody": {
													"expression": {
														"id": 3018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3011,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3393:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3012,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "3402:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 3013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3410:30:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3402:38:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3015,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3401:40:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3445:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3401:47:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3393:55:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3019,
													"nodeType": "ExpressionStatement",
													"src": "3393:55:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3021,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "3463:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3473:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3463:17:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3484:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3463:22:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3035,
												"nodeType": "IfStatement",
												"src": "3459:78:32",
												"trueBody": {
													"expression": {
														"id": 3033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3026,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3487:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3027,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "3496:5:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 3028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3504:25:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3496:33:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3495:35:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3534:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3495:42:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3487:50:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3034,
													"nodeType": "ExpressionStatement",
													"src": "3487:50:32"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3036,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "3554:4:32",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3561:1:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3554:8:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3049,
												"nodeType": "IfStatement",
												"src": "3550:47:32",
												"trueBody": {
													"expression": {
														"id": 3047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3039,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "3564:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3577:7:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 3041,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3577:7:32",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 3040,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3572:4:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3572:13:32",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3586:3:32",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3572:17:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3045,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2741,
																"src": "3592:5:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3572:25:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3564:33:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3048,
													"nodeType": "ExpressionStatement",
													"src": "3564:33:32"
												}
											},
											{
												"expression": {
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3050,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2702,
														"src": "3912:12:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3053,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2741,
																				"src": "3936:5:32",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3945:2:32",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3936:11:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3935:13:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3057,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2741,
																						"src": "3952:5:32",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 3060,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 3058,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3961:1:32",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 3059,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3966:2:32",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3961:7:32",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 3061,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3960:9:32",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3952:17:32",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 3063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3973:1:32",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3952:22:32",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 3066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3981:1:32",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3952:30:32",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 3065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3977:1:32",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 3068,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3951:32:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3935:48:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3927:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 3051,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3927:7:32",
																"typeDescriptions": {}
															}
														},
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3927:57:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3912:72:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 3072,
												"nodeType": "ExpressionStatement",
												"src": "3912:72:32"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "1069:301:32",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 3074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1385:18:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1410:4:32",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "1404:10:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2698,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1404:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:12:32"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1447:12:32",
												"nodeType": "VariableDeclaration",
												"scope": 3074,
												"src": "1439:20:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2701,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:22:32"
									},
									"scope": 3214,
									"src": "1376:2616:32",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3212,
										"nodeType": "Block",
										"src": "4503:4339:32",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3083,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "4622:12:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 3084,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "4638:14:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4622:30:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3086,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "4656:12:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3087,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2696,
																	"src": "4671:14:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4656:29:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4622:63:32",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 3090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4687:3:32",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 3082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4614:7:32",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4614:77:32",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3092,
												"nodeType": "ExpressionStatement",
												"src": "4614:77:32"
											},
											{
												"assignments": [
													3094
												],
												"declarations": [
													{
														"constant": false,
														"id": 3094,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4710:5:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "4702:13:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4702:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3101,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3097,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3077,
																"src": "4726:12:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4718:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3095,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4718:7:32",
																"typeDescriptions": {}
															}
														},
														"id": 3098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4718:21:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4743:2:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4718:27:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4702:43:32"
											},
											{
												"assignments": [
													3103
												],
												"declarations": [
													{
														"constant": false,
														"id": 3103,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4766:1:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "4758:9:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4758:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3105,
												"initialValue": {
													"id": 3104,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3094,
													"src": "4770:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4758:17:32"
											},
											{
												"assignments": [
													3107
												],
												"declarations": [
													{
														"constant": false,
														"id": 3107,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4794:3:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "4786:11:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4786:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3109,
												"initialValue": {
													"hexValue": "30",
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4800:1:32",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4786:15:32"
											},
											{
												"AST": {
													"nativeSrc": "4823:143:32",
													"nodeType": "YulBlock",
													"src": "4823:143:32",
													"statements": [
														{
															"nativeSrc": "4838:58:32",
															"nodeType": "YulVariableDeclaration",
															"src": "4838:58:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4851:1:32",
																		"nodeType": "YulLiteral",
																		"src": "4851:1:32",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "4857:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "4857:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4860:34:32",
																				"nodeType": "YulLiteral",
																				"src": "4860:34:32",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4854:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "4854:2:32"
																		},
																		"nativeSrc": "4854:41:32",
																		"nodeType": "YulFunctionCall",
																		"src": "4854:41:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4847:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "4847:3:32"
																},
																"nativeSrc": "4847:49:32",
																"nodeType": "YulFunctionCall",
																"src": "4847:49:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "4842:1:32",
																	"nodeType": "YulTypedName",
																	"src": "4842:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4910:17:32",
															"nodeType": "YulAssignment",
															"src": "4910:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "4920:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "4920:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "4925:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "4925:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4917:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "4917:2:32"
																},
																"nativeSrc": "4917:10:32",
																"nodeType": "YulFunctionCall",
																"src": "4917:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "4910:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:32"
																}
															]
														},
														{
															"nativeSrc": "4941:14:32",
															"nodeType": "YulAssignment",
															"src": "4941:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "4950:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "4950:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "4953:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "4953:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4946:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "4946:3:32"
																},
																"nativeSrc": "4946:9:32",
																"nodeType": "YulFunctionCall",
																"src": "4946:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4941:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "4941:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "4910:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "4920:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "4857:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "4941:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "4953:1:32",
														"valueSize": 1
													}
												],
												"id": 3110,
												"nodeType": "InlineAssembly",
												"src": "4814:152:32"
											},
											{
												"AST": {
													"nativeSrc": "4985:127:32",
													"nodeType": "YulBlock",
													"src": "4985:127:32",
													"statements": [
														{
															"nativeSrc": "5000:42:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5000:42:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5013:1:32",
																		"nodeType": "YulLiteral",
																		"src": "5013:1:32",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5019:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "5019:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5022:18:32",
																				"nodeType": "YulLiteral",
																				"src": "5022:18:32",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5016:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "5016:2:32"
																		},
																		"nativeSrc": "5016:25:32",
																		"nodeType": "YulFunctionCall",
																		"src": "5016:25:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5009:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:32"
																},
																"nativeSrc": "5009:33:32",
																"nodeType": "YulFunctionCall",
																"src": "5009:33:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5004:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5004:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5056:17:32",
															"nodeType": "YulAssignment",
															"src": "5056:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5066:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5066:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5071:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5071:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5063:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5063:2:32"
																},
																"nativeSrc": "5063:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5063:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5056:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:32"
																}
															]
														},
														{
															"nativeSrc": "5087:14:32",
															"nodeType": "YulAssignment",
															"src": "5087:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5096:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5096:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5099:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5099:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5092:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:32"
																},
																"nativeSrc": "5092:9:32",
																"nodeType": "YulFunctionCall",
																"src": "5092:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5087:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "5087:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5056:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5066:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5019:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5087:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5099:1:32",
														"valueSize": 1
													}
												],
												"id": 3111,
												"nodeType": "InlineAssembly",
												"src": "4976:136:32"
											},
											{
												"AST": {
													"nativeSrc": "5131:119:32",
													"nodeType": "YulBlock",
													"src": "5131:119:32",
													"statements": [
														{
															"nativeSrc": "5146:34:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5146:34:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5159:1:32",
																		"nodeType": "YulLiteral",
																		"src": "5159:1:32",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5165:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "5165:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5168:10:32",
																				"nodeType": "YulLiteral",
																				"src": "5168:10:32",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5162:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "5162:2:32"
																		},
																		"nativeSrc": "5162:17:32",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:17:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5155:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:32"
																},
																"nativeSrc": "5155:25:32",
																"nodeType": "YulFunctionCall",
																"src": "5155:25:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5150:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5150:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5194:17:32",
															"nodeType": "YulAssignment",
															"src": "5194:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5204:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5204:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5209:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5209:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5201:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5201:2:32"
																},
																"nativeSrc": "5201:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5201:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5194:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:32"
																}
															]
														},
														{
															"nativeSrc": "5225:14:32",
															"nodeType": "YulAssignment",
															"src": "5225:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5234:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5234:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5237:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5237:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5230:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5230:3:32"
																},
																"nativeSrc": "5230:9:32",
																"nodeType": "YulFunctionCall",
																"src": "5230:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5225:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "5225:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5194:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5204:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5165:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5225:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5237:1:32",
														"valueSize": 1
													}
												],
												"id": 3112,
												"nodeType": "InlineAssembly",
												"src": "5122:128:32"
											},
											{
												"AST": {
													"nativeSrc": "5269:115:32",
													"nodeType": "YulBlock",
													"src": "5269:115:32",
													"statements": [
														{
															"nativeSrc": "5284:30:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5284:30:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5297:1:32",
																		"nodeType": "YulLiteral",
																		"src": "5297:1:32",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5303:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "5303:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5306:6:32",
																				"nodeType": "YulLiteral",
																				"src": "5306:6:32",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5300:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "5300:2:32"
																		},
																		"nativeSrc": "5300:13:32",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:13:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5293:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:32"
																},
																"nativeSrc": "5293:21:32",
																"nodeType": "YulFunctionCall",
																"src": "5293:21:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5288:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5288:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5328:17:32",
															"nodeType": "YulAssignment",
															"src": "5328:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5338:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5338:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5343:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5343:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5335:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5335:2:32"
																},
																"nativeSrc": "5335:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5335:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5328:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5328:3:32"
																}
															]
														},
														{
															"nativeSrc": "5359:14:32",
															"nodeType": "YulAssignment",
															"src": "5359:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5368:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5368:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5371:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5371:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5364:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5364:3:32"
																},
																"nativeSrc": "5364:9:32",
																"nodeType": "YulFunctionCall",
																"src": "5364:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5359:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "5359:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5328:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5338:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5303:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5359:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5371:1:32",
														"valueSize": 1
													}
												],
												"id": 3113,
												"nodeType": "InlineAssembly",
												"src": "5260:124:32"
											},
											{
												"AST": {
													"nativeSrc": "5403:113:32",
													"nodeType": "YulBlock",
													"src": "5403:113:32",
													"statements": [
														{
															"nativeSrc": "5418:28:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5418:28:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5431:1:32",
																		"nodeType": "YulLiteral",
																		"src": "5431:1:32",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5437:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "5437:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5440:4:32",
																				"nodeType": "YulLiteral",
																				"src": "5440:4:32",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5434:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "5434:2:32"
																		},
																		"nativeSrc": "5434:11:32",
																		"nodeType": "YulFunctionCall",
																		"src": "5434:11:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5427:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5427:3:32"
																},
																"nativeSrc": "5427:19:32",
																"nodeType": "YulFunctionCall",
																"src": "5427:19:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5422:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5422:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5460:17:32",
															"nodeType": "YulAssignment",
															"src": "5460:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5470:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5470:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5475:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5475:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5467:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5467:2:32"
																},
																"nativeSrc": "5467:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5467:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5460:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5460:3:32"
																}
															]
														},
														{
															"nativeSrc": "5491:14:32",
															"nodeType": "YulAssignment",
															"src": "5491:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5500:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5500:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5503:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5503:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5496:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5496:3:32"
																},
																"nativeSrc": "5496:9:32",
																"nodeType": "YulFunctionCall",
																"src": "5496:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5491:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "5491:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5460:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5470:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5437:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5491:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5503:1:32",
														"valueSize": 1
													}
												],
												"id": 3114,
												"nodeType": "InlineAssembly",
												"src": "5394:122:32"
											},
											{
												"AST": {
													"nativeSrc": "5535:112:32",
													"nodeType": "YulBlock",
													"src": "5535:112:32",
													"statements": [
														{
															"nativeSrc": "5550:27:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5550:27:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5563:1:32",
																		"nodeType": "YulLiteral",
																		"src": "5563:1:32",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5569:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "5569:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5572:3:32",
																				"nodeType": "YulLiteral",
																				"src": "5572:3:32",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5566:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "5566:2:32"
																		},
																		"nativeSrc": "5566:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "5566:10:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5559:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:32"
																},
																"nativeSrc": "5559:18:32",
																"nodeType": "YulFunctionCall",
																"src": "5559:18:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5554:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5554:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5591:17:32",
															"nodeType": "YulAssignment",
															"src": "5591:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5601:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5601:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5606:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5606:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5598:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5598:2:32"
																},
																"nativeSrc": "5598:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5598:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5591:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:32"
																}
															]
														},
														{
															"nativeSrc": "5622:14:32",
															"nodeType": "YulAssignment",
															"src": "5622:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5631:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5631:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5634:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5634:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5627:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:32"
																},
																"nativeSrc": "5627:9:32",
																"nodeType": "YulFunctionCall",
																"src": "5627:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5622:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "5622:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5591:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5601:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5569:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5622:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5634:1:32",
														"valueSize": 1
													}
												],
												"id": 3115,
												"nodeType": "InlineAssembly",
												"src": "5526:121:32"
											},
											{
												"AST": {
													"nativeSrc": "5666:112:32",
													"nodeType": "YulBlock",
													"src": "5666:112:32",
													"statements": [
														{
															"nativeSrc": "5681:27:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5681:27:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5694:1:32",
																		"nodeType": "YulLiteral",
																		"src": "5694:1:32",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5700:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "5700:1:32"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5703:3:32",
																				"nodeType": "YulLiteral",
																				"src": "5703:3:32",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5697:2:32",
																			"nodeType": "YulIdentifier",
																			"src": "5697:2:32"
																		},
																		"nativeSrc": "5697:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "5697:10:32"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5690:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5690:3:32"
																},
																"nativeSrc": "5690:18:32",
																"nodeType": "YulFunctionCall",
																"src": "5690:18:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5685:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5685:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5722:17:32",
															"nodeType": "YulAssignment",
															"src": "5722:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5732:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5732:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5737:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5737:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5729:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5729:2:32"
																},
																"nativeSrc": "5729:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5729:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5722:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5722:3:32"
																}
															]
														},
														{
															"nativeSrc": "5753:14:32",
															"nodeType": "YulAssignment",
															"src": "5753:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5762:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5762:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5765:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5765:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5758:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5758:3:32"
																},
																"nativeSrc": "5758:9:32",
																"nodeType": "YulFunctionCall",
																"src": "5758:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5753:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "5753:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5722:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5732:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5700:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5765:1:32",
														"valueSize": 1
													}
												],
												"id": 3116,
												"nodeType": "InlineAssembly",
												"src": "5657:121:32"
											},
											{
												"AST": {
													"nativeSrc": "5797:76:32",
													"nodeType": "YulBlock",
													"src": "5797:76:32",
													"statements": [
														{
															"nativeSrc": "5812:19:32",
															"nodeType": "YulVariableDeclaration",
															"src": "5812:19:32",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "5824:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5824:1:32"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5827:3:32",
																		"nodeType": "YulLiteral",
																		"src": "5827:3:32",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5821:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5821:2:32"
																},
																"nativeSrc": "5821:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5821:10:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5816:1:32",
																	"nodeType": "YulTypedName",
																	"src": "5816:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5845:17:32",
															"nodeType": "YulAssignment",
															"src": "5845:17:32",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5855:3:32",
																		"nodeType": "YulIdentifier",
																		"src": "5855:3:32"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5860:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "5860:1:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5852:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "5852:2:32"
																},
																"nativeSrc": "5852:10:32",
																"nodeType": "YulFunctionCall",
																"src": "5852:10:32"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5845:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5845:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3107,
														"isOffset": false,
														"isSlot": false,
														"src": "5855:3:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "5824:1:32",
														"valueSize": 1
													}
												],
												"id": 3117,
												"nodeType": "InlineAssembly",
												"src": "5788:85:32"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3118,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3107,
														"src": "5889:3:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 3119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5896:3:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5889:10:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 3137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3130,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "5941:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3131,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3094,
																"src": "5945:5:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 3132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5955:3:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3133,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "5961:3:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5955:9:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5954:11:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5945:20:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5941:24:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3138,
													"nodeType": "ExpressionStatement",
													"src": "5941:24:32"
												},
												"id": 3139,
												"nodeType": "IfStatement",
												"src": "5885:80:32",
												"trueBody": {
													"expression": {
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3121,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "5901:1:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3122,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3094,
																"src": "5905:5:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3123,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "5915:3:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 3124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5921:3:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5915:9:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3126,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5914:11:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5905:20:32",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5901:24:32",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3129,
													"nodeType": "ExpressionStatement",
													"src": "5901:24:32"
												}
											},
											{
												"assignments": [
													3141
												],
												"declarations": [
													{
														"constant": false,
														"id": 3141,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5985:5:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "5978:12:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3140,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5978:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3151,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3144,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3107,
																			"src": "6001:3:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5994:6:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3142,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5994:6:32",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5994:11:32",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6008:3:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5994:17:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3148,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5993:19:32",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6016:2:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5993:25:32",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5978:40:32"
											},
											{
												"AST": {
													"nativeSrc": "6040:156:32",
													"nodeType": "YulBlock",
													"src": "6040:156:32",
													"statements": [
														{
															"nativeSrc": "6055:24:32",
															"nodeType": "YulAssignment",
															"src": "6055:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6064:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6064:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6073:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6073:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6076:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6076:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6069:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:32"
																		},
																		"nativeSrc": "6069:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6069:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6060:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6060:3:32"
																},
																"nativeSrc": "6060:19:32",
																"nodeType": "YulFunctionCall",
																"src": "6060:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6055:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6055:1:32"
																}
															]
														},
														{
															"nativeSrc": "6093:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "6093:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6106:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6106:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6111:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6111:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6102:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6102:3:32"
																},
																"nativeSrc": "6102:11:32",
																"nodeType": "YulFunctionCall",
																"src": "6102:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6097:1:32",
																	"nodeType": "YulTypedName",
																	"src": "6097:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6127:30:32",
															"nodeType": "YulAssignment",
															"src": "6127:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6139:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "6139:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6150:2:32",
																				"nodeType": "YulLiteral",
																				"src": "6150:2:32",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6154:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6154:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6146:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:32"
																		},
																		"nativeSrc": "6146:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6136:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "6136:2:32"
																},
																"nativeSrc": "6136:21:32",
																"nodeType": "YulFunctionCall",
																"src": "6136:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6127:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "6127:5:32"
																}
															]
														},
														{
															"nativeSrc": "6171:14:32",
															"nodeType": "YulAssignment",
															"src": "6171:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6180:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6180:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6183:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6183:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6176:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:32"
																},
																"nativeSrc": "6176:9:32",
																"nodeType": "YulFunctionCall",
																"src": "6176:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6171:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6171:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6127:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6139:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6055:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6073:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6076:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6111:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6171:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:1:32",
														"valueSize": 1
													}
												],
												"id": 3152,
												"nodeType": "InlineAssembly",
												"src": "6031:165:32"
											},
											{
												"AST": {
													"nativeSrc": "6215:156:32",
													"nodeType": "YulBlock",
													"src": "6215:156:32",
													"statements": [
														{
															"nativeSrc": "6230:24:32",
															"nodeType": "YulAssignment",
															"src": "6230:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6239:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6239:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6248:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6248:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6251:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6251:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6244:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6244:3:32"
																		},
																		"nativeSrc": "6244:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6244:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6235:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6235:3:32"
																},
																"nativeSrc": "6235:19:32",
																"nodeType": "YulFunctionCall",
																"src": "6235:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6230:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6230:1:32"
																}
															]
														},
														{
															"nativeSrc": "6268:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "6268:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6281:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6281:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6286:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6286:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6277:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:32"
																},
																"nativeSrc": "6277:11:32",
																"nodeType": "YulFunctionCall",
																"src": "6277:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6272:1:32",
																	"nodeType": "YulTypedName",
																	"src": "6272:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6302:30:32",
															"nodeType": "YulAssignment",
															"src": "6302:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6314:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "6314:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6325:2:32",
																				"nodeType": "YulLiteral",
																				"src": "6325:2:32",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6329:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6329:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6321:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6321:3:32"
																		},
																		"nativeSrc": "6321:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6311:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "6311:2:32"
																},
																"nativeSrc": "6311:21:32",
																"nodeType": "YulFunctionCall",
																"src": "6311:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6302:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "6302:5:32"
																}
															]
														},
														{
															"nativeSrc": "6346:14:32",
															"nodeType": "YulAssignment",
															"src": "6346:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6355:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6355:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6358:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6358:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6351:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:32"
																},
																"nativeSrc": "6351:9:32",
																"nodeType": "YulFunctionCall",
																"src": "6351:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6346:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6346:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6302:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6314:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6230:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6248:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6251:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6286:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6346:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6358:1:32",
														"valueSize": 1
													}
												],
												"id": 3153,
												"nodeType": "InlineAssembly",
												"src": "6206:165:32"
											},
											{
												"AST": {
													"nativeSrc": "6390:156:32",
													"nodeType": "YulBlock",
													"src": "6390:156:32",
													"statements": [
														{
															"nativeSrc": "6405:24:32",
															"nodeType": "YulAssignment",
															"src": "6405:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6414:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6423:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6423:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6426:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6426:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6419:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6419:3:32"
																		},
																		"nativeSrc": "6419:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6419:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6410:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6410:3:32"
																},
																"nativeSrc": "6410:19:32",
																"nodeType": "YulFunctionCall",
																"src": "6410:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6405:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6405:1:32"
																}
															]
														},
														{
															"nativeSrc": "6443:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "6443:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6456:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6456:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6461:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6461:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6452:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6452:3:32"
																},
																"nativeSrc": "6452:11:32",
																"nodeType": "YulFunctionCall",
																"src": "6452:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6447:1:32",
																	"nodeType": "YulTypedName",
																	"src": "6447:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6477:30:32",
															"nodeType": "YulAssignment",
															"src": "6477:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6489:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "6489:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6500:2:32",
																				"nodeType": "YulLiteral",
																				"src": "6500:2:32",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6504:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6504:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6496:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6496:3:32"
																		},
																		"nativeSrc": "6496:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6496:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6486:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "6486:2:32"
																},
																"nativeSrc": "6486:21:32",
																"nodeType": "YulFunctionCall",
																"src": "6486:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6477:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "6477:5:32"
																}
															]
														},
														{
															"nativeSrc": "6521:14:32",
															"nodeType": "YulAssignment",
															"src": "6521:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6530:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6530:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6533:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6533:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6526:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6526:3:32"
																},
																"nativeSrc": "6526:9:32",
																"nodeType": "YulFunctionCall",
																"src": "6526:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6521:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6521:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6477:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6489:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6405:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6423:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6426:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6461:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:1:32",
														"valueSize": 1
													}
												],
												"id": 3154,
												"nodeType": "InlineAssembly",
												"src": "6381:165:32"
											},
											{
												"AST": {
													"nativeSrc": "6565:156:32",
													"nodeType": "YulBlock",
													"src": "6565:156:32",
													"statements": [
														{
															"nativeSrc": "6580:24:32",
															"nodeType": "YulAssignment",
															"src": "6580:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6589:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6589:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6598:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6598:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6601:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6601:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6594:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6594:3:32"
																		},
																		"nativeSrc": "6594:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6594:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6585:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:32"
																},
																"nativeSrc": "6585:19:32",
																"nodeType": "YulFunctionCall",
																"src": "6585:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6580:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6580:1:32"
																}
															]
														},
														{
															"nativeSrc": "6618:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "6618:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6631:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6631:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6636:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6636:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6627:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6627:3:32"
																},
																"nativeSrc": "6627:11:32",
																"nodeType": "YulFunctionCall",
																"src": "6627:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6622:1:32",
																	"nodeType": "YulTypedName",
																	"src": "6622:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6652:30:32",
															"nodeType": "YulAssignment",
															"src": "6652:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6664:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6675:2:32",
																				"nodeType": "YulLiteral",
																				"src": "6675:2:32",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6679:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6679:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6671:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:32"
																		},
																		"nativeSrc": "6671:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6661:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "6661:2:32"
																},
																"nativeSrc": "6661:21:32",
																"nodeType": "YulFunctionCall",
																"src": "6661:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6652:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "6652:5:32"
																}
															]
														},
														{
															"nativeSrc": "6696:14:32",
															"nodeType": "YulAssignment",
															"src": "6696:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6705:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6705:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6708:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6708:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6701:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6701:3:32"
																},
																"nativeSrc": "6701:9:32",
																"nodeType": "YulFunctionCall",
																"src": "6701:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6696:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6696:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6652:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6664:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6580:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6598:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6601:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6636:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6696:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6708:1:32",
														"valueSize": 1
													}
												],
												"id": 3155,
												"nodeType": "InlineAssembly",
												"src": "6556:165:32"
											},
											{
												"AST": {
													"nativeSrc": "6740:156:32",
													"nodeType": "YulBlock",
													"src": "6740:156:32",
													"statements": [
														{
															"nativeSrc": "6755:24:32",
															"nodeType": "YulAssignment",
															"src": "6755:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6764:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6764:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6773:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6773:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6776:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6776:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6769:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6769:3:32"
																		},
																		"nativeSrc": "6769:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6769:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6760:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6760:3:32"
																},
																"nativeSrc": "6760:19:32",
																"nodeType": "YulFunctionCall",
																"src": "6760:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6755:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6755:1:32"
																}
															]
														},
														{
															"nativeSrc": "6793:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "6793:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6806:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6806:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6811:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6811:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6802:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:32"
																},
																"nativeSrc": "6802:11:32",
																"nodeType": "YulFunctionCall",
																"src": "6802:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6797:1:32",
																	"nodeType": "YulTypedName",
																	"src": "6797:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6827:30:32",
															"nodeType": "YulAssignment",
															"src": "6827:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6839:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "6839:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6850:2:32",
																				"nodeType": "YulLiteral",
																				"src": "6850:2:32",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6854:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6854:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6846:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:32"
																		},
																		"nativeSrc": "6846:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6846:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6836:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "6836:2:32"
																},
																"nativeSrc": "6836:21:32",
																"nodeType": "YulFunctionCall",
																"src": "6836:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6827:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "6827:5:32"
																}
															]
														},
														{
															"nativeSrc": "6871:14:32",
															"nodeType": "YulAssignment",
															"src": "6871:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6880:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6880:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6883:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6883:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6876:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:32"
																},
																"nativeSrc": "6876:9:32",
																"nodeType": "YulFunctionCall",
																"src": "6876:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6871:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6871:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6827:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "6839:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6755:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6773:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6776:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6883:1:32",
														"valueSize": 1
													}
												],
												"id": 3156,
												"nodeType": "InlineAssembly",
												"src": "6731:165:32"
											},
											{
												"AST": {
													"nativeSrc": "6915:156:32",
													"nodeType": "YulBlock",
													"src": "6915:156:32",
													"statements": [
														{
															"nativeSrc": "6930:24:32",
															"nodeType": "YulAssignment",
															"src": "6930:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6939:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6939:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6948:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6948:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6951:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "6951:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6944:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "6944:3:32"
																		},
																		"nativeSrc": "6944:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "6944:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6935:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6935:3:32"
																},
																"nativeSrc": "6935:19:32",
																"nodeType": "YulFunctionCall",
																"src": "6935:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6930:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "6930:1:32"
																}
															]
														},
														{
															"nativeSrc": "6968:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "6968:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6981:3:32",
																		"nodeType": "YulLiteral",
																		"src": "6981:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6986:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "6986:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6977:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "6977:3:32"
																},
																"nativeSrc": "6977:11:32",
																"nodeType": "YulFunctionCall",
																"src": "6977:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6972:1:32",
																	"nodeType": "YulTypedName",
																	"src": "6972:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7002:30:32",
															"nodeType": "YulAssignment",
															"src": "7002:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7014:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "7014:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7025:2:32",
																				"nodeType": "YulLiteral",
																				"src": "7025:2:32",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7029:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7029:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7021:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:32"
																		},
																		"nativeSrc": "7021:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7011:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "7011:2:32"
																},
																"nativeSrc": "7011:21:32",
																"nodeType": "YulFunctionCall",
																"src": "7011:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7002:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "7002:5:32"
																}
															]
														},
														{
															"nativeSrc": "7046:14:32",
															"nodeType": "YulAssignment",
															"src": "7046:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7055:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7055:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7058:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7058:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7051:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7051:3:32"
																},
																"nativeSrc": "7051:9:32",
																"nodeType": "YulFunctionCall",
																"src": "7051:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7046:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7046:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7002:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7014:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6930:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6948:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6951:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "6986:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7046:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7058:1:32",
														"valueSize": 1
													}
												],
												"id": 3157,
												"nodeType": "InlineAssembly",
												"src": "6906:165:32"
											},
											{
												"AST": {
													"nativeSrc": "7090:156:32",
													"nodeType": "YulBlock",
													"src": "7090:156:32",
													"statements": [
														{
															"nativeSrc": "7105:24:32",
															"nodeType": "YulAssignment",
															"src": "7105:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7114:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7114:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7123:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7123:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7126:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7126:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7119:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7119:3:32"
																		},
																		"nativeSrc": "7119:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7119:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7110:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7110:3:32"
																},
																"nativeSrc": "7110:19:32",
																"nodeType": "YulFunctionCall",
																"src": "7110:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7105:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7105:1:32"
																}
															]
														},
														{
															"nativeSrc": "7143:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "7143:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7156:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7156:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7161:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7161:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7152:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7152:3:32"
																},
																"nativeSrc": "7152:11:32",
																"nodeType": "YulFunctionCall",
																"src": "7152:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7147:1:32",
																	"nodeType": "YulTypedName",
																	"src": "7147:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7177:30:32",
															"nodeType": "YulAssignment",
															"src": "7177:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7189:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "7189:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7200:2:32",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:32",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7204:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7204:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7196:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7196:3:32"
																		},
																		"nativeSrc": "7196:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7186:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "7186:2:32"
																},
																"nativeSrc": "7186:21:32",
																"nodeType": "YulFunctionCall",
																"src": "7186:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7177:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "7177:5:32"
																}
															]
														},
														{
															"nativeSrc": "7221:14:32",
															"nodeType": "YulAssignment",
															"src": "7221:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7230:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7230:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7233:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7233:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7226:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:32"
																},
																"nativeSrc": "7226:9:32",
																"nodeType": "YulFunctionCall",
																"src": "7226:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7221:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7221:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7177:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7189:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7105:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7123:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7126:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7161:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7221:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7233:1:32",
														"valueSize": 1
													}
												],
												"id": 3158,
												"nodeType": "InlineAssembly",
												"src": "7081:165:32"
											},
											{
												"AST": {
													"nativeSrc": "7265:156:32",
													"nodeType": "YulBlock",
													"src": "7265:156:32",
													"statements": [
														{
															"nativeSrc": "7280:24:32",
															"nodeType": "YulAssignment",
															"src": "7280:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7289:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7289:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7298:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7298:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7301:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7301:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7294:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7294:3:32"
																		},
																		"nativeSrc": "7294:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7294:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7285:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:32"
																},
																"nativeSrc": "7285:19:32",
																"nodeType": "YulFunctionCall",
																"src": "7285:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7280:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7280:1:32"
																}
															]
														},
														{
															"nativeSrc": "7318:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "7318:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7331:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7336:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7336:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7327:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7327:3:32"
																},
																"nativeSrc": "7327:11:32",
																"nodeType": "YulFunctionCall",
																"src": "7327:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7322:1:32",
																	"nodeType": "YulTypedName",
																	"src": "7322:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7352:30:32",
															"nodeType": "YulAssignment",
															"src": "7352:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7364:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "7364:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7375:2:32",
																				"nodeType": "YulLiteral",
																				"src": "7375:2:32",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7379:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7379:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7371:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7371:3:32"
																		},
																		"nativeSrc": "7371:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7371:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7361:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:32"
																},
																"nativeSrc": "7361:21:32",
																"nodeType": "YulFunctionCall",
																"src": "7361:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7352:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "7352:5:32"
																}
															]
														},
														{
															"nativeSrc": "7396:14:32",
															"nodeType": "YulAssignment",
															"src": "7396:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7405:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7405:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7408:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7408:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7401:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7401:3:32"
																},
																"nativeSrc": "7401:9:32",
																"nodeType": "YulFunctionCall",
																"src": "7401:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7396:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7396:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7352:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7364:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7280:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7298:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7301:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7336:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7396:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7408:1:32",
														"valueSize": 1
													}
												],
												"id": 3159,
												"nodeType": "InlineAssembly",
												"src": "7256:165:32"
											},
											{
												"AST": {
													"nativeSrc": "7440:156:32",
													"nodeType": "YulBlock",
													"src": "7440:156:32",
													"statements": [
														{
															"nativeSrc": "7455:24:32",
															"nodeType": "YulAssignment",
															"src": "7455:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7464:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7464:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7473:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7473:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7476:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7476:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7469:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7469:3:32"
																		},
																		"nativeSrc": "7469:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7469:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7460:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:32"
																},
																"nativeSrc": "7460:19:32",
																"nodeType": "YulFunctionCall",
																"src": "7460:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7455:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7455:1:32"
																}
															]
														},
														{
															"nativeSrc": "7493:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "7493:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7506:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7506:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7511:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7511:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7502:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:32"
																},
																"nativeSrc": "7502:11:32",
																"nodeType": "YulFunctionCall",
																"src": "7502:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7497:1:32",
																	"nodeType": "YulTypedName",
																	"src": "7497:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7527:30:32",
															"nodeType": "YulAssignment",
															"src": "7527:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7539:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "7539:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7550:2:32",
																				"nodeType": "YulLiteral",
																				"src": "7550:2:32",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7554:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7554:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7546:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:32"
																		},
																		"nativeSrc": "7546:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7546:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7536:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "7536:2:32"
																},
																"nativeSrc": "7536:21:32",
																"nodeType": "YulFunctionCall",
																"src": "7536:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7527:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "7527:5:32"
																}
															]
														},
														{
															"nativeSrc": "7571:14:32",
															"nodeType": "YulAssignment",
															"src": "7571:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7580:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7580:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7583:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7583:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7576:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7576:3:32"
																},
																"nativeSrc": "7576:9:32",
																"nodeType": "YulFunctionCall",
																"src": "7576:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7571:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7571:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7527:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7539:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7455:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7473:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7476:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7511:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7571:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7583:1:32",
														"valueSize": 1
													}
												],
												"id": 3160,
												"nodeType": "InlineAssembly",
												"src": "7431:165:32"
											},
											{
												"AST": {
													"nativeSrc": "7615:156:32",
													"nodeType": "YulBlock",
													"src": "7615:156:32",
													"statements": [
														{
															"nativeSrc": "7630:24:32",
															"nodeType": "YulAssignment",
															"src": "7630:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7639:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7639:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7648:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7648:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7651:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7651:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7644:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7644:3:32"
																		},
																		"nativeSrc": "7644:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7644:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7635:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:32"
																},
																"nativeSrc": "7635:19:32",
																"nodeType": "YulFunctionCall",
																"src": "7635:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7630:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7630:1:32"
																}
															]
														},
														{
															"nativeSrc": "7668:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "7668:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7681:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7681:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7686:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7686:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7677:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7677:3:32"
																},
																"nativeSrc": "7677:11:32",
																"nodeType": "YulFunctionCall",
																"src": "7677:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7672:1:32",
																	"nodeType": "YulTypedName",
																	"src": "7672:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7702:30:32",
															"nodeType": "YulAssignment",
															"src": "7702:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7714:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "7714:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7725:2:32",
																				"nodeType": "YulLiteral",
																				"src": "7725:2:32",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7729:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7729:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7721:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7721:3:32"
																		},
																		"nativeSrc": "7721:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7721:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7711:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "7711:2:32"
																},
																"nativeSrc": "7711:21:32",
																"nodeType": "YulFunctionCall",
																"src": "7711:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7702:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "7702:5:32"
																}
															]
														},
														{
															"nativeSrc": "7746:14:32",
															"nodeType": "YulAssignment",
															"src": "7746:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7755:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7755:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7758:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7758:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7751:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7751:3:32"
																},
																"nativeSrc": "7751:9:32",
																"nodeType": "YulFunctionCall",
																"src": "7751:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7746:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7746:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7702:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7714:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7630:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7648:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7651:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7686:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7746:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7758:1:32",
														"valueSize": 1
													}
												],
												"id": 3161,
												"nodeType": "InlineAssembly",
												"src": "7606:165:32"
											},
											{
												"AST": {
													"nativeSrc": "7790:156:32",
													"nodeType": "YulBlock",
													"src": "7790:156:32",
													"statements": [
														{
															"nativeSrc": "7805:24:32",
															"nodeType": "YulAssignment",
															"src": "7805:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7814:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7814:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7823:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7823:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7826:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7826:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7819:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:32"
																		},
																		"nativeSrc": "7819:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7819:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7810:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7810:3:32"
																},
																"nativeSrc": "7810:19:32",
																"nodeType": "YulFunctionCall",
																"src": "7810:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7805:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7805:1:32"
																}
															]
														},
														{
															"nativeSrc": "7843:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "7843:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7856:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7856:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7861:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7861:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7852:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:32"
																},
																"nativeSrc": "7852:11:32",
																"nodeType": "YulFunctionCall",
																"src": "7852:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7847:1:32",
																	"nodeType": "YulTypedName",
																	"src": "7847:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7877:30:32",
															"nodeType": "YulAssignment",
															"src": "7877:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7889:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7900:2:32",
																				"nodeType": "YulLiteral",
																				"src": "7900:2:32",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7904:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7904:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7896:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7896:3:32"
																		},
																		"nativeSrc": "7896:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7896:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7886:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "7886:2:32"
																},
																"nativeSrc": "7886:21:32",
																"nodeType": "YulFunctionCall",
																"src": "7886:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7877:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "7877:5:32"
																}
															]
														},
														{
															"nativeSrc": "7921:14:32",
															"nodeType": "YulAssignment",
															"src": "7921:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7930:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7930:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7933:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "7933:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7926:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:32"
																},
																"nativeSrc": "7926:9:32",
																"nodeType": "YulFunctionCall",
																"src": "7926:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7921:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7921:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7877:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7805:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7823:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7826:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7861:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7921:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7933:1:32",
														"valueSize": 1
													}
												],
												"id": 3162,
												"nodeType": "InlineAssembly",
												"src": "7781:165:32"
											},
											{
												"AST": {
													"nativeSrc": "7965:156:32",
													"nodeType": "YulBlock",
													"src": "7965:156:32",
													"statements": [
														{
															"nativeSrc": "7980:24:32",
															"nodeType": "YulAssignment",
															"src": "7980:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7989:3:32",
																		"nodeType": "YulLiteral",
																		"src": "7989:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7998:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "7998:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8001:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8001:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7994:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "7994:3:32"
																		},
																		"nativeSrc": "7994:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "7994:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7985:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:32"
																},
																"nativeSrc": "7985:19:32",
																"nodeType": "YulFunctionCall",
																"src": "7985:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7980:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "7980:1:32"
																}
															]
														},
														{
															"nativeSrc": "8018:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "8018:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8031:3:32",
																		"nodeType": "YulLiteral",
																		"src": "8031:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8036:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8036:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8027:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8027:3:32"
																},
																"nativeSrc": "8027:11:32",
																"nodeType": "YulFunctionCall",
																"src": "8027:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8022:1:32",
																	"nodeType": "YulTypedName",
																	"src": "8022:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8052:30:32",
															"nodeType": "YulAssignment",
															"src": "8052:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8064:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "8064:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8075:2:32",
																				"nodeType": "YulLiteral",
																				"src": "8075:2:32",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8079:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8079:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8071:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:32"
																		},
																		"nativeSrc": "8071:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "8071:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8061:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "8061:2:32"
																},
																"nativeSrc": "8061:21:32",
																"nodeType": "YulFunctionCall",
																"src": "8061:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8052:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "8052:5:32"
																}
															]
														},
														{
															"nativeSrc": "8096:14:32",
															"nodeType": "YulAssignment",
															"src": "8096:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "8105:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8105:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8108:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8108:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8101:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8101:3:32"
																},
																"nativeSrc": "8101:9:32",
																"nodeType": "YulFunctionCall",
																"src": "8101:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8096:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "8096:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "8052:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "8064:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7980:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "7998:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8001:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8036:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8096:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8108:1:32",
														"valueSize": 1
													}
												],
												"id": 3163,
												"nodeType": "InlineAssembly",
												"src": "7956:165:32"
											},
											{
												"AST": {
													"nativeSrc": "8140:156:32",
													"nodeType": "YulBlock",
													"src": "8140:156:32",
													"statements": [
														{
															"nativeSrc": "8155:24:32",
															"nodeType": "YulAssignment",
															"src": "8155:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8164:3:32",
																		"nodeType": "YulLiteral",
																		"src": "8164:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "8173:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8173:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8176:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8176:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8169:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:32"
																		},
																		"nativeSrc": "8169:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "8169:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8160:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:32"
																},
																"nativeSrc": "8160:19:32",
																"nodeType": "YulFunctionCall",
																"src": "8160:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8155:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "8155:1:32"
																}
															]
														},
														{
															"nativeSrc": "8193:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "8193:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8206:3:32",
																		"nodeType": "YulLiteral",
																		"src": "8206:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8211:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8211:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8202:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8202:3:32"
																},
																"nativeSrc": "8202:11:32",
																"nodeType": "YulFunctionCall",
																"src": "8202:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8197:1:32",
																	"nodeType": "YulTypedName",
																	"src": "8197:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8227:30:32",
															"nodeType": "YulAssignment",
															"src": "8227:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8239:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "8239:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8250:2:32",
																				"nodeType": "YulLiteral",
																				"src": "8250:2:32",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8254:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8254:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8246:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "8246:3:32"
																		},
																		"nativeSrc": "8246:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "8246:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8236:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "8236:2:32"
																},
																"nativeSrc": "8236:21:32",
																"nodeType": "YulFunctionCall",
																"src": "8236:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8227:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "8227:5:32"
																}
															]
														},
														{
															"nativeSrc": "8271:14:32",
															"nodeType": "YulAssignment",
															"src": "8271:14:32",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "8280:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8280:1:32"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8283:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8283:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8276:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8276:3:32"
																},
																"nativeSrc": "8276:9:32",
																"nodeType": "YulFunctionCall",
																"src": "8276:9:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8271:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "8271:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "8227:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "8239:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8155:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8173:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8176:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8271:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8283:1:32",
														"valueSize": 1
													}
												],
												"id": 3164,
												"nodeType": "InlineAssembly",
												"src": "8131:165:32"
											},
											{
												"AST": {
													"nativeSrc": "8315:128:32",
													"nodeType": "YulBlock",
													"src": "8315:128:32",
													"statements": [
														{
															"nativeSrc": "8330:24:32",
															"nodeType": "YulAssignment",
															"src": "8330:24:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8339:3:32",
																		"nodeType": "YulLiteral",
																		"src": "8339:3:32",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "8348:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8348:1:32"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8351:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8351:1:32"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8344:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "8344:3:32"
																		},
																		"nativeSrc": "8344:9:32",
																		"nodeType": "YulFunctionCall",
																		"src": "8344:9:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8335:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8335:3:32"
																},
																"nativeSrc": "8335:19:32",
																"nodeType": "YulFunctionCall",
																"src": "8335:19:32"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8330:1:32",
																	"nodeType": "YulIdentifier",
																	"src": "8330:1:32"
																}
															]
														},
														{
															"nativeSrc": "8368:20:32",
															"nodeType": "YulVariableDeclaration",
															"src": "8368:20:32",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8381:3:32",
																		"nodeType": "YulLiteral",
																		"src": "8381:3:32",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8386:1:32",
																		"nodeType": "YulIdentifier",
																		"src": "8386:1:32"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8377:3:32",
																	"nodeType": "YulIdentifier",
																	"src": "8377:3:32"
																},
																"nativeSrc": "8377:11:32",
																"nodeType": "YulFunctionCall",
																"src": "8377:11:32"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8372:1:32",
																	"nodeType": "YulTypedName",
																	"src": "8372:1:32",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8402:30:32",
															"nodeType": "YulAssignment",
															"src": "8402:30:32",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8414:5:32",
																		"nodeType": "YulIdentifier",
																		"src": "8414:5:32"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8425:2:32",
																				"nodeType": "YulLiteral",
																				"src": "8425:2:32",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8429:1:32",
																				"nodeType": "YulIdentifier",
																				"src": "8429:1:32"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8421:3:32",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:32"
																		},
																		"nativeSrc": "8421:10:32",
																		"nodeType": "YulFunctionCall",
																		"src": "8421:10:32"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8411:2:32",
																	"nodeType": "YulIdentifier",
																	"src": "8411:2:32"
																},
																"nativeSrc": "8411:21:32",
																"nodeType": "YulFunctionCall",
																"src": "8411:21:32"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8402:5:32",
																	"nodeType": "YulIdentifier",
																	"src": "8402:5:32"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "8402:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3141,
														"isOffset": false,
														"isSlot": false,
														"src": "8414:5:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8330:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8348:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8351:1:32",
														"valueSize": 1
													},
													{
														"declaration": 3103,
														"isOffset": false,
														"isSlot": false,
														"src": "8386:1:32",
														"valueSize": 1
													}
												],
												"id": 3165,
												"nodeType": "InlineAssembly",
												"src": "8306:137:32"
											},
											{
												"assignments": [
													3167
												],
												"declarations": [
													{
														"constant": false,
														"id": 3167,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8462:13:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "8455:20:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3166,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8455:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3171,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3168,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3141,
														"src": "8478:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 3169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8486:24:32",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8478:32:32",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8455:55:32"
											},
											{
												"assignments": [
													3173
												],
												"declarations": [
													{
														"constant": false,
														"id": 3173,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8547:7:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "8541:13:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3172,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8541:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3183,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3176,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3167,
																			"src": "8564:13:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 3177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8580:37:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8564:53:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8563:55:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8622:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8563:62:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8557:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 3174,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8557:5:32",
															"typeDescriptions": {}
														}
													},
													"id": 3182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8557:69:32",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8541:85:32"
											},
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8643:6:32",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "8637:12:32",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3184,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8637:5:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3195,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3188,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3167,
																			"src": "8659:13:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 3189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8675:39:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8659:55:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8658:57:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8719:3:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8658:64:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8652:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 3186,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8652:5:32",
															"typeDescriptions": {}
														}
													},
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8652:71:32",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8637:86:32"
											},
											{
												"expression": {
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3196,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3080,
														"src": "8736:4:32",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3197,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "8743:7:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3198,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3185,
																"src": "8754:6:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8743:17:32",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3202,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "8792:6:32",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 3201,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3074,
																		"src": "8773:18:32",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8773:26:32",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 3204,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "8803:12:32",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8773:42:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 3207,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "8827:7:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 3208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8773:61:32",
															"trueExpression": {
																"id": 3206,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3185,
																"src": "8818:6:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 3209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8743:91:32",
														"trueExpression": {
															"id": 3200,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3173,
															"src": "8763:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8736:98:32",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "8736:98:32"
											}
										]
									},
									"documentation": {
										"id": 3075,
										"nodeType": "StructuredDocumentation",
										"src": "4000:412:32",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 3213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4427:18:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3077,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4454:12:32",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "4446:20:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3076,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4445:22:32"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4497:4:32",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "4491:10:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3079,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4491:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:12:32"
									},
									"scope": 3214,
									"src": "4418:4424:32",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3215,
							"src": "311:8534:32",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:8799:32"
				},
				"id": 32
			},
			"libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							845
						],
						"TransferHelper": [
							3385
						]
					},
					"id": 3386,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:33"
						},
						{
							"absolutePath": "interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 3217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3386,
							"sourceUnit": 846,
							"src": "73:34:33",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3385,
							"linearizedBaseContracts": [
								3385
							],
							"name": "TransferHelper",
							"nameLocation": "119:14:33",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3265,
										"nodeType": "Block",
										"src": "684:233:33",
										"statements": [
											{
												"assignments": [
													3230,
													3232
												],
												"declarations": [
													{
														"constant": false,
														"id": 3230,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "701:7:33",
														"nodeType": "VariableDeclaration",
														"scope": 3265,
														"src": "696:12:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3229,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "696:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3232,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "723:4:33",
														"nodeType": "VariableDeclaration",
														"scope": 3265,
														"src": "710:17:33",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3231,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "710:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3245,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 3237,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "778:6:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$845_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 3238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "785:12:33",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 826,
																		"src": "778:19:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "798:8:33",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "778:28:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 3240,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3222,
																	"src": "808:4:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3241,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "814:2:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3226,
																	"src": "818:5:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3235,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "755:3:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "759:18:33",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "755:22:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "755:69:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3220,
															"src": "744:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "750:4:33",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "744:10:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:81:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "695:130:33"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3247,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3230,
																"src": "844:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3248,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3232,
																					"src": "856:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "861:6:33",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "856:11:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "871:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "856:16:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3254,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3232,
																					"src": "887:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3256,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "894:4:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3255,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "894:4:33",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3257,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "893:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3252,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "876:3:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "880:6:33",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "876:10:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "876:24:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "856:44:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "855:46:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "844:57:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 3262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "903:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 3246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "836:7:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:73:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3264,
												"nodeType": "ExpressionStatement",
												"src": "836:73:33"
											}
										]
									},
									"documentation": {
										"id": 3218,
										"nodeType": "StructuredDocumentation",
										"src": "141:403:33",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 3266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "559:16:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "594:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "586:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "618:4:33",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "610:12:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "641:2:33",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "633:10:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "662:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3266,
												"src": "654:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:99:33"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:0:33"
									},
									"scope": 3385,
									"src": "550:367:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3311,
										"nodeType": "Block",
										"src": "1323:209:33",
										"statements": [
											{
												"assignments": [
													3277,
													3279
												],
												"declarations": [
													{
														"constant": false,
														"id": 3277,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1340:7:33",
														"nodeType": "VariableDeclaration",
														"scope": 3311,
														"src": "1335:12:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3276,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1335:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3279,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1362:4:33",
														"nodeType": "VariableDeclaration",
														"scope": 3311,
														"src": "1349:17:33",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3278,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1349:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3291,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 3284,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "1404:6:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$845_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 3285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1411:8:33",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 794,
																		"src": "1404:15:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 3286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1420:8:33",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1404:24:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 3287,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3271,
																	"src": "1430:2:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3288,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3273,
																	"src": "1434:5:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:18:33",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1381:22:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:59:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3280,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3269,
															"src": "1370:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1376:4:33",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1370:10:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1370:71:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1334:107:33"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3293,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3277,
																"src": "1460:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3294,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3279,
																					"src": "1472:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1477:6:33",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1472:11:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1487:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1472:16:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3300,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3279,
																					"src": "1503:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3302,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1510:4:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3301,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1510:4:33",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3303,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1509:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3298,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1492:3:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1496:6:33",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1492:10:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1492:24:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1472:44:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3306,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1471:46:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1460:57:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 3308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1519:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 3292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1452:7:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1452:72:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3310,
												"nodeType": "ExpressionStatement",
												"src": "1452:72:33"
											}
										]
									},
									"documentation": {
										"id": 3267,
										"nodeType": "StructuredDocumentation",
										"src": "925:285:33",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 3312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1225:12:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1256:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "1248:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1280:2:33",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "1272:10:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "1293:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:76:33"
									},
									"returnParameters": {
										"id": 3275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:0:33"
									},
									"scope": 3385,
									"src": "1216:316:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3357,
										"nodeType": "Block",
										"src": "1998:208:33",
										"statements": [
											{
												"assignments": [
													3323,
													3325
												],
												"declarations": [
													{
														"constant": false,
														"id": 3323,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2015:7:33",
														"nodeType": "VariableDeclaration",
														"scope": 3357,
														"src": "2010:12:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3322,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2010:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3325,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2037:4:33",
														"nodeType": "VariableDeclaration",
														"scope": 3357,
														"src": "2024:17:33",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2024:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3337,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 3330,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "2079:6:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$845_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2086:7:33",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 814,
																		"src": "2079:14:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 3332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2094:8:33",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2079:23:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 3333,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3317,
																	"src": "2104:2:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3319,
																	"src": "2108:5:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3328,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2056:3:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2060:18:33",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2056:22:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2056:58:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3315,
															"src": "2045:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2051:4:33",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2045:10:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:70:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2009:106:33"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3339,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3323,
																"src": "2134:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3340,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3325,
																					"src": "2146:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2151:6:33",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2146:11:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2161:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2146:16:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3346,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3325,
																					"src": "2177:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3348,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2184:4:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3347,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2184:4:33",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3349,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2183:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3344,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2166:3:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2170:6:33",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2166:10:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2166:24:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2146:44:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3352,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2145:46:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2134:57:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 3354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 3338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2126:7:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:72:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3356,
												"nodeType": "ExpressionStatement",
												"src": "2126:72:33"
											}
										]
									},
									"documentation": {
										"id": 3313,
										"nodeType": "StructuredDocumentation",
										"src": "1540:346:33",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 3358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1901:11:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1931:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1923:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1955:2:33",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1947:10:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1976:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "1968:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1912:76:33"
									},
									"returnParameters": {
										"id": 3321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:33"
									},
									"scope": 3385,
									"src": "1892:314:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3383,
										"nodeType": "Block",
										"src": "2463:107:33",
										"statements": [
											{
												"assignments": [
													3367,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 3367,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2480:7:33",
														"nodeType": "VariableDeclaration",
														"scope": 3383,
														"src": "2475:12:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3366,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2475:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 3377,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2525:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2515:9:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 3372,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2519:5:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 3375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2515:12:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 3368,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3361,
																"src": "2493:2:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2496:4:33",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2493:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3370,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3363,
																"src": "2508:5:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2493:21:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:35:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2474:54:33"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3379,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3367,
															"src": "2547:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 3380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:5:33",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 3378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2539:7:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2539:23:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3382,
												"nodeType": "ExpressionStatement",
												"src": "2539:23:33"
											}
										]
									},
									"documentation": {
										"id": 3359,
										"nodeType": "StructuredDocumentation",
										"src": "2214:182:33",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 3384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2411:15:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2435:2:33",
												"nodeType": "VariableDeclaration",
												"scope": 3384,
												"src": "2427:10:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2447:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 3384,
												"src": "2439:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:27:33"
									},
									"returnParameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2463:0:33"
									},
									"scope": 3385,
									"src": "2402:168:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3386,
							"src": "111:2462:33",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:2529:33"
				},
				"id": 33
			}
		}
	}
}